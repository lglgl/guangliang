{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/book/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/book/source/css/book.scss","path":"css/book.scss","modified":0,"renderable":1},{"_id":"themes/book/source/js/book-menu.js","path":"js/book-menu.js","modified":0,"renderable":1},{"_id":"themes/book/source/js/book-post.js","path":"js/book-post.js","modified":0,"renderable":1},{"_id":"themes/book/source/js/book-toc.js","path":"js/book-toc.js","modified":0,"renderable":1},{"_id":"themes/book/source/js/book.js","path":"js/book.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/06虚拟化/云原生.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1721053896334},{"_id":"source/_posts/高级算法/Kruskal算法.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1720604777464},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat - 副本.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1691221840000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nacos.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690961666000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nginx.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690961666000},{"_id":"source/_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Nginx.md","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1690961666000},{"_id":"source/.DS_Store","hash":"fc7fe3f941a998037ff2878be1750be55923a30b","modified":1721292775824},{"_id":"source/home.md","hash":"f2d76677c0e11a66448a912f4024b9127321726e","modified":1720453816682},{"_id":"source/_posts/.DS_Store","hash":"8acff583f9f09777b95908cab3f0e442415ab937","modified":1721282663046},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1720447155442},{"_id":"source/_posts/kk.md","hash":"09ca614dd59bb622eefd27b793080b00e75ad740","modified":1720517430652},{"_id":"source/menu.md","hash":"a999ff223e2f133c20e50c079adf87a0c9423585","modified":1721384870663},{"_id":"source/_posts/06虚拟化/6.1.虚拟化ESXi与KVM对比.md","hash":"8208ddb4ee9d81eee32a9b3f642fa463305cbb50","modified":1721284124720},{"_id":"source/_posts/08自动化工具/Ansible安装配置.md","hash":"1402e86796ac1b70d07b0729c5177ad08f9f1ed4","modified":1721282414309},{"_id":"source/_posts/06虚拟化/K8S安装.md","hash":"ee696d56a203abaddfdb031603a857abc3dfc1c6","modified":1721277873310},{"_id":"source/_posts/07中间件/0.1.2023秋计划.md","hash":"854a23c6d7af8c414177a0137e3acdeb97dbfe31","modified":1686794728000},{"_id":"source/_posts/07中间件/.DS_Store","hash":"fc653e18b37cff77d603b65aa3d6d7a340afee7e","modified":1721282711539},{"_id":"source/_posts/07中间件/2.1.版本选型.md","hash":"c205d08e8c2ed5c094921af68afc1e7d5d760ac1","modified":1688808846000},{"_id":"source/_posts/06虚拟化/岗位摘要.md","hash":"a60f09560e722e2335f27998d083abbf2e6545b4","modified":1721277886802},{"_id":"source/_posts/07中间件/0.9.0.常用命令.md","hash":"eb90addd6e774f75160769445adac994c8b2039f","modified":1688725122000},{"_id":"source/_posts/07中间件/2.1.Ansible使用说明.md","hash":"d61e7f31a4f2c70b8b5f122473b5a71deed2943e","modified":1693538650000},{"_id":"source/_posts/07中间件/2.Ansible安装配置.md","hash":"89d71cd266b72a1bee3befac4fe6b4d833755e6f","modified":1721281084547},{"_id":"source/_posts/07中间件/3.1.Zookeeper集群环境部署.md","hash":"b54d73a4c6ea6fc99285dcdc48093fb1c5130664","modified":1687165526000},{"_id":"source/_posts/07中间件/4.1.Redis集群环境部署.md","hash":"4afc3b1edc100ec212b72eb34b9e7f066889e7a0","modified":1687232272000},{"_id":"source/_posts/07中间件/5.2.Docker环境部署.md","hash":"fd9a1e189b909bae775c5b856875d8e533438658","modified":1688039386000},{"_id":"source/_posts/07中间件/5.3.Docker-compose环境部署.md","hash":"d669a5a9540605405e5c6328fcdd9788d10bedc2","modified":1685931912000},{"_id":"source/_posts/07中间件/5.1.Kubernetes集群环境部署.md","hash":"f205ef9aef9ab36e4b5290ca5b80af3934dbff34","modified":1721277213614},{"_id":"source/_posts/07中间件/9.2.系统安装初始化 - 副本.md","hash":"2b4f49dc3d0b6d7d4986726731bf2119ae428fa2","modified":1692961866000},{"_id":"source/_posts/07中间件/9.2.系统安装初始化.md","hash":"198328be6606071fe20db3ef4019cbcc3400a822","modified":1693466862000},{"_id":"source/_posts/07中间件/9.3.阿里云中间件升级.md","hash":"2ff709fd77ece03bc93029b75ea2ebba92d8921e","modified":1691029230000},{"_id":"source/_posts/07中间件/9.5.阿里云开发主机维护.md","hash":"6b825afc87cff54a7655755986277c1e1873a0c0","modified":1692582696000},{"_id":"source/_posts/07中间件/9.9.日志采集系统部署.md","hash":"bb271d1bb642627abe575bba0e680e523aeeee18","modified":1687873322000},{"_id":"source/_posts/07中间件/9A.服务器部署前资料收集.md","hash":"af2741f9610f69f85907162a94896e7074df4f8b","modified":1686794950000},{"_id":"source/_posts/07中间件/7.2.Mysql双主集群部署.md","hash":"b13b117698e54c91d4b2ef2ee1d7c15595f54d85","modified":1721283046527},{"_id":"source/_posts/07中间件/4.1.Redis集群环境部署-yum.md","hash":"aeb1d5d5aaad983d5ec95b43a8a44e7e3674e89d","modified":1686986196000},{"_id":"source/_posts/07中间件/7.1.Zookeeper集群环境部署.md","hash":"c2debba9d97532c7ec090131199c328a0a22a5ab","modified":1721282551876},{"_id":"source/_posts/07中间件/A.系统初始化.SSH配置.md","hash":"41b5f21ee3ccf8ea7948453ee4fd5ae51cf432bf","modified":1688002238000},{"_id":"source/_posts/07中间件/A.新机配置.md","hash":"eaa286ce1b0d3948f45ee74aaf4494279b928694","modified":1690957584000},{"_id":"source/_posts/07中间件/A.集群自动化管理.Ansible.md","hash":"8817477912eaa1ee565258561d3ee81d8edb3048","modified":1689043706000},{"_id":"source/_posts/07中间件/B.集群容器部署.Docker.md","hash":"1b3e2d7bd17a5999dd4a3da580ee93ac6bd0de70","modified":1690784470000},{"_id":"source/_posts/07中间件/B.集群容器部署.Docker-compose.md","hash":"5f213da94fe21715e1fe2b17adca0041efe89015","modified":1690784470000},{"_id":"source/_posts/07中间件/F.维护命令.运行.md","hash":"a3c726a748a69a0c3d95147321cc41b6f54b1de5","modified":1689929336000},{"_id":"source/_posts/07中间件/E.集群防火墙配置.md","hash":"9d75f50bff45c2cdbe6b13494f0e79567eab0c2a","modified":1693390008000},{"_id":"source/_posts/07中间件/Z.技术学习.docker组网.md","hash":"dfb08d9e051c95d279634ee1a93be3751f19ed03","modified":1688558760000},{"_id":"source/_posts/07中间件/A.天翼云.md","hash":"391eea4534136023369aa840f1785a1db71f30c2","modified":1693232934000},{"_id":"source/_posts/07中间件/分区调整.md","hash":"e3075af034da1f3fcd2a28dda33a77c6c58637a6","modified":1693228504000},{"_id":"source/_posts/07中间件/挂载win共享路径.md","hash":"13aa8d1f20f61cf19263f76848b2b79bd7f05348","modified":1693223180000},{"_id":"source/_posts/07中间件/A.系统初始化.md","hash":"91f552d28cfdd94a70fd770d99cc201aa246c4c1","modified":1693036128000},{"_id":"source/_posts/07中间件/战训部署0724.md","hash":"f38d78b24bf972ebf40cc136be3fcce1c9395663","modified":1690445812000},{"_id":"source/_posts/10未分类/10.1.linux系统备份到NAS服务器.md","hash":"76224f1a580e20bc6b48b3d3401c05c8d678db82","modified":1721384873755},{"_id":"source/_posts/07中间件/记录0717.md","hash":"50172ece6b664dc19c53801d85bdca37d1d8240e","modified":1693476218000},{"_id":"source/_posts/数字取证/考试内容.md","hash":"3a9bc72b1c38cf95ab19a1f34a382652472ee5e5","modified":1720853365923},{"_id":"source/_posts/面试经验/nginx.md","hash":"a65de2728b647ac25073f1bc27c8a575fcc7edd1","modified":1721382598802},{"_id":"source/_posts/面试经验/传音控股.md","hash":"8545716752f52811d09cee9f91e8851758227e25","modified":1721272947213},{"_id":"source/_posts/09异常处理/docker提示磁盘空间不足.md","hash":"8b112ed3efc7c0cf3b70c7360e82aa6d539faf1e","modified":1721282396565},{"_id":"source/_posts/面试经验/linux.md","hash":"da146dae7e76f28eab16340a7f694759b0605cf4","modified":1721383798620},{"_id":"source/_posts/高级算法/2019年题目.md","hash":"8b55c91c2f0b671d3ff974cf10c94458f4f9dc04","modified":1720606535708},{"_id":"source/_posts/高级算法/BFS.md","hash":"089cffb2a6ee9bb9b2586baa9c9a17ba3d4e9d9a","modified":1720606036856},{"_id":"source/_posts/高级算法/GreedyAlgorithm.md","hash":"89fd450b2019d2587839c60aebffc1ce815740e4","modified":1720785800580},{"_id":"source/_posts/高级算法/P-NP问题.md","hash":"6ab6e24f14fce38918505279ccbce0f91b9e688f","modified":1720606036874},{"_id":"source/_posts/高级算法/图论.md","hash":"7be90fc14c6399c848e77be6bfd6200e77eb5a6f","modified":1720774154489},{"_id":"source/_posts/07中间件/A.运维工具/2.Ansible分发开发程序.md","hash":"33283845f05661ead4ebdfeb5e16ed09fab60f04","modified":1693313630000},{"_id":"source/_posts/高级算法/PrimJarnik算法.md","hash":"ed7740d9e744b8a6beb8c08964061bb85561445e","modified":1720780583243},{"_id":"source/_posts/高级算法/高级算法目录.md","hash":"214d9bf46de62eab699d0775287c04b4f75f9d56","modified":1720606131419},{"_id":"source/_posts/07中间件/A.运维工具/2.Ansible安装配置.md","hash":"15bc9dd75613e143ee4e6d02e72b1b23c9e31913","modified":1692098652000},{"_id":"source/_posts/07中间件/A.运维工具/2.1.Ansible使用说明.md","hash":"d61e7f31a4f2c70b8b5f122473b5a71deed2943e","modified":1686794728000},{"_id":"source/_posts/07中间件/F.系统加固/openssh升级.md","hash":"bd5c823ab5d3ddc13a89d09c98a9eceec5eae46f","modified":1693385874000},{"_id":"source/_posts/高级算法/队栈.md","hash":"f6043aea395533eee6fbc5422e0012bf3cf03c44","modified":1720773518483},{"_id":"source/_posts/07中间件/F.系统加固/系统加固.md","hash":"2d687bd2c03e74e16f14dc6c4ac175328f3a272f","modified":1692844154000},{"_id":"source/_posts/07中间件/F.系统加固/深圳机场-安全方案.md","hash":"3a27b13b2e580db88a272d99533d12d983349c2c","modified":1693390008000},{"_id":"source/_posts/07中间件/D.项目分类/.DS_Store","hash":"42151a5f67948fab647b7e913d12adadc5fafa8a","modified":1721282689496},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker-compose.md","hash":"8ed0043e1084436bae4c8ec168fe9f5b2b962db0","modified":1692098652000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch.md","hash":"5cbb9927c6e6d785ed439f11bb6ac4828a7e642b","modified":1693036740000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.A总览.md","hash":"831b7646ed19d2ffa37c8cd7f19ea3b9bcf215c2","modified":1690006846000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch配置.md","hash":"d66cd2229c7997441c28d8c292be777c6b8ceea3","modified":1693036516000},{"_id":"source/_posts/07中间件/E.异常处理/E.1.Inodes写满.md","hash":"931b334c5b1927a1d280aed9bf3bb7bfac608ae3","modified":1691120798000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka配置.md","hash":"04fb72aa4fae14c9077bda8039d7085acc34b057","modified":1693034614000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka.md","hash":"b45b7182e95581ccb2c432a6934e76ca00d6c6b6","modified":1688376688000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Minio.md","hash":"ee41b2e053fd72e55139f6d4920eb5aab9378fdb","modified":1689239404000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Minio配置.md","hash":"a2ac421da78a35534b4948d646c0cf874447137a","modified":1691752990000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Nacos.md","hash":"6ae330df3eaa3724a30aa1eb007670ff466df2d8","modified":1689929336000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker.md","hash":"98fb1c12256937cdb0f3b567bb0342ae020b306d","modified":1691203860000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Naco配置.md","hash":"20880ece13864805e4d7445e928230231f657f8a","modified":1688375946000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis.md","hash":"63e2bc8a254bf193d54419b09f287fd9bb44e83a","modified":1687684452000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis检查.md","hash":"ef6e1fe08c6ed5062d21ae7c71043803096dbbd8","modified":1691658410000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis配置.md","hash":"5e3e5f1efd40edd1943385b2e3ae6ac24df5a5c4","modified":1689429434000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper.md","hash":"2ff2a6bfcbd80fef5a7d1c1e11f5b8e50c4c73ef","modified":1689921342000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper配置.md","hash":"56c6e3cc43c1180585308ef5d2535d2dfda9fb45","modified":1689316088000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.Keepalived.md","hash":"5996bc81f08fb8a24e5137c4da85ca03ba6462ae","modified":1691834544000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL双主.md","hash":"1c43c5f23aa3a76e211449c7e480b526b0346ba2","modified":1691834528000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL备份.md","hash":"559bd53ff562afbecb746853bd1652e762cc0e49","modified":1692098652000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL异常.md","hash":"7d31f0578d1e911c0222a0f86a79f53e27661a7e","modified":1693476196000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL配置.md","hash":"32b9c7445b2eb84b58190448524e9acabe803ac9","modified":1693223186000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL维护.md","hash":"53376609b821b1f57c2dc3d5e08e2044394528a3","modified":1693550290000},{"_id":"source/_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL.md","hash":"432e46c2178ec281fad9d4e4cacbb4a938c8d3e7","modified":1693478864000},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.1总览.md","hash":"7e54e2f884c891e8997bf8946fa50c4dd0514818","modified":1692098652000},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Elasticsearch.md","hash":"b34f8d8011e89799818ddf4c40a220d7cbc60e17","modified":1687871602000},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Kibana.md","hash":"d0875f13defe7b10350698c24103a9a1cbe9e5d6","modified":1691139206000},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat.md","hash":"7616844166dfa632993038645ca71e81dfbb739e","modified":1693474860000},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Logstash.md","hash":"267b1cedda976845225c2cafc1573ecece6b7702","modified":1687938146000},{"_id":"source/_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Kafka.md","hash":"437b7cc67ad972f44663636b4252120353a1e521","modified":1688002840000},{"_id":"source/_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.1总览.md","hash":"2b858fecfecb7dcea41af960b385d1b338ad7690","modified":1691979614000},{"_id":"source/_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Alertmanager.md","hash":"0dc0a45ffd314a72fea60c554e1149d0f37f0705","modified":1687845620000},{"_id":"source/_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Exporter.md","hash":"1848435f7ceea0b3a1b167993c895bf72f9e4f66","modified":1693474858000},{"_id":"source/_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Prometheus.md","hash":"3c14c85a531e447ba43bf9a1f0792f8765302851","modified":1690116928000},{"_id":"source/_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Grafana.md","hash":"0149e11ba5afa70f6b3b38ece2e024a1e08271d4","modified":1692098652000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.A总览.md","hash":"8c9ec32e382c900a628c45f0447fc7e9ca14c517","modified":1691131490000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Mysql.md","hash":"d9a27d65f4372c5946a1290c416f5ed634763005","modified":1691636080000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Mysql双主.md","hash":"afd9d1cc038e3b420adc9c5d65ea74f69f80dc63","modified":1692098652000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Vsftpd.md","hash":"9e2501ceabc28654f47891e83fbc42c0455e8853","modified":1693362658000},{"_id":"source/_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.A总览.md","hash":"03e2b1dd955e09ae9f6d86bd78c8ae65759180f4","modified":1691247412000},{"_id":"source/_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Keepalived.md","hash":"67243769381c10bedcaef2f81b5fc306190fb9a7","modified":1692276662000},{"_id":"source/_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.mysql.md","hash":"0442cc3700daabc7f83bcb0b599888ecbbe7d2c7","modified":1692276978000},{"_id":"source/_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Keepalived.md","hash":"c13270ee54f17f8e2a4cdbe41a3f1d14c94f40b0","modified":1691658420000},{"_id":"source/_posts/07中间件/D.项目分类/6.天翼云-入口-网关/H.公网入口.A总览.md","hash":"b432dcede8fbd57f9314a8b7f20eb0e3b53c2f97","modified":1690021966000},{"_id":"themes/book/LICENSE","hash":"03157c4b6e91d27f69508dbdc62c09bc38fd78fc","modified":1720447350098},{"_id":"themes/book/README.md","hash":"a8506b68e699aabf38beec0f4150d4dd1477f85d","modified":1720447350098},{"_id":"themes/book/layout/archive.ejs","hash":"dec48c24f9f94a2ddd733f70a96fba0886f563e5","modified":1720447350100},{"_id":"themes/book/layout/categories.ejs","hash":"e3e1aa97b9a21f5bd85c4f0c56d79e7096eda48c","modified":1720447350100},{"_id":"themes/book/layout/index.ejs","hash":"ce0892216ca0cd664796c873190d26f2430e4959","modified":1720447350100},{"_id":"themes/book/layout/layout.ejs","hash":"6b197a2edf59592f3061ea521fa216fef1a3b168","modified":1720447350100},{"_id":"themes/book/layout/page.ejs","hash":"2e53811dda487a8faf75b3c3372fc8b8726d1f55","modified":1720447350101},{"_id":"themes/book/_config.yml","hash":"993945ea4495d087f680681c2f897401e6c95ca9","modified":1721279904081},{"_id":"themes/book/layout/post.ejs","hash":"37ea12159553023f07d1f99815a5a9b82a9c3ef7","modified":1720447350101},{"_id":"themes/book/scripts/render.js","hash":"0190cae64d12ac47b601b9fb0f1434a09c5ac168","modified":1720447350101},{"_id":"themes/book/scripts/merge-configs.js","hash":"73d4d9c35cedfe4ed99c849c73fcee4012738a1c","modified":1720447350101},{"_id":"themes/book/layout/_components/brand.ejs","hash":"a5272fbc584e7b89c0ccf205661e90f2c99354a1","modified":1720447350098},{"_id":"themes/book/layout/tags.ejs","hash":"f2744252f6de3451c19d695f8f518c5a054f58b7","modified":1720447350101},{"_id":"themes/book/layout/_components/menu.ejs","hash":"c2c0efd59fed898cb41ad6a0ec94c49aca3e7fea","modified":1720447350098},{"_id":"themes/book/layout/_components/sidebar-toggle.ejs","hash":"53d6fc0e8bfb8f36942d2d7afcbb306dd0f89c31","modified":1720447350099},{"_id":"themes/book/layout/_lib/comments.ejs","hash":"823afb4dcbee4e8b2258671aaf1332fed038774e","modified":1720447350099},{"_id":"themes/book/layout/_components/toc.ejs","hash":"92259942c0cbe60ede9db992f7142206e93431f2","modified":1721385126054},{"_id":"themes/book/layout/_lib/google-analytics.ejs","hash":"8fac33b80001d1eba38ec7f35e9bd22d79705f43","modified":1720447350099},{"_id":"themes/book/layout/_lib/zooming-image.ejs","hash":"c9b2c4772bac30ca2a8939e6e305c9c9397d9003","modified":1720447350099},{"_id":"themes/book/layout/_partials/navbar.ejs","hash":"10eae8b5ed78e82a38b58d9525422f10b9be89cf","modified":1720447350100},{"_id":"themes/book/layout/_components/post-meta.ejs","hash":"7d048833f713a76155a39c2694f2c132168b07b9","modified":1721385100016},{"_id":"themes/book/layout/_partials/post-info.ejs","hash":"d9ff5a91882a47ceb2144dcdccdd9b56191e4228","modified":1720447350100},{"_id":"themes/book/source/css/_variables.scss","hash":"1e24fa7f2467f06be7ab6d034a47ff2438384d51","modified":1720447350104},{"_id":"themes/book/source/css/book.scss","hash":"cac0f32677c1e3ede2700a0dd02dec6aba6997cd","modified":1720447350104},{"_id":"themes/book/source/js/book-menu.js","hash":"deebd62833f484c84e08357291ccc797c7544eb6","modified":1720447350104},{"_id":"themes/book/layout/_partials/head.ejs","hash":"41fecd85cd1540c811937b4f9df5061d3df2207b","modified":1720453233490},{"_id":"themes/book/source/js/book-post.js","hash":"d239e79163ceb5a37c9274c0c83010eea80554d8","modified":1720447350104},{"_id":"themes/book/source/js/book-toc.js","hash":"fcbf2a88d9bab50dbd1337150a5909e8b9eecd13","modified":1720447350104},{"_id":"themes/book/source/js/book.js","hash":"c150427c7397aea35ad83624f8db8f4b19846bb6","modified":1720447350104},{"_id":"themes/book/source/css/_components/brand.scss","hash":"d6d944b2ce367bc67249dcb917c2a36df2c7d285","modified":1720447350102},{"_id":"themes/book/source/css/_components/comments.scss","hash":"1e5204db1a98e70ccb3027df8eb5a0fbfa3530c1","modified":1720447350102},{"_id":"themes/book/source/css/_components/menu.scss","hash":"0b9ba0d7f5df5f9a1a4321b9f5ede89fc92be0b4","modified":1720447350102},{"_id":"themes/book/source/css/_components/post-meta.scss","hash":"489673d51d470fc6c47c0c5e942fb027f6f9846b","modified":1720447350102},{"_id":"themes/book/source/css/_components/post.scss","hash":"ad6e61a4a7fa6259577dc34263be727a4afc8b03","modified":1720447350103},{"_id":"themes/book/source/css/_components/sidebar-toggle.scss","hash":"9f1d81d4e98c0c2f62a17512bbd7fbdff59d5bfc","modified":1720447350103},{"_id":"themes/book/source/css/_components/toc.scss","hash":"30c6fa4a4d9ed70b43ac26bd869ac8f58e3e0214","modified":1720447350103},{"_id":"themes/book/source/css/_partials/book-archive.scss","hash":"c5ac27a8769860174af70d8111b2c2beee2921d6","modified":1720447350103},{"_id":"themes/book/source/css/_partials/book-content.scss","hash":"8e7a53eb11d87925d2bf940bb29ea5a9ea8a22f4","modified":1720447350103},{"_id":"themes/book/source/css/_partials/book-navbar.scss","hash":"c7311a76fc29a262ed03091661b4dea30d53d4f7","modified":1720447350103},{"_id":"themes/book/source/css/_components/highlight/diff.scss","hash":"e1a087d44e499beb05d0906b8a64fff62a7ba01d","modified":1720447350102},{"_id":"themes/book/source/css/_components/highlight/highlight.scss","hash":"5d7851dec993537f0e32d0301bae70ac0ccbb52d","modified":1720447350102},{"_id":"themes/book/source/css/_partials/book-sidebar.scss","hash":"3e4b1b06404b084df7cbc4a31cfaf7db3594e75c","modified":1720447350103},{"_id":"themes/book/source/css/_components/highlight/theme.scss","hash":"ec78a76370e44d9f1978c6f4ec2f3d523286f23a","modified":1720447350102},{"_id":"themes/book/source/favicon.png","hash":"2dbd6cb7b96c11aafd3d66ea99a35480c81da822","modified":1720598723199},{"_id":"public/面试经验/nginx.html","hash":"5151c461d8175c98bbf61099167b4b02879f39ae","modified":1721385140785},{"_id":"public/面试经验/linux.html","hash":"7fc78db01170ab44a651a965943535cb5aac451e","modified":1721385140785},{"_id":"public/06虚拟化/6.1.虚拟化ESXi与KVM对比.html","hash":"a6bcf38cebfbe82e662ac35f51ab2264030632c3","modified":1721385140785},{"_id":"public/08自动化工具/Ansible安装配置.html","hash":"a0796a5274b9ded3c2d000cb732dd0d092b6dcee","modified":1721385140785},{"_id":"public/06虚拟化/岗位摘要.html","hash":"a75405c6fc2ab160b447e4760de1131b6d135460","modified":1721385140785},{"_id":"public/06虚拟化/K8S安装.html","hash":"ac28070f593193a79cb7d91493843f1219981ab3","modified":1721385140785},{"_id":"public/06虚拟化/云原生.html","hash":"2371dabf9703a493a2dc3bf0560c79b888c6d186","modified":1721385140785},{"_id":"public/面试经验/传音控股.html","hash":"662795967583cee3e17d1dc1f4a071a5592cef75","modified":1721385140785},{"_id":"public/数字取证/考试内容.html","hash":"6781cb36de32e98ef3cbb970937c514eb3eb1326","modified":1721385140785},{"_id":"public/高级算法/GreedyAlgorithm.html","hash":"538a98d38a375c21f2abd4c933b8971224c6484b","modified":1721385140785},{"_id":"public/高级算法/PrimJarnik算法.html","hash":"0d127777760fa81f052fd572eb4c30e94b49bcb1","modified":1721385140785},{"_id":"public/高级算法/队栈.html","hash":"9886a79fd41b6e2ee04171a0e1f5adeb54274bb6","modified":1721385140785},{"_id":"public/高级算法/P-NP问题.html","hash":"fb82533e21215b2bf5f93b0958e86e0d59dd8bd1","modified":1721385140785},{"_id":"public/高级算法/BFS.html","hash":"ad2a2ae79c29039ed6dab54b14ebfbbb8668cb3f","modified":1721385140785},{"_id":"public/高级算法/高级算法目录.html","hash":"c9421bfa21b3c4c2f6c0880d0ba41608170e8914","modified":1721385140785},{"_id":"public/高级算法/Kruskal算法.html","hash":"67c7e2cd674023c8c4bcc0353e0ac3aeb40bc73c","modified":1721385140785},{"_id":"public/高级算法/2019年题目.html","hash":"6751cede5b05bbe7cf43d669a7ccd43691f845ec","modified":1721385140785},{"_id":"public/高级算法/图论.html","hash":"cf3956db45686868491190853a83e42290a59cc4","modified":1721385140785},{"_id":"public/hello-world.html","hash":"342a39f6490a383d8cdafea683b95309db1e7ce8","modified":1721385140785},{"_id":"public/kk.html","hash":"63f0de684a191115f1dfb8669591733ab406bc1a","modified":1721385140785},{"_id":"public/07中间件/F.系统加固/系统加固.html","hash":"5018090806eb9508522cd5e51036c845d41cdd83","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/6.天翼云-入口-网关/H.公网入口.A总览.html","hash":"30c5037ca75f3a3d3f2a884c3cf106bddb0d9f5e","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Nginx.html","hash":"d8d2eb969949f1637b69a077b715711dafdadb76","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Keepalived.html","hash":"761980959b1ad67e2ccc6e6e53488289f8f16bd0","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.mysql.html","hash":"94e38d53a67e59e0a0bb49e680037d1c2c8f36d7","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.A总览.html","hash":"e5c04040f2134030c3c20a52a89ba07c77864d6b","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nacos.html","hash":"d8d2eb969949f1637b69a077b715711dafdadb76","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nginx.html","hash":"d8d2eb969949f1637b69a077b715711dafdadb76","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Mysql双主.html","hash":"56fe03b0208488168cb77911146954deb7757d0a","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.A总览.html","hash":"a708291c48c196c2c10f7be9d7ba04f9b5fe89e4","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Logstash.html","hash":"75acb4f61e1ccde29c35134532aa402fdc4eb024","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat - 副本.html","hash":"d8d2eb969949f1637b69a077b715711dafdadb76","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Elasticsearch.html","hash":"93066dcb516b1e66ba3a7d3bac3b7e55f8ba3229","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat.html","hash":"9fb293416d73064541d98781fb3c566d85dbef3f","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Kafka.html","hash":"019910716d12a8b03dd386a35a32ab9a2f110862","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.1总览.html","hash":"dc8c89c21411a21046b0f4a6e5ec501aa20e94c8","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Prometheus.html","hash":"3a6fb571ed99e8a4a907da4caebcb5eeeaf37111","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Grafana.html","hash":"f64ac071cf9d65d05610fbf825db763d26db7357","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Alertmanager.html","hash":"50f8068b6033e3042a2e4ae54b09267ebbed1519","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.1总览.html","hash":"88183185ee4ea565cc91a99e0770e0e0ab1a4a4a","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL维护.html","hash":"b2c9bccb486477feb19757ad4ee2e6dcd9dd76a8","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL备份.html","hash":"6672141ca1e4c141b592a63369a813993f60ce10","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL双主.html","hash":"d9b3e8be1bf4c2c37b441c8a3b32b4d062542f0f","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper配置.html","hash":"3f4eb1a63d18ea7dd803df10cc3de74438a45afb","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.Keepalived.html","hash":"0fd0e95cca386481108ffe80a35babad19c48b5e","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper.html","hash":"dee553010e1d155314e64f43ddf1ffd575118521","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis检查.html","hash":"5425af5bf4fdd3dd27a09a974e72f3e84893cea1","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Naco配置.html","hash":"93ddd32bb79af8beb4009d964590cc4c517135b9","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis.html","hash":"c5e80b1f9cd24d995821c6322cd8f99fc84807b6","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Nacos.html","hash":"a320bc7619b7acccec4d0351157b21d536b96485","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Minio.html","hash":"7be83663a5afc76c9bc0a215c4e54c88224990f8","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka.html","hash":"0fcb298fd0ffcac3d5ffdb47c987bdb8dc85750c","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch配置.html","hash":"bac860608d4028eded3df1222ad3a54936cb8ef3","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker.html","hash":"248e32d4842a66bf9253c8adbd11ab92bbd5e6ef","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker-compose.html","hash":"72229902c30df195c3629e076cb21121b4603112","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.A总览.html","hash":"e7eebe821728be155a5728e05a7a30613b4d4519","modified":1721385140785},{"_id":"public/07中间件/A.运维工具/2.Ansible分发开发程序.html","hash":"6db3dea8cff9b1f58ef2b641e83ab26fe7f53603","modified":1721385140785},{"_id":"public/07中间件/A.运维工具/2.Ansible安装配置.html","hash":"03d9e975a064ec988ae3133e40ab567d321167c8","modified":1721385140785},{"_id":"public/07中间件/A.运维工具/2.1.Ansible使用说明.html","hash":"dac3a52f36fd6e977761abf7ad294004a21a45df","modified":1721385140785},{"_id":"public/07中间件/F.维护命令.运行.html","hash":"740e2fcd6cf92c2d74811d456c6f24c8642f3113","modified":1721385140785},{"_id":"public/07中间件/B.集群容器部署.Docker.html","hash":"2b4ba72e437a064fc7a73ad7cc2bf90b60075742","modified":1721385140785},{"_id":"public/07中间件/B.集群容器部署.Docker-compose.html","hash":"72229902c30df195c3629e076cb21121b4603112","modified":1721385140785},{"_id":"public/07中间件/A.系统初始化.SSH配置.html","hash":"d8fa861b74deeb00a681f8927c766347976afccd","modified":1721385140785},{"_id":"public/07中间件/A.集群自动化管理.Ansible.html","hash":"f268783898c910ab1c67425ddaa59bc04ba42fe5","modified":1721385140785},{"_id":"public/07中间件/A.新机配置.html","hash":"b104fc979f3d1008ad56debd350c1a225f900f63","modified":1721385140785},{"_id":"public/07中间件/A.天翼云.html","hash":"9e602674ca046cbd13b65612fe54ef804daa5a95","modified":1721385140785},{"_id":"public/07中间件/9.5.阿里云开发主机维护.html","hash":"0749af071b241c6c0a4eb34de965a6483ef895b3","modified":1721385140785},{"_id":"public/07中间件/9A.服务器部署前资料收集.html","hash":"e2feef3516e79bfc71f00a69c41965765f97da4b","modified":1721385140785},{"_id":"public/07中间件/5.2.Docker环境部署.html","hash":"1809e5229700355f56c774e7e2684343d70e870b","modified":1721385140785},{"_id":"public/07中间件/5.3.Docker-compose环境部署.html","hash":"0b66ff0101e236713877580cdcee348b495197c9","modified":1721385140785},{"_id":"public/07中间件/2.1.Ansible使用说明.html","hash":"dac3a52f36fd6e977761abf7ad294004a21a45df","modified":1721385140785},{"_id":"public/07中间件/2.Ansible安装配置.html","hash":"8adba0c0cb6e5e1aeec7325447a34178b569dc5d","modified":1721385140785},{"_id":"public/07中间件/0.1.2023秋计划.html","hash":"fd2ba031b36652ad31b68f0e37332c5735501305","modified":1721385140785},{"_id":"public/07中间件/0.9.0.常用命令.html","hash":"0d84f0ad5d14762f0b34529f890b302bbf4fba30","modified":1721385140785},{"_id":"public/10未分类/10.1.linux系统备份到NAS服务器.html","hash":"02a78e77af9acf5eae7ab8aa0d2ad9151de6e330","modified":1721385140785},{"_id":"public/index.html","hash":"27382e594326690044e0d92cc1ca9093aeb07f0d","modified":1721385140785},{"_id":"public/page/2/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/3/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/4/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/5/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/6/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/7/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/8/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/9/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/page/10/index.html","hash":"5b88b6b9602f7f8dd6bab50b06f62db090c25911","modified":1721385140785},{"_id":"public/07中间件/7.1.Zookeeper集群环境部署.html","hash":"18cf49e31f8922a853bf7eda30ef873c133bc9b9","modified":1721385140785},{"_id":"public/09异常处理/docker提示磁盘空间不足.html","hash":"c74b35c29de79aae8eff9631697761adface1418","modified":1721385140785},{"_id":"public/07中间件/F.系统加固/openssh升级.html","hash":"c29ccc6b327bd2b68a3a3aae72f803862fd06158","modified":1721385140785},{"_id":"public/07中间件/E.异常处理/E.1.Inodes写满.html","hash":"f663b51df2540ccd24803325759351508e0eb570","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Exporter.html","hash":"7e012acea3361cd2e5f9f1b296d88834b186d8f4","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL配置.html","hash":"d7cc0761f4407336957502dac3bb0c49cfa7d165","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL.html","hash":"106414e610f5349af776ed64d4d4325cedbad0bf","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis配置.html","hash":"1133823dab28987d9766c751045f8aaea8e46a76","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka配置.html","hash":"1295a6576a89a28f3e1e758f944adbcd1173b03c","modified":1721385140785},{"_id":"public/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch.html","hash":"69c4c10d17f5ff0ce4f2991553f6b25b497147ce","modified":1721385140785},{"_id":"public/07中间件/战训部署0724.html","hash":"f397cb0c12c65a2ee25ea13f16ad90c28ffc787b","modified":1721385140785},{"_id":"public/07中间件/E.集群防火墙配置.html","hash":"3e4f4436dd497cd32fdab0c59d41ed8e783e69a4","modified":1721385140785},{"_id":"public/07中间件/A.系统初始化.html","hash":"f92d815822f6185b6c10554f3f9ead58130d76a3","modified":1721385140785},{"_id":"public/07中间件/9.9.日志采集系统部署.html","hash":"2c55444ab7c5f717ef7f5e64021f0f5c0cecc3e4","modified":1721385140785},{"_id":"public/07中间件/9.2.系统安装初始化 - 副本.html","hash":"eeab1e4c9ecba97e89f8d4eefbeb0c33f07d34e2","modified":1721385140785},{"_id":"public/07中间件/9.2.系统安装初始化.html","hash":"b56be8e34f9fcdd51e6c773161c2e5e0c417037c","modified":1721385140785},{"_id":"public/07中间件/7.2.Mysql双主集群部署.html","hash":"5ed1c863c44aa0729c53989b28f4fb5c8959f838","modified":1721385140785},{"_id":"public/07中间件/4.1.Redis集群环境部署.html","hash":"934d0fb13df2e244a980650424620d8d934cc6db","modified":1721385140785},{"_id":"public/07中间件/4.1.Redis集群环境部署-yum.html","hash":"3391e3cd7fef1d8007d9723ed95f9d07845e8521","modified":1721385140785},{"_id":"public/07中间件/2.1.版本选型.html","hash":"e15b78850b628c09d66eaca4697bebf317a980f9","modified":1721385140785},{"_id":"public/07中间件/3.1.Zookeeper集群环境部署.html","hash":"15ee7f9aebf8a66034a739e8baa274644e5e8563","modified":1721385140785},{"_id":"public/archives/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/2/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/3/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/4/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/5/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/6/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/7/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/8/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/9/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/page/10/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2018/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2018/05/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/2/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/3/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/4/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/5/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/6/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/7/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/page/8/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/2/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/3/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/4/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/5/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/6/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/7/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2023/09/page/8/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2024/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2024/page/2/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2024/page/3/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2024/07/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2024/07/page/2/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/archives/2024/07/page/3/index.html","hash":"1e36c2fe122b2366e6b21b65ef54f11a958b0966","modified":1721385140785},{"_id":"public/favicon.png","hash":"2dbd6cb7b96c11aafd3d66ea99a35480c81da822","modified":1721385140785},{"_id":"public/js/book-menu.js","hash":"deebd62833f484c84e08357291ccc797c7544eb6","modified":1721385140785},{"_id":"public/js/book-post.js","hash":"d239e79163ceb5a37c9274c0c83010eea80554d8","modified":1721385140785},{"_id":"public/js/book-toc.js","hash":"fcbf2a88d9bab50dbd1337150a5909e8b9eecd13","modified":1721385140785},{"_id":"public/js/book.js","hash":"c150427c7397aea35ad83624f8db8f4b19846bb6","modified":1721385140785},{"_id":"public/css/book.css","hash":"d64083b8f2807b534fac100e0a1191a4dd9bb890","modified":1721385140785}],"Category":[],"Data":[],"Page":[{"title":"Hello World","weight":10,"_content":"## 高级算法目录\n\n\n### 1.1. BFS (Breadth-First Search)\n\n广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。\n\n**实现步骤：**\n1. 创建一个空队列 `queue` 和一个空集合 `visited`。\n2. 将起始节点放入队列和访问集合中。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中的节点，将其标记为已访问。\n   - 将所有未访问过的邻居节点加入队列和访问集合。\n\n\n### 1.2. DFS (Depth-First Search)\n\n深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。\n\n**实现步骤：**\n1. 创建一个空集合 `visited` 来记录访问过的节点。\n2. 从起始节点开始调用递归函数 `dfs`：\n   - 将当前节点标记为已访问。\n   - 对于当前节点的每个未访问的邻居节点，递归调用 `dfs` 函数。\n\n## 2. Shortest Path Algorithms\n\n\n### 2.1. Dijkstra\n\nDijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。\n\n**实现步骤：**\n1. 创建一个优先队列 `pq` 和距离字典 `distances`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 将起始节点和距离 0 放入队列。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中距离最小的节点。\n   - 对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。\n\n---\n\n### 2.2. Bellman-Ford\n\nBellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。\n\n**实现步骤：**\n1. 创建距离字典 `distance`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 进行 |V|-1 次迭代，每次迭代遍历所有边：\n   - 对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。\n3. 再次遍历所有边，检查是否存在负权环。\n\n## 3. Pattern Matching Algorithms\n\n\n### 3.1. KMP (Knuth-Morris-Pratt)\n\nKMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。\n\n**实现步骤：**\n1. 构建部分匹配表 `lps`，用于指示在匹配失败时模式串应移动的位置。\n2. 使用两个指针 i 和 j 分别遍历文本和模式串：\n   - 如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。\n   - 如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。\n   - 如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。\n\n\n\n### 3.2. Boyer-Moore\n\nBoyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。\n\n**实现步骤：**\n1. 构建字符到最后出现位置的映射表 `last`。\n2. 使用两个指针 s 和 j 分别遍历文本和模式串：\n   - 从右向左比较模式串和文本，当匹配失败时根据 `last` 表跳过一定的字符。\n   - 如果完全匹配，记录匹配的起始位置并移动 s。\n   - 如果部分匹配但未完全匹配，根据 `last` 表调整 j 的位置。\n\n这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。\n","source":"home.md","raw":"---\ntitle: Hello World\nweight: 10\n---\n## 高级算法目录\n\n\n### 1.1. BFS (Breadth-First Search)\n\n广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。\n\n**实现步骤：**\n1. 创建一个空队列 `queue` 和一个空集合 `visited`。\n2. 将起始节点放入队列和访问集合中。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中的节点，将其标记为已访问。\n   - 将所有未访问过的邻居节点加入队列和访问集合。\n\n\n### 1.2. DFS (Depth-First Search)\n\n深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。\n\n**实现步骤：**\n1. 创建一个空集合 `visited` 来记录访问过的节点。\n2. 从起始节点开始调用递归函数 `dfs`：\n   - 将当前节点标记为已访问。\n   - 对于当前节点的每个未访问的邻居节点，递归调用 `dfs` 函数。\n\n## 2. Shortest Path Algorithms\n\n\n### 2.1. Dijkstra\n\nDijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。\n\n**实现步骤：**\n1. 创建一个优先队列 `pq` 和距离字典 `distances`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 将起始节点和距离 0 放入队列。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中距离最小的节点。\n   - 对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。\n\n---\n\n### 2.2. Bellman-Ford\n\nBellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。\n\n**实现步骤：**\n1. 创建距离字典 `distance`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 进行 |V|-1 次迭代，每次迭代遍历所有边：\n   - 对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。\n3. 再次遍历所有边，检查是否存在负权环。\n\n## 3. Pattern Matching Algorithms\n\n\n### 3.1. KMP (Knuth-Morris-Pratt)\n\nKMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。\n\n**实现步骤：**\n1. 构建部分匹配表 `lps`，用于指示在匹配失败时模式串应移动的位置。\n2. 使用两个指针 i 和 j 分别遍历文本和模式串：\n   - 如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。\n   - 如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。\n   - 如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。\n\n\n\n### 3.2. Boyer-Moore\n\nBoyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。\n\n**实现步骤：**\n1. 构建字符到最后出现位置的映射表 `last`。\n2. 使用两个指针 s 和 j 分别遍历文本和模式串：\n   - 从右向左比较模式串和文本，当匹配失败时根据 `last` 表跳过一定的字符。\n   - 如果完全匹配，记录匹配的起始位置并移动 s。\n   - 如果部分匹配但未完全匹配，根据 `last` 表调整 j 的位置。\n\n这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。\n","date":"2024-07-10T07:57:56.385Z","updated":"2024-07-08T15:50:16.682Z","path":"home.html","comments":1,"layout":"page","_id":"clysk9nzz0006zb8a2rpl32vz","content":"<h2 id=\"高级算法目录\">高级算法目录</h2>\n<h3 id=\"1-1-BFS-Breadth-First-Search\">1.1. BFS (Breadth-First Search)</h3>\n<p>广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空队列 <code>queue</code> 和一个空集合 <code>visited</code>。</li>\n<li>将起始节点放入队列和访问集合中。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中的节点，将其标记为已访问。</li>\n<li>将所有未访问过的邻居节点加入队列和访问集合。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-DFS-Depth-First-Search\">1.2. DFS (Depth-First Search)</h3>\n<p>深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空集合 <code>visited</code> 来记录访问过的节点。</li>\n<li>从起始节点开始调用递归函数 <code>dfs</code>：\n<ul>\n<li>将当前节点标记为已访问。</li>\n<li>对于当前节点的每个未访问的邻居节点，递归调用 <code>dfs</code> 函数。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-Shortest-Path-Algorithms\">2. Shortest Path Algorithms</h2>\n<h3 id=\"2-1-Dijkstra\">2.1. Dijkstra</h3>\n<p>Dijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个优先队列 <code>pq</code> 和距离字典 <code>distances</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>将起始节点和距离 0 放入队列。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中距离最小的节点。</li>\n<li>对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"2-2-Bellman-Ford\">2.2. Bellman-Ford</h3>\n<p>Bellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建距离字典 <code>distance</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>进行 |V|-1 次迭代，每次迭代遍历所有边：\n<ul>\n<li>对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。</li>\n</ul>\n</li>\n<li>再次遍历所有边，检查是否存在负权环。</li>\n</ol>\n<h2 id=\"3-Pattern-Matching-Algorithms\">3. Pattern Matching Algorithms</h2>\n<h3 id=\"3-1-KMP-Knuth-Morris-Pratt\">3.1. KMP (Knuth-Morris-Pratt)</h3>\n<p>KMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建部分匹配表 <code>lps</code>，用于指示在匹配失败时模式串应移动的位置。</li>\n<li>使用两个指针 i 和 j 分别遍历文本和模式串：\n<ul>\n<li>如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。</li>\n<li>如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。</li>\n<li>如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-2-Boyer-Moore\">3.2. Boyer-Moore</h3>\n<p>Boyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建字符到最后出现位置的映射表 <code>last</code>。</li>\n<li>使用两个指针 s 和 j 分别遍历文本和模式串：\n<ul>\n<li>从右向左比较模式串和文本，当匹配失败时根据 <code>last</code> 表跳过一定的字符。</li>\n<li>如果完全匹配，记录匹配的起始位置并移动 s。</li>\n<li>如果部分匹配但未完全匹配，根据 <code>last</code> 表调整 j 的位置。</li>\n</ul>\n</li>\n</ol>\n<p>这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。</p>\n","excerpt":"","more":"<h2 id=\"高级算法目录\">高级算法目录</h2>\n<h3 id=\"1-1-BFS-Breadth-First-Search\">1.1. BFS (Breadth-First Search)</h3>\n<p>广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空队列 <code>queue</code> 和一个空集合 <code>visited</code>。</li>\n<li>将起始节点放入队列和访问集合中。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中的节点，将其标记为已访问。</li>\n<li>将所有未访问过的邻居节点加入队列和访问集合。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-DFS-Depth-First-Search\">1.2. DFS (Depth-First Search)</h3>\n<p>深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空集合 <code>visited</code> 来记录访问过的节点。</li>\n<li>从起始节点开始调用递归函数 <code>dfs</code>：\n<ul>\n<li>将当前节点标记为已访问。</li>\n<li>对于当前节点的每个未访问的邻居节点，递归调用 <code>dfs</code> 函数。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-Shortest-Path-Algorithms\">2. Shortest Path Algorithms</h2>\n<h3 id=\"2-1-Dijkstra\">2.1. Dijkstra</h3>\n<p>Dijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个优先队列 <code>pq</code> 和距离字典 <code>distances</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>将起始节点和距离 0 放入队列。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中距离最小的节点。</li>\n<li>对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"2-2-Bellman-Ford\">2.2. Bellman-Ford</h3>\n<p>Bellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建距离字典 <code>distance</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>进行 |V|-1 次迭代，每次迭代遍历所有边：\n<ul>\n<li>对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。</li>\n</ul>\n</li>\n<li>再次遍历所有边，检查是否存在负权环。</li>\n</ol>\n<h2 id=\"3-Pattern-Matching-Algorithms\">3. Pattern Matching Algorithms</h2>\n<h3 id=\"3-1-KMP-Knuth-Morris-Pratt\">3.1. KMP (Knuth-Morris-Pratt)</h3>\n<p>KMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建部分匹配表 <code>lps</code>，用于指示在匹配失败时模式串应移动的位置。</li>\n<li>使用两个指针 i 和 j 分别遍历文本和模式串：\n<ul>\n<li>如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。</li>\n<li>如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。</li>\n<li>如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-2-Boyer-Moore\">3.2. Boyer-Moore</h3>\n<p>Boyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建字符到最后出现位置的映射表 <code>last</code>。</li>\n<li>使用两个指针 s 和 j 分别遍历文本和模式串：\n<ul>\n<li>从右向左比较模式串和文本，当匹配失败时根据 <code>last</code> 表跳过一定的字符。</li>\n<li>如果完全匹配，记录匹配的起始位置并移动 s。</li>\n<li>如果部分匹配但未完全匹配，根据 <code>last</code> 表调整 j 的位置。</li>\n</ul>\n</li>\n</ol>\n<p>这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。</p>\n"},{"_content":"# 信息安全\n\n## H2\n\n- find nearest header\n- this unordered list will find H2\n\n### H3\n\n- [Markdown语法](/2024/07/08/hello-world/index.html)\n- [kk](/2024/07/08/kk/index.html)\n- this unordered list will find H3/2024/07/08/kk/index.html\n- - [kk](/2024/07/08/kk/index.html)\n\n# 软件开发\n\n### 05高级算法\n- [高级算法目录](/05高级算法/高级算法目录.html)\n- [图论](/05高级算法/图论.html)\n- [Kruskal算法](/05高级算法/Kruskal算法.html)\n\n#### 06虚拟化\n- [6.1.虚拟化ESXi与KVM对比](/06虚拟化/6.1.虚拟化ESXi与KVM对比.html)\n\n\n\n### 07中间件\n- [7.1.Zookeeper集群环境部署](/07中间件/7.1.Zookeeper集群环境部署.html)\n- [7.2.Mysql双主集群部署](/07中间件/7.2.Mysql双主集群部署.html)\n-\n### 08自动化工具\n\n- [Ansible安装配置](/08自动化工具/Ansible安装配置.html)\n\n### 09异常处理\n\n- [docker提示磁盘空间不足](/09异常处理/docker提示磁盘空间不足.html)\n\n### 10未分类\n\n- [linux系统备份到NAS服务器](/10未分类/10.1.linux系统备份到NAS服务器.html)\n","source":"menu.md","raw":"# 信息安全\n\n## H2\n\n- find nearest header\n- this unordered list will find H2\n\n### H3\n\n- [Markdown语法](/2024/07/08/hello-world/index.html)\n- [kk](/2024/07/08/kk/index.html)\n- this unordered list will find H3/2024/07/08/kk/index.html\n- - [kk](/2024/07/08/kk/index.html)\n\n# 软件开发\n\n### 05高级算法\n- [高级算法目录](/05高级算法/高级算法目录.html)\n- [图论](/05高级算法/图论.html)\n- [Kruskal算法](/05高级算法/Kruskal算法.html)\n\n#### 06虚拟化\n- [6.1.虚拟化ESXi与KVM对比](/06虚拟化/6.1.虚拟化ESXi与KVM对比.html)\n\n\n\n### 07中间件\n- [7.1.Zookeeper集群环境部署](/07中间件/7.1.Zookeeper集群环境部署.html)\n- [7.2.Mysql双主集群部署](/07中间件/7.2.Mysql双主集群部署.html)\n-\n### 08自动化工具\n\n- [Ansible安装配置](/08自动化工具/Ansible安装配置.html)\n\n### 09异常处理\n\n- [docker提示磁盘空间不足](/09异常处理/docker提示磁盘空间不足.html)\n\n### 10未分类\n\n- [linux系统备份到NAS服务器](/10未分类/10.1.linux系统备份到NAS服务器.html)\n","date":"2024-07-19T10:27:50.663Z","updated":"2024-07-19T10:27:50.663Z","path":"menu.html","title":"","comments":1,"layout":"page","_id":"clysk9o0b0008zb8ahly0dm8g","content":"<h1>信息安全</h1>\n<h2 id=\"H2\">H2</h2>\n<ul>\n<li>find nearest header</li>\n<li>this unordered list will find H2</li>\n</ul>\n<h3 id=\"H3\">H3</h3>\n<ul>\n<li><a href=\"/2024/07/08/hello-world/index.html\">Markdown语法</a></li>\n<li><a href=\"/2024/07/08/kk/index.html\">kk</a></li>\n<li>this unordered list will find H3/2024/07/08/kk/index.html</li>\n<li>\n<ul>\n<li><a href=\"/2024/07/08/kk/index.html\">kk</a></li>\n</ul>\n</li>\n</ul>\n<h1>软件开发</h1>\n<h3 id=\"05高级算法\">05高级算法</h3>\n<ul>\n<li><a href=\"/05%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95/%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95%E7%9B%AE%E5%BD%95.html\">高级算法目录</a></li>\n<li><a href=\"/05%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA.html\">图论</a></li>\n<li><a href=\"/05%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95/Kruskal%E7%AE%97%E6%B3%95.html\">Kruskal算法</a></li>\n</ul>\n<h4 id=\"06虚拟化\">06虚拟化</h4>\n<ul>\n<li><a href=\"/06%E8%99%9A%E6%8B%9F%E5%8C%96/6.1.%E8%99%9A%E6%8B%9F%E5%8C%96ESXi%E4%B8%8EKVM%E5%AF%B9%E6%AF%94.html\">6.1.虚拟化ESXi与KVM对比</a></li>\n</ul>\n<h3 id=\"07中间件\">07中间件</h3>\n<ul>\n<li><a href=\"/07%E4%B8%AD%E9%97%B4%E4%BB%B6/7.1.Zookeeper%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2.html\">7.1.Zookeeper集群环境部署</a></li>\n<li><a href=\"/07%E4%B8%AD%E9%97%B4%E4%BB%B6/7.2.Mysql%E5%8F%8C%E4%B8%BB%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.html\">7.2.Mysql双主集群部署</a></li>\n<li></li>\n</ul>\n<h3 id=\"08自动化工具\">08自动化工具</h3>\n<ul>\n<li><a href=\"/08%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/Ansible%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html\">Ansible安装配置</a></li>\n</ul>\n<h3 id=\"09异常处理\">09异常处理</h3>\n<ul>\n<li><a href=\"/09%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/docker%E6%8F%90%E7%A4%BA%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3.html\">docker提示磁盘空间不足</a></li>\n</ul>\n<h3 id=\"10未分类\">10未分类</h3>\n<ul>\n<li><a href=\"/10%E6%9C%AA%E5%88%86%E7%B1%BB/10.1.linux%E7%B3%BB%E7%BB%9F%E5%A4%87%E4%BB%BD%E5%88%B0NAS%E6%9C%8D%E5%8A%A1%E5%99%A8.html\">linux系统备份到NAS服务器</a></li>\n</ul>\n","excerpt":"","more":"<h1>信息安全</h1>\n<h2 id=\"H2\">H2</h2>\n<ul>\n<li>find nearest header</li>\n<li>this unordered list will find H2</li>\n</ul>\n<h3 id=\"H3\">H3</h3>\n<ul>\n<li><a href=\"/2024/07/08/hello-world/index.html\">Markdown语法</a></li>\n<li><a href=\"/2024/07/08/kk/index.html\">kk</a></li>\n<li>this unordered list will find H3/2024/07/08/kk/index.html</li>\n<li>\n<ul>\n<li><a href=\"/2024/07/08/kk/index.html\">kk</a></li>\n</ul>\n</li>\n</ul>\n<h1>软件开发</h1>\n<h3 id=\"05高级算法\">05高级算法</h3>\n<ul>\n<li><a href=\"/05%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95/%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95%E7%9B%AE%E5%BD%95.html\">高级算法目录</a></li>\n<li><a href=\"/05%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95/%E5%9B%BE%E8%AE%BA.html\">图论</a></li>\n<li><a href=\"/05%E9%AB%98%E7%BA%A7%E7%AE%97%E6%B3%95/Kruskal%E7%AE%97%E6%B3%95.html\">Kruskal算法</a></li>\n</ul>\n<h4 id=\"06虚拟化\">06虚拟化</h4>\n<ul>\n<li><a href=\"/06%E8%99%9A%E6%8B%9F%E5%8C%96/6.1.%E8%99%9A%E6%8B%9F%E5%8C%96ESXi%E4%B8%8EKVM%E5%AF%B9%E6%AF%94.html\">6.1.虚拟化ESXi与KVM对比</a></li>\n</ul>\n<h3 id=\"07中间件\">07中间件</h3>\n<ul>\n<li><a href=\"/07%E4%B8%AD%E9%97%B4%E4%BB%B6/7.1.Zookeeper%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2.html\">7.1.Zookeeper集群环境部署</a></li>\n<li><a href=\"/07%E4%B8%AD%E9%97%B4%E4%BB%B6/7.2.Mysql%E5%8F%8C%E4%B8%BB%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2.html\">7.2.Mysql双主集群部署</a></li>\n<li></li>\n</ul>\n<h3 id=\"08自动化工具\">08自动化工具</h3>\n<ul>\n<li><a href=\"/08%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/Ansible%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE.html\">Ansible安装配置</a></li>\n</ul>\n<h3 id=\"09异常处理\">09异常处理</h3>\n<ul>\n<li><a href=\"/09%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/docker%E6%8F%90%E7%A4%BA%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3.html\">docker提示磁盘空间不足</a></li>\n</ul>\n<h3 id=\"10未分类\">10未分类</h3>\n<ul>\n<li><a href=\"/10%E6%9C%AA%E5%88%86%E7%B1%BB/10.1.linux%E7%B3%BB%E7%BB%9F%E5%A4%87%E4%BB%BD%E5%88%B0NAS%E6%9C%8D%E5%8A%A1%E5%99%A8.html\">linux系统备份到NAS服务器</a></li>\n</ul>\n"}],"Post":[{"_content":"","source":"_posts/06虚拟化/云原生.md","raw":"","slug":"06虚拟化/云原生","published":1,"date":"2024-07-15T14:31:36.334Z","updated":"2024-07-15T14:31:36.334Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9nyg0000zb8a8zq9g6ya","content":"","excerpt":"","more":""},{"_content":"","source":"_posts/高级算法/Kruskal算法.md","raw":"","slug":"高级算法/Kruskal算法","published":1,"date":"2024-07-10T09:46:17.464Z","updated":"2024-07-10T09:46:17.464Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9nyt0001zb8ahyu607ua","content":"","excerpt":"","more":""},{"_content":"","source":"_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat - 副本.md","raw":"","slug":"07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat - 副本","published":1,"date":"2023-09-01T13:06:38.060Z","updated":"2023-08-05T07:50:40.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9nyx0002zb8abbd54t3h","content":"","excerpt":"","more":""},{"_content":"","source":"_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nacos.md","raw":"","slug":"07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nacos","published":1,"date":"2023-09-01T13:06:38.140Z","updated":"2023-08-02T07:34:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9nyx0003zb8ab0cx7nv5","content":"","excerpt":"","more":""},{"_content":"","source":"_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nginx.md","raw":"","slug":"07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Nginx","published":1,"date":"2023-09-01T13:06:38.140Z","updated":"2023-08-02T07:34:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9nyy0004zb8afdei7k8y","content":"","excerpt":"","more":""},{"_content":"","source":"_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Nginx.md","raw":"","slug":"07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Nginx","published":1,"date":"2023-09-01T13:06:38.170Z","updated":"2023-08-02T07:34:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9nyz0005zb8agdk7b8sa","content":"","excerpt":"","more":""},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2024-07-08T13:59:15.442Z","updated":"2024-07-08T13:59:15.442Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o030007zb8a28br1ock","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\">Quick Start</h2>\n<h3 id=\"Create-a-new-post\">Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\">Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\">Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\">Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"kk","weight":10,"_content":"## 高级算法目录\n\n\n### 1.1. BFS (Breadth-First Search)\n\n广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。\n\n**实现步骤：**\n1. 创建一个空队列 `queue` 和一个空集合 `visited`。\n2. 将起始节点放入队列和访问集合中。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中的节点，将其标记为已访问。\n   - 将所有未访问过的邻居节点加入队列和访问集合。\n\n\n### 1.2. DFS (Depth-First Search)\n\n深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。\n\n**实现步骤：**\n1. 创建一个空集合 `visited` 来记录访问过的节点。\n2. 从起始节点开始调用递归函数 `dfs`：\n   - 将当前节点标记为已访问。\n   - 对于当前节点的每个未访问的邻居节点，递归调用 `dfs` 函数。\n\n## 2. Shortest Path Algorithms\n\n\n### 2.1. Dijkstra\n\nDijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。\n\n**实现步骤：**\n1. 创建一个优先队列 `pq` 和距离字典 `distances`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 将起始节点和距离 0 放入队列。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中距离最小的节点。\n   - 对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。\n\n---\n\n### 2.2. Bellman-Ford\n\nBellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。\n\n**实现步骤：**\n1. 创建距离字典 `distance`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 进行 |V|-1 次迭代，每次迭代遍历所有边：\n   - 对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。\n3. 再次遍历所有边，检查是否存在负权环。\n\n## 3. Pattern Matching Algorithms\n\n\n### 3.1. KMP (Knuth-Morris-Pratt)\n\nKMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。\n\n**实现步骤：**\n1. 构建部分匹配表 `lps`，用于指示在匹配失败时模式串应移动的位置。\n2. 使用两个指针 i 和 j 分别遍历文本和模式串：\n   - 如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。\n   - 如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。\n   - 如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。\n\n\n\n### 3.2. Boyer-Moore\n\nBoyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。\n\n**实现步骤：**\n1. 构建字符到最后出现位置的映射表 `last`。\n2. 使用两个指针 s 和 j 分别遍历文本和模式串：\n   - 从右向左比较模式串和文本，当匹配失败时根据 `last` 表跳过一定的字符。\n   - 如果完全匹配，记录匹配的起始位置并移动 s。\n   - 如果部分匹配但未完全匹配，根据 `last` 表调整 j 的位置。\n\n这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。\n","source":"_posts/kk.md","raw":"---\ntitle: kk\nweight: 10\n---\n## 高级算法目录\n\n\n### 1.1. BFS (Breadth-First Search)\n\n广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。\n\n**实现步骤：**\n1. 创建一个空队列 `queue` 和一个空集合 `visited`。\n2. 将起始节点放入队列和访问集合中。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中的节点，将其标记为已访问。\n   - 将所有未访问过的邻居节点加入队列和访问集合。\n\n\n### 1.2. DFS (Depth-First Search)\n\n深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。\n\n**实现步骤：**\n1. 创建一个空集合 `visited` 来记录访问过的节点。\n2. 从起始节点开始调用递归函数 `dfs`：\n   - 将当前节点标记为已访问。\n   - 对于当前节点的每个未访问的邻居节点，递归调用 `dfs` 函数。\n\n## 2. Shortest Path Algorithms\n\n\n### 2.1. Dijkstra\n\nDijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。\n\n**实现步骤：**\n1. 创建一个优先队列 `pq` 和距离字典 `distances`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 将起始节点和距离 0 放入队列。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中距离最小的节点。\n   - 对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。\n\n---\n\n### 2.2. Bellman-Ford\n\nBellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。\n\n**实现步骤：**\n1. 创建距离字典 `distance`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 进行 |V|-1 次迭代，每次迭代遍历所有边：\n   - 对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。\n3. 再次遍历所有边，检查是否存在负权环。\n\n## 3. Pattern Matching Algorithms\n\n\n### 3.1. KMP (Knuth-Morris-Pratt)\n\nKMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。\n\n**实现步骤：**\n1. 构建部分匹配表 `lps`，用于指示在匹配失败时模式串应移动的位置。\n2. 使用两个指针 i 和 j 分别遍历文本和模式串：\n   - 如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。\n   - 如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。\n   - 如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。\n\n\n\n### 3.2. Boyer-Moore\n\nBoyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。\n\n**实现步骤：**\n1. 构建字符到最后出现位置的映射表 `last`。\n2. 使用两个指针 s 和 j 分别遍历文本和模式串：\n   - 从右向左比较模式串和文本，当匹配失败时根据 `last` 表跳过一定的字符。\n   - 如果完全匹配，记录匹配的起始位置并移动 s。\n   - 如果部分匹配但未完全匹配，根据 `last` 表调整 j 的位置。\n\n这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。\n","slug":"kk","published":1,"date":"2024-07-08T13:59:15.442Z","updated":"2024-07-09T09:30:30.652Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o0d0009zb8a91b0aqgv","content":"<h2 id=\"高级算法目录\">高级算法目录</h2>\n<h3 id=\"1-1-BFS-Breadth-First-Search\">1.1. BFS (Breadth-First Search)</h3>\n<p>广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空队列 <code>queue</code> 和一个空集合 <code>visited</code>。</li>\n<li>将起始节点放入队列和访问集合中。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中的节点，将其标记为已访问。</li>\n<li>将所有未访问过的邻居节点加入队列和访问集合。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-DFS-Depth-First-Search\">1.2. DFS (Depth-First Search)</h3>\n<p>深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空集合 <code>visited</code> 来记录访问过的节点。</li>\n<li>从起始节点开始调用递归函数 <code>dfs</code>：\n<ul>\n<li>将当前节点标记为已访问。</li>\n<li>对于当前节点的每个未访问的邻居节点，递归调用 <code>dfs</code> 函数。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-Shortest-Path-Algorithms\">2. Shortest Path Algorithms</h2>\n<h3 id=\"2-1-Dijkstra\">2.1. Dijkstra</h3>\n<p>Dijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个优先队列 <code>pq</code> 和距离字典 <code>distances</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>将起始节点和距离 0 放入队列。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中距离最小的节点。</li>\n<li>对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"2-2-Bellman-Ford\">2.2. Bellman-Ford</h3>\n<p>Bellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建距离字典 <code>distance</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>进行 |V|-1 次迭代，每次迭代遍历所有边：\n<ul>\n<li>对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。</li>\n</ul>\n</li>\n<li>再次遍历所有边，检查是否存在负权环。</li>\n</ol>\n<h2 id=\"3-Pattern-Matching-Algorithms\">3. Pattern Matching Algorithms</h2>\n<h3 id=\"3-1-KMP-Knuth-Morris-Pratt\">3.1. KMP (Knuth-Morris-Pratt)</h3>\n<p>KMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建部分匹配表 <code>lps</code>，用于指示在匹配失败时模式串应移动的位置。</li>\n<li>使用两个指针 i 和 j 分别遍历文本和模式串：\n<ul>\n<li>如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。</li>\n<li>如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。</li>\n<li>如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-2-Boyer-Moore\">3.2. Boyer-Moore</h3>\n<p>Boyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建字符到最后出现位置的映射表 <code>last</code>。</li>\n<li>使用两个指针 s 和 j 分别遍历文本和模式串：\n<ul>\n<li>从右向左比较模式串和文本，当匹配失败时根据 <code>last</code> 表跳过一定的字符。</li>\n<li>如果完全匹配，记录匹配的起始位置并移动 s。</li>\n<li>如果部分匹配但未完全匹配，根据 <code>last</code> 表调整 j 的位置。</li>\n</ul>\n</li>\n</ol>\n<p>这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。</p>\n","excerpt":"","more":"<h2 id=\"高级算法目录\">高级算法目录</h2>\n<h3 id=\"1-1-BFS-Breadth-First-Search\">1.1. BFS (Breadth-First Search)</h3>\n<p>广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空队列 <code>queue</code> 和一个空集合 <code>visited</code>。</li>\n<li>将起始节点放入队列和访问集合中。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中的节点，将其标记为已访问。</li>\n<li>将所有未访问过的邻居节点加入队列和访问集合。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-DFS-Depth-First-Search\">1.2. DFS (Depth-First Search)</h3>\n<p>深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空集合 <code>visited</code> 来记录访问过的节点。</li>\n<li>从起始节点开始调用递归函数 <code>dfs</code>：\n<ul>\n<li>将当前节点标记为已访问。</li>\n<li>对于当前节点的每个未访问的邻居节点，递归调用 <code>dfs</code> 函数。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-Shortest-Path-Algorithms\">2. Shortest Path Algorithms</h2>\n<h3 id=\"2-1-Dijkstra\">2.1. Dijkstra</h3>\n<p>Dijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个优先队列 <code>pq</code> 和距离字典 <code>distances</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>将起始节点和距离 0 放入队列。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中距离最小的节点。</li>\n<li>对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"2-2-Bellman-Ford\">2.2. Bellman-Ford</h3>\n<p>Bellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建距离字典 <code>distance</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>进行 |V|-1 次迭代，每次迭代遍历所有边：\n<ul>\n<li>对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。</li>\n</ul>\n</li>\n<li>再次遍历所有边，检查是否存在负权环。</li>\n</ol>\n<h2 id=\"3-Pattern-Matching-Algorithms\">3. Pattern Matching Algorithms</h2>\n<h3 id=\"3-1-KMP-Knuth-Morris-Pratt\">3.1. KMP (Knuth-Morris-Pratt)</h3>\n<p>KMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建部分匹配表 <code>lps</code>，用于指示在匹配失败时模式串应移动的位置。</li>\n<li>使用两个指针 i 和 j 分别遍历文本和模式串：\n<ul>\n<li>如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。</li>\n<li>如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。</li>\n<li>如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-2-Boyer-Moore\">3.2. Boyer-Moore</h3>\n<p>Boyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建字符到最后出现位置的映射表 <code>last</code>。</li>\n<li>使用两个指针 s 和 j 分别遍历文本和模式串：\n<ul>\n<li>从右向左比较模式串和文本，当匹配失败时根据 <code>last</code> 表跳过一定的字符。</li>\n<li>如果完全匹配，记录匹配的起始位置并移动 s。</li>\n<li>如果部分匹配但未完全匹配，根据 <code>last</code> 表调整 j 的位置。</li>\n</ul>\n</li>\n</ol>\n<p>这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。</p>\n"},{"_content":"## 虚拟化ESXi、KVM对比\n\n### 1. 官方介绍\n\n```shell\n全虚拟化（Full Virtualization）：完全模拟底层硬件，虚拟机无法感知自己运行在虚拟化环境中，因此虚拟机可以运行未经修改的操作系统和应用程序。这种虚拟化技术的代表是 VMware。\n半虚拟化（Paravirtualization）：虚拟机知道自己运行在虚拟化环境中，虚拟机操作系统需要进行修改以便能够与虚拟化层进行通信，因此半虚拟化技术要求操作系统需要支持半虚拟化接口。这种虚拟化技术的代表是 Xen。\n操作系统虚拟化（Operating  System  Virtualization）：也称为容器化，是指通过对操作系统进行虚拟化来实现多个操作系统实例之间的隔离。每个容器都运行在主机操作系统的用户空间中，共享主机操作系统的内核。这种虚拟化技术的代表是  Docker。\n硬件辅助虚拟化（Hardware-assisted Virtualization）：是指利用CPU和主板的硬件虚拟化扩展实现虚拟化，这样可以提高虚拟化的性能。这种虚拟化技术的代表是 KVM。\n无虚拟化（Bare Metal）虚拟化，它不需要虚拟化层，直接在裸机上运行虚拟机，能够提供更高的性能和更好的资源利用率，但需要硬件支持。\n```\n\nEXSi：商业版\n\n- https://docs.vmware.com/cn/VMware-vSphere/6.5/rn/vsphere-esxi-65u3-release-notes.html\n- https://docs.vmware.com/cn/VMware-vSphere/7.0/rn/vsphere-esxi-vcenter-server-70-release-notes.html\n- 报价（基础版1,394.00 美元/三年）：[vSphere Landing Page | VMware](https://store-us.vmware.com/products/data-center-virtualization-cloud-infrastructure.html)\n\nKVM：基于内核的虚拟机 (KVM)\n\n- PVE：https://www.proxmox.com/en/proxmox-ve/featurs\n\nXenserver免费与付费区别\n\n  [XenServer学习笔记二 XenServer免费版本和收费版本的区别_51CTO博客_xenserver免费版和收费版区别](https://blog.51cto.com/shenhj/420500)\n  在线迁移的XenMotion、虚拟机磁盘快照和自动恢复、XenCenter管理软件和虚拟机转化工具软件\n\n### 2. 虚拟化功能\n\n- Multi Server Management with XenCenter GUI：多服务器图形化管理\n- Active Directory Integration：AD域集成\n- Dynamic Memory Control：内存动态控制\n- Live Memory VM Snapshot and Revert：快照热恢复\n- Live VM Migration：服务器热迁移\n- Scheduled Snapshots：定时快照\n- XenServer Conversion Manager：虚拟化服务迁移管理（P2V）\n- Maximum Pool Size：最大资源池\n- Distributed Virtual Switch Controller：交换机虚拟化\n\n```shell\n免费EXSI缺点：\n没有VMware官方支持\n每个VM最大支持8vCPU\n不能通过vCenter集中管理\nvStorage API不能使用\n```\n\n### 3. 核心需求\n\n- 多服务器图形化管理\n- 快照管理\n\n### 4. 满足需求的虚拟化平台\n\n选型确定docker，容器化部署中间件。\n\n\n\n### 5. 测试环境（部署）\n\n控制方式，三种均为root用户\n\n- EXSi支持WEB和客户端两种方式操作\n\nhttps://192.168.10.90/ui/#/host\n密码：dahouzi@SZ\n\n\n\n- PVE WEB界面登录操作\n\n[pve - Proxmox Virtual Environment](https://192.168.215.135:8006/#v1:0:=storage%2Fpve%2Flocal:4:::::::)登陆后关闭弹窗即可，因为是免费许可。\n\nip:192.168.215.135\n\npassword: dahouzi\n\n\n\n- Xen下载Xencenter客户端操作\n\nip:192.168.215.133\n密码: dahouzi!\n\n","source":"_posts/06虚拟化/6.1.虚拟化ESXi与KVM对比.md","raw":"## 虚拟化ESXi、KVM对比\n\n### 1. 官方介绍\n\n```shell\n全虚拟化（Full Virtualization）：完全模拟底层硬件，虚拟机无法感知自己运行在虚拟化环境中，因此虚拟机可以运行未经修改的操作系统和应用程序。这种虚拟化技术的代表是 VMware。\n半虚拟化（Paravirtualization）：虚拟机知道自己运行在虚拟化环境中，虚拟机操作系统需要进行修改以便能够与虚拟化层进行通信，因此半虚拟化技术要求操作系统需要支持半虚拟化接口。这种虚拟化技术的代表是 Xen。\n操作系统虚拟化（Operating  System  Virtualization）：也称为容器化，是指通过对操作系统进行虚拟化来实现多个操作系统实例之间的隔离。每个容器都运行在主机操作系统的用户空间中，共享主机操作系统的内核。这种虚拟化技术的代表是  Docker。\n硬件辅助虚拟化（Hardware-assisted Virtualization）：是指利用CPU和主板的硬件虚拟化扩展实现虚拟化，这样可以提高虚拟化的性能。这种虚拟化技术的代表是 KVM。\n无虚拟化（Bare Metal）虚拟化，它不需要虚拟化层，直接在裸机上运行虚拟机，能够提供更高的性能和更好的资源利用率，但需要硬件支持。\n```\n\nEXSi：商业版\n\n- https://docs.vmware.com/cn/VMware-vSphere/6.5/rn/vsphere-esxi-65u3-release-notes.html\n- https://docs.vmware.com/cn/VMware-vSphere/7.0/rn/vsphere-esxi-vcenter-server-70-release-notes.html\n- 报价（基础版1,394.00 美元/三年）：[vSphere Landing Page | VMware](https://store-us.vmware.com/products/data-center-virtualization-cloud-infrastructure.html)\n\nKVM：基于内核的虚拟机 (KVM)\n\n- PVE：https://www.proxmox.com/en/proxmox-ve/featurs\n\nXenserver免费与付费区别\n\n  [XenServer学习笔记二 XenServer免费版本和收费版本的区别_51CTO博客_xenserver免费版和收费版区别](https://blog.51cto.com/shenhj/420500)\n  在线迁移的XenMotion、虚拟机磁盘快照和自动恢复、XenCenter管理软件和虚拟机转化工具软件\n\n### 2. 虚拟化功能\n\n- Multi Server Management with XenCenter GUI：多服务器图形化管理\n- Active Directory Integration：AD域集成\n- Dynamic Memory Control：内存动态控制\n- Live Memory VM Snapshot and Revert：快照热恢复\n- Live VM Migration：服务器热迁移\n- Scheduled Snapshots：定时快照\n- XenServer Conversion Manager：虚拟化服务迁移管理（P2V）\n- Maximum Pool Size：最大资源池\n- Distributed Virtual Switch Controller：交换机虚拟化\n\n```shell\n免费EXSI缺点：\n没有VMware官方支持\n每个VM最大支持8vCPU\n不能通过vCenter集中管理\nvStorage API不能使用\n```\n\n### 3. 核心需求\n\n- 多服务器图形化管理\n- 快照管理\n\n### 4. 满足需求的虚拟化平台\n\n选型确定docker，容器化部署中间件。\n\n\n\n### 5. 测试环境（部署）\n\n控制方式，三种均为root用户\n\n- EXSi支持WEB和客户端两种方式操作\n\nhttps://192.168.10.90/ui/#/host\n密码：dahouzi@SZ\n\n\n\n- PVE WEB界面登录操作\n\n[pve - Proxmox Virtual Environment](https://192.168.215.135:8006/#v1:0:=storage%2Fpve%2Flocal:4:::::::)登陆后关闭弹窗即可，因为是免费许可。\n\nip:192.168.215.135\n\npassword: dahouzi\n\n\n\n- Xen下载Xencenter客户端操作\n\nip:192.168.215.133\n密码: dahouzi!\n\n","slug":"06虚拟化/6.1.虚拟化ESXi与KVM对比","published":1,"date":"2024-07-18T06:25:36.196Z","updated":"2024-07-18T06:28:44.720Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0i000azb8abx8c4rdy","content":"<h2 id=\"虚拟化ESXi、KVM对比\">虚拟化ESXi、KVM对比</h2>\n<h3 id=\"1-官方介绍\">1. 官方介绍</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全虚拟化（Full Virtualization）：完全模拟底层硬件，虚拟机无法感知自己运行在虚拟化环境中，因此虚拟机可以运行未经修改的操作系统和应用程序。这种虚拟化技术的代表是 VMware。</span><br><span class=\"line\">半虚拟化（Paravirtualization）：虚拟机知道自己运行在虚拟化环境中，虚拟机操作系统需要进行修改以便能够与虚拟化层进行通信，因此半虚拟化技术要求操作系统需要支持半虚拟化接口。这种虚拟化技术的代表是 Xen。</span><br><span class=\"line\">操作系统虚拟化（Operating  System  Virtualization）：也称为容器化，是指通过对操作系统进行虚拟化来实现多个操作系统实例之间的隔离。每个容器都运行在主机操作系统的用户空间中，共享主机操作系统的内核。这种虚拟化技术的代表是  Docker。</span><br><span class=\"line\">硬件辅助虚拟化（Hardware-assisted Virtualization）：是指利用CPU和主板的硬件虚拟化扩展实现虚拟化，这样可以提高虚拟化的性能。这种虚拟化技术的代表是 KVM。</span><br><span class=\"line\">无虚拟化（Bare Metal）虚拟化，它不需要虚拟化层，直接在裸机上运行虚拟机，能够提供更高的性能和更好的资源利用率，但需要硬件支持。</span><br></pre></td></tr></table></figure>\n<p>EXSi：商业版</p>\n<ul>\n<li><a href=\"https://docs.vmware.com/cn/VMware-vSphere/6.5/rn/vsphere-esxi-65u3-release-notes.html\">https://docs.vmware.com/cn/VMware-vSphere/6.5/rn/vsphere-esxi-65u3-release-notes.html</a></li>\n<li><a href=\"https://docs.vmware.com/cn/VMware-vSphere/7.0/rn/vsphere-esxi-vcenter-server-70-release-notes.html\">https://docs.vmware.com/cn/VMware-vSphere/7.0/rn/vsphere-esxi-vcenter-server-70-release-notes.html</a></li>\n<li>报价（基础版1,394.00 美元/三年）：<a href=\"https://store-us.vmware.com/products/data-center-virtualization-cloud-infrastructure.html\">vSphere Landing Page | VMware</a></li>\n</ul>\n<p>KVM：基于内核的虚拟机 (KVM)</p>\n<ul>\n<li>PVE：<a href=\"https://www.proxmox.com/en/proxmox-ve/featurs\">https://www.proxmox.com/en/proxmox-ve/featurs</a></li>\n</ul>\n<p>Xenserver免费与付费区别</p>\n<p><a href=\"https://blog.51cto.com/shenhj/420500\">XenServer学习笔记二 XenServer免费版本和收费版本的区别_51CTO博客_xenserver免费版和收费版区别</a><br>\n在线迁移的XenMotion、虚拟机磁盘快照和自动恢复、XenCenter管理软件和虚拟机转化工具软件</p>\n<h3 id=\"2-虚拟化功能\">2. 虚拟化功能</h3>\n<ul>\n<li>Multi Server Management with XenCenter GUI：多服务器图形化管理</li>\n<li>Active Directory Integration：AD域集成</li>\n<li>Dynamic Memory Control：内存动态控制</li>\n<li>Live Memory VM Snapshot and Revert：快照热恢复</li>\n<li>Live VM Migration：服务器热迁移</li>\n<li>Scheduled Snapshots：定时快照</li>\n<li>XenServer Conversion Manager：虚拟化服务迁移管理（P2V）</li>\n<li>Maximum Pool Size：最大资源池</li>\n<li>Distributed Virtual Switch Controller：交换机虚拟化</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">免费EXSI缺点：</span><br><span class=\"line\">没有VMware官方支持</span><br><span class=\"line\">每个VM最大支持8vCPU</span><br><span class=\"line\">不能通过vCenter集中管理</span><br><span class=\"line\">vStorage API不能使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-核心需求\">3. 核心需求</h3>\n<ul>\n<li>多服务器图形化管理</li>\n<li>快照管理</li>\n</ul>\n<h3 id=\"4-满足需求的虚拟化平台\">4. 满足需求的虚拟化平台</h3>\n<p>选型确定docker，容器化部署中间件。</p>\n<h3 id=\"5-测试环境（部署）\">5. 测试环境（部署）</h3>\n<p>控制方式，三种均为root用户</p>\n<ul>\n<li>EXSi支持WEB和客户端两种方式操作</li>\n</ul>\n<p><a href=\"https://192.168.10.90/ui/#/host\">https://192.168.10.90/ui/#/host</a><br>\n密码：dahouzi@SZ</p>\n<ul>\n<li>PVE WEB界面登录操作</li>\n</ul>\n<p><a href=\"https://192.168.215.135:8006/#v1:0:=storage%2Fpve%2Flocal:4:::::::\">pve - Proxmox Virtual Environment</a>登陆后关闭弹窗即可，因为是免费许可。</p>\n<p>ip:192.168.215.135</p>\n<p>password: dahouzi</p>\n<ul>\n<li>Xen下载Xencenter客户端操作</li>\n</ul>\n<p>ip:192.168.215.133<br>\n密码: dahouzi!</p>\n","excerpt":"","more":"<h2 id=\"虚拟化ESXi、KVM对比\">虚拟化ESXi、KVM对比</h2>\n<h3 id=\"1-官方介绍\">1. 官方介绍</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">全虚拟化（Full Virtualization）：完全模拟底层硬件，虚拟机无法感知自己运行在虚拟化环境中，因此虚拟机可以运行未经修改的操作系统和应用程序。这种虚拟化技术的代表是 VMware。</span><br><span class=\"line\">半虚拟化（Paravirtualization）：虚拟机知道自己运行在虚拟化环境中，虚拟机操作系统需要进行修改以便能够与虚拟化层进行通信，因此半虚拟化技术要求操作系统需要支持半虚拟化接口。这种虚拟化技术的代表是 Xen。</span><br><span class=\"line\">操作系统虚拟化（Operating  System  Virtualization）：也称为容器化，是指通过对操作系统进行虚拟化来实现多个操作系统实例之间的隔离。每个容器都运行在主机操作系统的用户空间中，共享主机操作系统的内核。这种虚拟化技术的代表是  Docker。</span><br><span class=\"line\">硬件辅助虚拟化（Hardware-assisted Virtualization）：是指利用CPU和主板的硬件虚拟化扩展实现虚拟化，这样可以提高虚拟化的性能。这种虚拟化技术的代表是 KVM。</span><br><span class=\"line\">无虚拟化（Bare Metal）虚拟化，它不需要虚拟化层，直接在裸机上运行虚拟机，能够提供更高的性能和更好的资源利用率，但需要硬件支持。</span><br></pre></td></tr></table></figure>\n<p>EXSi：商业版</p>\n<ul>\n<li><a href=\"https://docs.vmware.com/cn/VMware-vSphere/6.5/rn/vsphere-esxi-65u3-release-notes.html\">https://docs.vmware.com/cn/VMware-vSphere/6.5/rn/vsphere-esxi-65u3-release-notes.html</a></li>\n<li><a href=\"https://docs.vmware.com/cn/VMware-vSphere/7.0/rn/vsphere-esxi-vcenter-server-70-release-notes.html\">https://docs.vmware.com/cn/VMware-vSphere/7.0/rn/vsphere-esxi-vcenter-server-70-release-notes.html</a></li>\n<li>报价（基础版1,394.00 美元/三年）：<a href=\"https://store-us.vmware.com/products/data-center-virtualization-cloud-infrastructure.html\">vSphere Landing Page | VMware</a></li>\n</ul>\n<p>KVM：基于内核的虚拟机 (KVM)</p>\n<ul>\n<li>PVE：<a href=\"https://www.proxmox.com/en/proxmox-ve/featurs\">https://www.proxmox.com/en/proxmox-ve/featurs</a></li>\n</ul>\n<p>Xenserver免费与付费区别</p>\n<p><a href=\"https://blog.51cto.com/shenhj/420500\">XenServer学习笔记二 XenServer免费版本和收费版本的区别_51CTO博客_xenserver免费版和收费版区别</a><br>\n在线迁移的XenMotion、虚拟机磁盘快照和自动恢复、XenCenter管理软件和虚拟机转化工具软件</p>\n<h3 id=\"2-虚拟化功能\">2. 虚拟化功能</h3>\n<ul>\n<li>Multi Server Management with XenCenter GUI：多服务器图形化管理</li>\n<li>Active Directory Integration：AD域集成</li>\n<li>Dynamic Memory Control：内存动态控制</li>\n<li>Live Memory VM Snapshot and Revert：快照热恢复</li>\n<li>Live VM Migration：服务器热迁移</li>\n<li>Scheduled Snapshots：定时快照</li>\n<li>XenServer Conversion Manager：虚拟化服务迁移管理（P2V）</li>\n<li>Maximum Pool Size：最大资源池</li>\n<li>Distributed Virtual Switch Controller：交换机虚拟化</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">免费EXSI缺点：</span><br><span class=\"line\">没有VMware官方支持</span><br><span class=\"line\">每个VM最大支持8vCPU</span><br><span class=\"line\">不能通过vCenter集中管理</span><br><span class=\"line\">vStorage API不能使用</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-核心需求\">3. 核心需求</h3>\n<ul>\n<li>多服务器图形化管理</li>\n<li>快照管理</li>\n</ul>\n<h3 id=\"4-满足需求的虚拟化平台\">4. 满足需求的虚拟化平台</h3>\n<p>选型确定docker，容器化部署中间件。</p>\n<h3 id=\"5-测试环境（部署）\">5. 测试环境（部署）</h3>\n<p>控制方式，三种均为root用户</p>\n<ul>\n<li>EXSi支持WEB和客户端两种方式操作</li>\n</ul>\n<p><a href=\"https://192.168.10.90/ui/#/host\">https://192.168.10.90/ui/#/host</a><br>\n密码：dahouzi@SZ</p>\n<ul>\n<li>PVE WEB界面登录操作</li>\n</ul>\n<p><a href=\"https://192.168.215.135:8006/#v1:0:=storage%2Fpve%2Flocal:4:::::::\">pve - Proxmox Virtual Environment</a>登陆后关闭弹窗即可，因为是免费许可。</p>\n<p>ip:192.168.215.135</p>\n<p>password: dahouzi</p>\n<ul>\n<li>Xen下载Xencenter客户端操作</li>\n</ul>\n<p>ip:192.168.215.133<br>\n密码: dahouzi!</p>\n"},{"_content":"\n\n\n### docker和container区别\n\n熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容","source":"_posts/06虚拟化/K8S安装.md","raw":"\n\n\n### docker和container区别\n\n熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容","slug":"06虚拟化/K8S安装","published":1,"date":"2024-07-18T03:58:03.210Z","updated":"2024-07-18T04:44:33.310Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0m000bzb8ahcx2cj4z","content":"<h3 id=\"docker和container区别\">docker和container区别</h3>\n<p>熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容</p>\n","excerpt":"","more":"<h3 id=\"docker和container区别\">docker和container区别</h3>\n<p>熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容</p>\n"},{"_content":"熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容","source":"_posts/06虚拟化/岗位摘要.md","raw":"熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容","slug":"06虚拟化/岗位摘要","published":1,"date":"2024-07-18T04:44:41.269Z","updated":"2024-07-18T04:44:46.802Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0n000czb8admlc9pm6","content":"<p>熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容</p>\n","excerpt":"","more":"<p>熟悉网络虚拟化原理，熟悉容器网络实现原理和相关技术，了解flannel, calico, cilium等开源组件；了解Docker/Containerd/K8S等相关内容</p>\n"},{"author":"空空","_content":"\n## 一、Ansible安装\n\n### 1. yum源安装\n\n基于centos7.9和默认Python2.7安装。\n\n```shell\nyum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\n```\n\n\n\n### 2. 验证ansible安装结果\n\n查看版本\n\n```shell\n[root@localhost ansible]# ansible --version\nansible 2.9.27\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n查看/etc/ansible/路径下配置文件\n\n```shell\n[root@localhost ansible]# ll /etc/ansible/\ntotal 28\n-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg\n-rw-r--r--. 1 root root  1219 May 23 04:32 hosts\ndrwxr-xr-x. 2 root root     6 Jan 15  2022 roles\n```\n\n### 3. 编辑host文件\n\n在`/etc/ansible/hosts`文件里面，添加三台测试机器的用户信息。\n\n当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。\n\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***'\n```\n\n### 4. 编辑playbook sample\n\n在`/etc/ansible/`路径下添加`test.yml`文件如下，`hosts: kubernetes`表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。\n\n命令含义：将字符串`kongkong`输出到`/etc/kongkong.txt`文件中\n\n```shell\n- hosts: kubernetes\n  gather_facts: No\n  tasks:\n  - name: echo test data to file\n    shell: echo kongkong >> /etc/kongkong.txt\n```\n\n### 5. 执行测试\n\n查看执行结果`ok=1    changed=1`表示执行成功，update1个。\n\n```shell\n[root@localhost ansible]# ansible-playbook test.yml\n\nPLAY [kubernetes] ****************************************************************************************************\n\nTASK [find file] *****************************************************************************************************\nchanged: [192.168.132.131]\nchanged: [192.168.132.130]\nchanged: [192.168.132.129]\n\nPLAY RECAP ***********************************************************************************************************\n192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n\n### 6. 验证测试结果\n\n到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。\n\n```shell\n[root@localhost ~]# cat /etc/kongkong.txt\nkongkong\n```\n\n## 二、Ansible配置\n### 1. 主机分组\n\n- hosts文件\n\n```shell\n#密码设置\n[master]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=1\n\n[node1]\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=2\n\n[node2]\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=3\n\n#分组设置\n[kubernetes:children]\nmaster\nnode1\nnode2\n```\n\n\n\n","source":"_posts/08自动化工具/Ansible安装配置.md","raw":"---\nauthor: 空空\n---\n\n## 一、Ansible安装\n\n### 1. yum源安装\n\n基于centos7.9和默认Python2.7安装。\n\n```shell\nyum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\n```\n\n\n\n### 2. 验证ansible安装结果\n\n查看版本\n\n```shell\n[root@localhost ansible]# ansible --version\nansible 2.9.27\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n查看/etc/ansible/路径下配置文件\n\n```shell\n[root@localhost ansible]# ll /etc/ansible/\ntotal 28\n-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg\n-rw-r--r--. 1 root root  1219 May 23 04:32 hosts\ndrwxr-xr-x. 2 root root     6 Jan 15  2022 roles\n```\n\n### 3. 编辑host文件\n\n在`/etc/ansible/hosts`文件里面，添加三台测试机器的用户信息。\n\n当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。\n\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***'\n```\n\n### 4. 编辑playbook sample\n\n在`/etc/ansible/`路径下添加`test.yml`文件如下，`hosts: kubernetes`表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。\n\n命令含义：将字符串`kongkong`输出到`/etc/kongkong.txt`文件中\n\n```shell\n- hosts: kubernetes\n  gather_facts: No\n  tasks:\n  - name: echo test data to file\n    shell: echo kongkong >> /etc/kongkong.txt\n```\n\n### 5. 执行测试\n\n查看执行结果`ok=1    changed=1`表示执行成功，update1个。\n\n```shell\n[root@localhost ansible]# ansible-playbook test.yml\n\nPLAY [kubernetes] ****************************************************************************************************\n\nTASK [find file] *****************************************************************************************************\nchanged: [192.168.132.131]\nchanged: [192.168.132.130]\nchanged: [192.168.132.129]\n\nPLAY RECAP ***********************************************************************************************************\n192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n\n### 6. 验证测试结果\n\n到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。\n\n```shell\n[root@localhost ~]# cat /etc/kongkong.txt\nkongkong\n```\n\n## 二、Ansible配置\n### 1. 主机分组\n\n- hosts文件\n\n```shell\n#密码设置\n[master]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=1\n\n[node1]\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=2\n\n[node2]\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=3\n\n#分组设置\n[kubernetes:children]\nmaster\nnode1\nnode2\n```\n\n\n\n","slug":"08自动化工具/Ansible安装配置","published":1,"date":"2024-07-18T05:45:45.202Z","updated":"2024-07-18T06:00:14.309Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0o000dzb8aadny7moo","content":"<h2 id=\"一、Ansible安装\">一、Ansible安装</h2>\n<h3 id=\"1-yum源安装\">1. yum源安装</h3>\n<p>基于centos7.9和默认Python2.7安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-验证ansible安装结果\">2. 验证ansible安装结果</h3>\n<p>查看版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible --version</span><br><span class=\"line\">ansible 2.9.27</span><br><span class=\"line\">  config file = /etc/ansible/ansible.cfg</span><br><span class=\"line\">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class=\"line\">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class=\"line\">  executable location = /usr/bin/ansible</span><br><span class=\"line\">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure>\n<p>查看/etc/ansible/路径下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ll /etc/ansible/</span><br><span class=\"line\">total 28</span><br><span class=\"line\">-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg</span><br><span class=\"line\">-rw-r--r--. 1 root root  1219 May 23 04:32 hosts</span><br><span class=\"line\">drwxr-xr-x. 2 root root     6 Jan 15  2022 roles</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-编辑host文件\">3. 编辑host文件</h3>\n<p>在<code>/etc/ansible/hosts</code>文件里面，添加三台测试机器的用户信息。</p>\n<p>当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-编辑playbook-sample\">4. 编辑playbook sample</h3>\n<p>在<code>/etc/ansible/</code>路径下添加<code>test.yml</code>文件如下，<code>hosts: kubernetes</code>表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。</p>\n<p>命令含义：将字符串<code>kongkong</code>输出到<code>/etc/kongkong.txt</code>文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  gather_facts: No</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: echo test data to file</span><br><span class=\"line\">    shell: echo kongkong &gt;&gt; /etc/kongkong.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-执行测试\">5. 执行测试</h3>\n<p>查看执行结果<code>ok=1    changed=1</code>表示执行成功，update1个。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible-playbook test.yml</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY [kubernetes] ****************************************************************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">TASK [find file] *****************************************************************************************************</span><br><span class=\"line\">changed: [192.168.132.131]</span><br><span class=\"line\">changed: [192.168.132.130]</span><br><span class=\"line\">changed: [192.168.132.129]</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY RECAP ***********************************************************************************************************</span><br><span class=\"line\">192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证测试结果\">6. 验证测试结果</h3>\n<p>到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/kongkong.txt</span><br><span class=\"line\">kongkong</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、Ansible配置\">二、Ansible配置</h2>\n<h3 id=\"1-主机分组\">1. 主机分组</h3>\n<ul>\n<li>hosts文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">密码设置</span></span><br><span class=\"line\">[master]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=1</span><br><span class=\"line\"></span><br><span class=\"line\">[node1]</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=2</span><br><span class=\"line\"></span><br><span class=\"line\">[node2]</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=3</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">分组设置</span></span><br><span class=\"line\">[kubernetes:children]</span><br><span class=\"line\">master</span><br><span class=\"line\">node1</span><br><span class=\"line\">node2</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"一、Ansible安装\">一、Ansible安装</h2>\n<h3 id=\"1-yum源安装\">1. yum源安装</h3>\n<p>基于centos7.9和默认Python2.7安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-验证ansible安装结果\">2. 验证ansible安装结果</h3>\n<p>查看版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible --version</span><br><span class=\"line\">ansible 2.9.27</span><br><span class=\"line\">  config file = /etc/ansible/ansible.cfg</span><br><span class=\"line\">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class=\"line\">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class=\"line\">  executable location = /usr/bin/ansible</span><br><span class=\"line\">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure>\n<p>查看/etc/ansible/路径下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ll /etc/ansible/</span><br><span class=\"line\">total 28</span><br><span class=\"line\">-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg</span><br><span class=\"line\">-rw-r--r--. 1 root root  1219 May 23 04:32 hosts</span><br><span class=\"line\">drwxr-xr-x. 2 root root     6 Jan 15  2022 roles</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-编辑host文件\">3. 编辑host文件</h3>\n<p>在<code>/etc/ansible/hosts</code>文件里面，添加三台测试机器的用户信息。</p>\n<p>当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-编辑playbook-sample\">4. 编辑playbook sample</h3>\n<p>在<code>/etc/ansible/</code>路径下添加<code>test.yml</code>文件如下，<code>hosts: kubernetes</code>表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。</p>\n<p>命令含义：将字符串<code>kongkong</code>输出到<code>/etc/kongkong.txt</code>文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  gather_facts: No</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: echo test data to file</span><br><span class=\"line\">    shell: echo kongkong &gt;&gt; /etc/kongkong.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-执行测试\">5. 执行测试</h3>\n<p>查看执行结果<code>ok=1    changed=1</code>表示执行成功，update1个。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible-playbook test.yml</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY [kubernetes] ****************************************************************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">TASK [find file] *****************************************************************************************************</span><br><span class=\"line\">changed: [192.168.132.131]</span><br><span class=\"line\">changed: [192.168.132.130]</span><br><span class=\"line\">changed: [192.168.132.129]</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY RECAP ***********************************************************************************************************</span><br><span class=\"line\">192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证测试结果\">6. 验证测试结果</h3>\n<p>到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/kongkong.txt</span><br><span class=\"line\">kongkong</span><br></pre></td></tr></table></figure>\n<h2 id=\"二、Ansible配置\">二、Ansible配置</h2>\n<h3 id=\"1-主机分组\">1. 主机分组</h3>\n<ul>\n<li>hosts文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">密码设置</span></span><br><span class=\"line\">[master]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=1</span><br><span class=\"line\"></span><br><span class=\"line\">[node1]</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=2</span><br><span class=\"line\"></span><br><span class=\"line\">[node2]</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=3</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">分组设置</span></span><br><span class=\"line\">[kubernetes:children]</span><br><span class=\"line\">master</span><br><span class=\"line\">node1</span><br><span class=\"line\">node2</span><br></pre></td></tr></table></figure>\n"},{"_content":"## 1. 业务系统\n### 1.1.功能\n\n### 1.2.部署节点\n\n### 1.3.性能要求\n\n\n\n## 2. 中间件集群\n\n\n\n| node1          | node2          | node3       | node4       | node5       | node6       | node7 | node8 |\n| -------------- | -------------- | ----------- | ----------- | ----------- | ----------- | ----- | ----- |\n| esticsearch    | esticsearch    | esticsearch | esticsearch | esticsearch | esticsearch |       |       |\n| zookeeper      | zookeeper      | zookeeper   | zookeeper   | zookeeper   | zookeeper   |       |       |\n| kafka          | kafka          | kafka       | kafka       | kafka       | kafka       |       |       |\n| nacos          | nacos          | nacos       | nacos       | nacos       | nacos       |       |       |\n| redis          | redis          | redis       | redis       | redis       | redis       |       |       |\n| minIO          | minIO          | minIO       | minIO       | minIO       | minIO       |       |       |\n| nginx          | nginx          |             |             |             |             |       |       |\n| **MySQL**      | **MySQL**      |             |             |             |             |       |       |\n| **keepalived** | **keepalived** |             |             |             |             |       |       |\n|                |                |             |             |             |             |       |       |\n\n\n\n### 2.1.esticsearch\n\n### 2.2.zookeeper\n\n### 2.3.kafka\n\n依赖关系：zookeeper\n\n### 2.4.nacos\n\n依赖关系：MySQL\n\n### 2.5.redis\n\n\n\n### 2.6.minIO\n\n### 2.7.nginx\n\n\n\n\n\n## 3.数据库部署\n\n### 3.1.双主一从\n\n### 3.2.高可靠\n\n### 3.3.数据备份\n\n\n\n\n\n\n\n\n\n## 4.部署计划\n\n### 4.1.docker迁移\n\n### 4.2.网络配置\n\n\n\n### 4.3.组网验证\n\n### 4.4.压力测试\n\n\n\n\n\n\n\n\n\n\n\n## 5.监控系统\n\n### 5.1.监控部署\n\n\n\n| node1    | node2    | node3    | node4    | node5    | node6    | node7        | node8        |\n| -------- | -------- | -------- | -------- | -------- | -------- | ------------ | ------------ |\n| exporter | exporter | exporter | exporter | exporter | exporter | exporter     | exporter     |\n|          |          |          |          |          |          | Prometheus   | Prometheus   |\n|          |          |          |          |          |          | Alertmanager | Alertmanager |\n|          |          |          |          |          |          | Grafana      | Grafana      |\n\n\n\n### 5.2.设备监控\n\nCPU使用率\n\n内存使用率\n\n磁盘使用率\n\n进程状态\n\n网络延迟\n\n网络丢包率\n\n### 5.3.服务监控\n\nurl\n\n进程\n\n\n\n\n\n### 5.4.日志收集\n\n| node1    | node2    | node3    | node4    | node5    | node6    | node7         | node8         |\n| -------- | -------- | -------- | -------- | -------- | -------- | ------------- | ------------- |\n| filebeat | filebeat | filebeat | filebeat | filebeat | filebeat | filebeat      | filebeat      |\n|          |          |          |          |          |          | elasticsearch | elasticsearch |\n|          |          |          |          |          |          | kibana        | kibana        |\n|          |          |          |          |          |          | kafka         | kafka         |\n\n\n\n### 5.1.日志目录清单\n\n\n\n### 5.2.日志搜索\n\n### 5.3.日志归档\n\n\n\n### 5.4.定期清理\n\n定期清理计划\n\n\n\n## 6.性能评估\n\n### 6.1.网络性能\n\n网络带宽承载\n\n\n\n\n\n### 6.2.中间件性能\n\n### 6.3.应用性能\n\n\n\n\n\n## 7.应急预案\n\n### 7.1.网络故障\n\n### 7.2.主机故障\n\n### 7.3.程序异常\n\n### 7.4.人员应急\n\n运维操作需至少同时两人了解。\n\n\n\n\n\n## 8.备份计划\n\n### 8.1.数据备份\n\n数据库\n\n图片\n\n日志\n\n### 8.2.程序备份\n\n版本备份\n\n\n\n\n\n### 8.3.文档备份\n\n运维文档\n\n","source":"_posts/07中间件/0.1.2023秋计划.md","raw":"## 1. 业务系统\n### 1.1.功能\n\n### 1.2.部署节点\n\n### 1.3.性能要求\n\n\n\n## 2. 中间件集群\n\n\n\n| node1          | node2          | node3       | node4       | node5       | node6       | node7 | node8 |\n| -------------- | -------------- | ----------- | ----------- | ----------- | ----------- | ----- | ----- |\n| esticsearch    | esticsearch    | esticsearch | esticsearch | esticsearch | esticsearch |       |       |\n| zookeeper      | zookeeper      | zookeeper   | zookeeper   | zookeeper   | zookeeper   |       |       |\n| kafka          | kafka          | kafka       | kafka       | kafka       | kafka       |       |       |\n| nacos          | nacos          | nacos       | nacos       | nacos       | nacos       |       |       |\n| redis          | redis          | redis       | redis       | redis       | redis       |       |       |\n| minIO          | minIO          | minIO       | minIO       | minIO       | minIO       |       |       |\n| nginx          | nginx          |             |             |             |             |       |       |\n| **MySQL**      | **MySQL**      |             |             |             |             |       |       |\n| **keepalived** | **keepalived** |             |             |             |             |       |       |\n|                |                |             |             |             |             |       |       |\n\n\n\n### 2.1.esticsearch\n\n### 2.2.zookeeper\n\n### 2.3.kafka\n\n依赖关系：zookeeper\n\n### 2.4.nacos\n\n依赖关系：MySQL\n\n### 2.5.redis\n\n\n\n### 2.6.minIO\n\n### 2.7.nginx\n\n\n\n\n\n## 3.数据库部署\n\n### 3.1.双主一从\n\n### 3.2.高可靠\n\n### 3.3.数据备份\n\n\n\n\n\n\n\n\n\n## 4.部署计划\n\n### 4.1.docker迁移\n\n### 4.2.网络配置\n\n\n\n### 4.3.组网验证\n\n### 4.4.压力测试\n\n\n\n\n\n\n\n\n\n\n\n## 5.监控系统\n\n### 5.1.监控部署\n\n\n\n| node1    | node2    | node3    | node4    | node5    | node6    | node7        | node8        |\n| -------- | -------- | -------- | -------- | -------- | -------- | ------------ | ------------ |\n| exporter | exporter | exporter | exporter | exporter | exporter | exporter     | exporter     |\n|          |          |          |          |          |          | Prometheus   | Prometheus   |\n|          |          |          |          |          |          | Alertmanager | Alertmanager |\n|          |          |          |          |          |          | Grafana      | Grafana      |\n\n\n\n### 5.2.设备监控\n\nCPU使用率\n\n内存使用率\n\n磁盘使用率\n\n进程状态\n\n网络延迟\n\n网络丢包率\n\n### 5.3.服务监控\n\nurl\n\n进程\n\n\n\n\n\n### 5.4.日志收集\n\n| node1    | node2    | node3    | node4    | node5    | node6    | node7         | node8         |\n| -------- | -------- | -------- | -------- | -------- | -------- | ------------- | ------------- |\n| filebeat | filebeat | filebeat | filebeat | filebeat | filebeat | filebeat      | filebeat      |\n|          |          |          |          |          |          | elasticsearch | elasticsearch |\n|          |          |          |          |          |          | kibana        | kibana        |\n|          |          |          |          |          |          | kafka         | kafka         |\n\n\n\n### 5.1.日志目录清单\n\n\n\n### 5.2.日志搜索\n\n### 5.3.日志归档\n\n\n\n### 5.4.定期清理\n\n定期清理计划\n\n\n\n## 6.性能评估\n\n### 6.1.网络性能\n\n网络带宽承载\n\n\n\n\n\n### 6.2.中间件性能\n\n### 6.3.应用性能\n\n\n\n\n\n## 7.应急预案\n\n### 7.1.网络故障\n\n### 7.2.主机故障\n\n### 7.3.程序异常\n\n### 7.4.人员应急\n\n运维操作需至少同时两人了解。\n\n\n\n\n\n## 8.备份计划\n\n### 8.1.数据备份\n\n数据库\n\n图片\n\n日志\n\n### 8.2.程序备份\n\n版本备份\n\n\n\n\n\n### 8.3.文档备份\n\n运维文档\n\n","slug":"07中间件/0.1.2023秋计划","published":1,"date":"2023-09-01T13:06:37.560Z","updated":"2023-06-15T02:05:28.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0o000ezb8abnnm665c","content":"<h2 id=\"1-业务系统\">1. 业务系统</h2>\n<h3 id=\"1-1-功能\">1.1.功能</h3>\n<h3 id=\"1-2-部署节点\">1.2.部署节点</h3>\n<h3 id=\"1-3-性能要求\">1.3.性能要求</h3>\n<h2 id=\"2-中间件集群\">2. 中间件集群</h2>\n<table>\n<thead>\n<tr>\n<th>node1</th>\n<th>node2</th>\n<th>node3</th>\n<th>node4</th>\n<th>node5</th>\n<th>node6</th>\n<th>node7</th>\n<th>node8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nginx</td>\n<td>nginx</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>MySQL</strong></td>\n<td><strong>MySQL</strong></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>keepalived</strong></td>\n<td><strong>keepalived</strong></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-1-esticsearch\">2.1.esticsearch</h3>\n<h3 id=\"2-2-zookeeper\">2.2.zookeeper</h3>\n<h3 id=\"2-3-kafka\">2.3.kafka</h3>\n<p>依赖关系：zookeeper</p>\n<h3 id=\"2-4-nacos\">2.4.nacos</h3>\n<p>依赖关系：MySQL</p>\n<h3 id=\"2-5-redis\">2.5.redis</h3>\n<h3 id=\"2-6-minIO\">2.6.minIO</h3>\n<h3 id=\"2-7-nginx\">2.7.nginx</h3>\n<h2 id=\"3-数据库部署\">3.数据库部署</h2>\n<h3 id=\"3-1-双主一从\">3.1.双主一从</h3>\n<h3 id=\"3-2-高可靠\">3.2.高可靠</h3>\n<h3 id=\"3-3-数据备份\">3.3.数据备份</h3>\n<h2 id=\"4-部署计划\">4.部署计划</h2>\n<h3 id=\"4-1-docker迁移\">4.1.docker迁移</h3>\n<h3 id=\"4-2-网络配置\">4.2.网络配置</h3>\n<h3 id=\"4-3-组网验证\">4.3.组网验证</h3>\n<h3 id=\"4-4-压力测试\">4.4.压力测试</h3>\n<h2 id=\"5-监控系统\">5.监控系统</h2>\n<h3 id=\"5-1-监控部署\">5.1.监控部署</h3>\n<table>\n<thead>\n<tr>\n<th>node1</th>\n<th>node2</th>\n<th>node3</th>\n<th>node4</th>\n<th>node5</th>\n<th>node6</th>\n<th>node7</th>\n<th>node8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>Prometheus</td>\n<td>Prometheus</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>Alertmanager</td>\n<td>Alertmanager</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>Grafana</td>\n<td>Grafana</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"5-2-设备监控\">5.2.设备监控</h3>\n<p>CPU使用率</p>\n<p>内存使用率</p>\n<p>磁盘使用率</p>\n<p>进程状态</p>\n<p>网络延迟</p>\n<p>网络丢包率</p>\n<h3 id=\"5-3-服务监控\">5.3.服务监控</h3>\n<p>url</p>\n<p>进程</p>\n<h3 id=\"5-4-日志收集\">5.4.日志收集</h3>\n<table>\n<thead>\n<tr>\n<th>node1</th>\n<th>node2</th>\n<th>node3</th>\n<th>node4</th>\n<th>node5</th>\n<th>node6</th>\n<th>node7</th>\n<th>node8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>elasticsearch</td>\n<td>elasticsearch</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>kibana</td>\n<td>kibana</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>kafka</td>\n<td>kafka</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"5-1-日志目录清单\">5.1.日志目录清单</h3>\n<h3 id=\"5-2-日志搜索\">5.2.日志搜索</h3>\n<h3 id=\"5-3-日志归档\">5.3.日志归档</h3>\n<h3 id=\"5-4-定期清理\">5.4.定期清理</h3>\n<p>定期清理计划</p>\n<h2 id=\"6-性能评估\">6.性能评估</h2>\n<h3 id=\"6-1-网络性能\">6.1.网络性能</h3>\n<p>网络带宽承载</p>\n<h3 id=\"6-2-中间件性能\">6.2.中间件性能</h3>\n<h3 id=\"6-3-应用性能\">6.3.应用性能</h3>\n<h2 id=\"7-应急预案\">7.应急预案</h2>\n<h3 id=\"7-1-网络故障\">7.1.网络故障</h3>\n<h3 id=\"7-2-主机故障\">7.2.主机故障</h3>\n<h3 id=\"7-3-程序异常\">7.3.程序异常</h3>\n<h3 id=\"7-4-人员应急\">7.4.人员应急</h3>\n<p>运维操作需至少同时两人了解。</p>\n<h2 id=\"8-备份计划\">8.备份计划</h2>\n<h3 id=\"8-1-数据备份\">8.1.数据备份</h3>\n<p>数据库</p>\n<p>图片</p>\n<p>日志</p>\n<h3 id=\"8-2-程序备份\">8.2.程序备份</h3>\n<p>版本备份</p>\n<h3 id=\"8-3-文档备份\">8.3.文档备份</h3>\n<p>运维文档</p>\n","excerpt":"","more":"<h2 id=\"1-业务系统\">1. 业务系统</h2>\n<h3 id=\"1-1-功能\">1.1.功能</h3>\n<h3 id=\"1-2-部署节点\">1.2.部署节点</h3>\n<h3 id=\"1-3-性能要求\">1.3.性能要求</h3>\n<h2 id=\"2-中间件集群\">2. 中间件集群</h2>\n<table>\n<thead>\n<tr>\n<th>node1</th>\n<th>node2</th>\n<th>node3</th>\n<th>node4</th>\n<th>node5</th>\n<th>node6</th>\n<th>node7</th>\n<th>node8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td>esticsearch</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td>zookeeper</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td>kafka</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td>nacos</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td>redis</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td>minIO</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>nginx</td>\n<td>nginx</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>MySQL</strong></td>\n<td><strong>MySQL</strong></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>keepalived</strong></td>\n<td><strong>keepalived</strong></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"2-1-esticsearch\">2.1.esticsearch</h3>\n<h3 id=\"2-2-zookeeper\">2.2.zookeeper</h3>\n<h3 id=\"2-3-kafka\">2.3.kafka</h3>\n<p>依赖关系：zookeeper</p>\n<h3 id=\"2-4-nacos\">2.4.nacos</h3>\n<p>依赖关系：MySQL</p>\n<h3 id=\"2-5-redis\">2.5.redis</h3>\n<h3 id=\"2-6-minIO\">2.6.minIO</h3>\n<h3 id=\"2-7-nginx\">2.7.nginx</h3>\n<h2 id=\"3-数据库部署\">3.数据库部署</h2>\n<h3 id=\"3-1-双主一从\">3.1.双主一从</h3>\n<h3 id=\"3-2-高可靠\">3.2.高可靠</h3>\n<h3 id=\"3-3-数据备份\">3.3.数据备份</h3>\n<h2 id=\"4-部署计划\">4.部署计划</h2>\n<h3 id=\"4-1-docker迁移\">4.1.docker迁移</h3>\n<h3 id=\"4-2-网络配置\">4.2.网络配置</h3>\n<h3 id=\"4-3-组网验证\">4.3.组网验证</h3>\n<h3 id=\"4-4-压力测试\">4.4.压力测试</h3>\n<h2 id=\"5-监控系统\">5.监控系统</h2>\n<h3 id=\"5-1-监控部署\">5.1.监控部署</h3>\n<table>\n<thead>\n<tr>\n<th>node1</th>\n<th>node2</th>\n<th>node3</th>\n<th>node4</th>\n<th>node5</th>\n<th>node6</th>\n<th>node7</th>\n<th>node8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n<td>exporter</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>Prometheus</td>\n<td>Prometheus</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>Alertmanager</td>\n<td>Alertmanager</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>Grafana</td>\n<td>Grafana</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"5-2-设备监控\">5.2.设备监控</h3>\n<p>CPU使用率</p>\n<p>内存使用率</p>\n<p>磁盘使用率</p>\n<p>进程状态</p>\n<p>网络延迟</p>\n<p>网络丢包率</p>\n<h3 id=\"5-3-服务监控\">5.3.服务监控</h3>\n<p>url</p>\n<p>进程</p>\n<h3 id=\"5-4-日志收集\">5.4.日志收集</h3>\n<table>\n<thead>\n<tr>\n<th>node1</th>\n<th>node2</th>\n<th>node3</th>\n<th>node4</th>\n<th>node5</th>\n<th>node6</th>\n<th>node7</th>\n<th>node8</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n<td>filebeat</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>elasticsearch</td>\n<td>elasticsearch</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>kibana</td>\n<td>kibana</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n<td>kafka</td>\n<td>kafka</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"5-1-日志目录清单\">5.1.日志目录清单</h3>\n<h3 id=\"5-2-日志搜索\">5.2.日志搜索</h3>\n<h3 id=\"5-3-日志归档\">5.3.日志归档</h3>\n<h3 id=\"5-4-定期清理\">5.4.定期清理</h3>\n<p>定期清理计划</p>\n<h2 id=\"6-性能评估\">6.性能评估</h2>\n<h3 id=\"6-1-网络性能\">6.1.网络性能</h3>\n<p>网络带宽承载</p>\n<h3 id=\"6-2-中间件性能\">6.2.中间件性能</h3>\n<h3 id=\"6-3-应用性能\">6.3.应用性能</h3>\n<h2 id=\"7-应急预案\">7.应急预案</h2>\n<h3 id=\"7-1-网络故障\">7.1.网络故障</h3>\n<h3 id=\"7-2-主机故障\">7.2.主机故障</h3>\n<h3 id=\"7-3-程序异常\">7.3.程序异常</h3>\n<h3 id=\"7-4-人员应急\">7.4.人员应急</h3>\n<p>运维操作需至少同时两人了解。</p>\n<h2 id=\"8-备份计划\">8.备份计划</h2>\n<h3 id=\"8-1-数据备份\">8.1.数据备份</h3>\n<p>数据库</p>\n<p>图片</p>\n<p>日志</p>\n<h3 id=\"8-2-程序备份\">8.2.程序备份</h3>\n<p>版本备份</p>\n<h3 id=\"8-3-文档备份\">8.3.文档备份</h3>\n<p>运维文档</p>\n"},{"_content":"\n\n```\n中间件版本评估原则：\n1、涉及代码兼容性，以开发给出版本为准。\n2、未有明确版本要求的，使用latest stable release。\n```\n\n\n\n### 1.JDK版本\n\n当前开发程序使用JDK 1.8，暂不做改变，中间件环境以JDK1.8为基准。\n\n- JDK1.8新特性：[Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9](https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6)\n\n- JDK1.9新特性：[Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9](https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6)\n\n\n\n### 2.Zookeeper版本\n\n**Apache ZooKeeper 3.7.1 （最新稳定版）**\n\nZooKeeper版本更新规律，当前3.8为主线开发，同时维护3.5/3.6/3.7，各分支发版顺序无规律。\n\n```\n发布策略\nApache ZooKeeper 社区一次支持两个发布分支：稳定和当前。ZooKeeper的稳定版本是3.7.x，当前版本是3.8.x。一旦发布新的次要版本，稳定版本预计将很快退役，大约半年后将宣布为生命周期结束。在半年宽限期内，预计只会发布该版本的安全和关键修复。在宣布EoL之后，社区不再提供进一步的补丁。所有ZooKeeper版本都可以从官方Apache档案中访问。\n\n6 August, 2014: release 3.5.0-alpha available\n04 March, 2020: release 3.6.0 available\n27 March, 2021: release 3.7.0 available\n7 March, 2022: release 3.8.0 available\n\nApache ZooKeeper 3.7.1 (latest stable release)\nApache ZooKeeper 3.6.4 (3.6 is EoL since 30th of December, 2022)\nApache ZooKeeper 3.5.10 (3.5 is EoL since 1st of June, 2022)\n```\n\n- 更新说明：[ZooKeeper：因为协调分布式系统是一个动物园 (apache.org)](https://zookeeper.apache.org/doc/r3.8.1/releasenotes.html)\n\n\n\n### 3.Redis版本\n\n**Redis 7.0.11 (Latest Stable）**\n\n```\n在Redis的版本计划中，版本号第二位为奇数，为非稳定版本，如2.7、2.9、3.1；版本号第二为偶数，为稳定版本如2.6、2.8、3.0；一般来说当前奇数版本是下一个稳定版本的开发版本，如2.9是3.0的开发版本。\n\nRedis 7.0 RC1   Released Mon Jan 31 12:00:00 IST 2022\nRedis 7.0.10 Released Mon Mar 20 16:00:00 IST 2023\nRedis 7.0.11 Released Mon Apr 17 16:00:00 IST 2023\n```\n\n\n\n### 4.MinIO版本\n\n**MinIO Operator 的最新稳定版本：5.0.4**\n\n```\nminio以日期为版本命名，每周更新一次。GitHub项目有tags标识。\n\n官网记录的 MinIO 最新稳定版本的 Linux 平台上 MinIO 部署的操作、管理和开发：发布.2023-05-04T21-44-30Z。\nhttps://www.minio.org.cn/docs/minio/linux/index.html\n```\n\n- GitHub：[GitHub - minio/minio: High Performance Object Storage for AI](https://github.com/minio/minio)\n\n- 历史版本：[dl.minio.org.cn/server/minio/release/linux-amd64/archive/](https://dl.minio.org.cn/server/minio/release/linux-amd64/archive/)\n\n\n\n### 5.MySQL版本\n\n暂定**MySQL 8.0.32**\n\nMySQL不区分具体是否稳定版，最新一次子版本发布于今年1月，平均三个月到半年发布一个小版本。\n\n- 生命周期：[EOL MySQL | End of Life (EOL) | Oracle Corporation | Lifecycle](https://endoflife.software/applications/databases/mysql)\n\n```\n版本\t发布时间\t上一年版本\t上一年发布时间\n8.0.32\t2023.1.17\t8.0.28\t2022.1.18\n8.0.31\t2022.10.11\t8.0.27\t2021.10.10\n8.0.30\t2022.7.26\t8.0.26\t2021.7.20\n8.0.29\t2022.4.26\t8.0.25 8.0.24\t2021.5.11\n\nmysql-5.7.41-1.el7.x86_64\tDec 9, 2022\nmysql-5.7.40-1.el7.x86_64\tAug 31, 2022\nmysql-5.7.39-1.el7.x86_64\tJun 13, 2022\n\n\nCurrent releases\tRelease\tRelease date\tEnd of life\t\nMySQL 8.0\tApril 19, 2018\tApril, 2026\t\nMySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t\nAll releases\nMySQL 8.0\tApril 19, 2018\tApril, 2026\t\nMySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t\nMySQL 5.6\tFebruary 5, 2013\tFebruary 5, 2021\t\nMySQL 5.5\tDecember 3, 2010\tDecember 3, 2018\t\nMySQL 5.1\tNovember 14, 2008\tDecember 31, 2013\n```\n\n\n\n### 6.Nacos版本\n\n**官网推荐稳定版：Nacos 2.1.1**\n\n- 博客：https://nacos.io/zh-cn/blog/index.html\n\n```\nhttps://github.com/alibaba/nacos/releases\n\nNacos 依赖 Java 环境来运行。如果您是从代码开始构建并运行Nacos，还需要为此配置 Maven环境，请确保是在以下版本环境中安装使用:\n64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。\n64 bit JDK 1.8+；下载 & 配置。\nMaven 3.2.x+；下载 & 配置。\n\n最近更新：\nApr 11, 2023  Nacos 2.2.2发布，优化启动体验和鉴权提示\nMar 20, 2023  Nacos 多个新版本发布，rust-sdk完全适配完成\n```\n\n\n\n### 7.Kafka版本\n\n**Kafka 3.4.0**\n\n- 官网：[Apache Kafka](https://kafka.apache.org/downloads)\n\n```\n3.4.0 is the latest release. The current stable version is 3.4.0\n```\n\n\n\n### 8.Elasticsearch版本\n\n**最新版本：8.8.0**\n\n- 官网版本：[Starting with the Elasticsearch Platform and its Solutions [8.8\\] | Elastic](https://www.elastic.co/guide/en/welcome-to-elastic/8.8/index.html)\n\n- 生命周期：[支持一览表 | Elastic](https://www.elastic.co/cn/support/matrix)\n\n```\nElasticsearch\t支持截止日期\t\t\t\t\t\t\t\t\t\t\t维护至\n8.x\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2024 年 8 月 10 日，或 9.0 发布日期（待定）的 6 个月后\n7.17.x\t\t\t2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准\t 2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准\n```\n\n\n\n### 9.Nginx版本\n\n**Nginx-1.24.0 (Stable version)**\n\n- 官网：[nginx: download](https://nginx.org/en/download.html)\n\n```\nChanges with nginx 1.24.0                                        11 Apr 2023\n1.24.x stable branch.\nChanges with nginx 1.23.4                                        28 Mar 2023\nChanges with nginx 1.23.3                                        13 Dec 2022\nChanges with nginx 1.23.0                                        21 Jun 2022\nChanges with nginx 1.21.6                                        25 Jan 2022\n```\n\n","source":"_posts/07中间件/2.1.版本选型.md","raw":"\n\n```\n中间件版本评估原则：\n1、涉及代码兼容性，以开发给出版本为准。\n2、未有明确版本要求的，使用latest stable release。\n```\n\n\n\n### 1.JDK版本\n\n当前开发程序使用JDK 1.8，暂不做改变，中间件环境以JDK1.8为基准。\n\n- JDK1.8新特性：[Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9](https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6)\n\n- JDK1.9新特性：[Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9](https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6)\n\n\n\n### 2.Zookeeper版本\n\n**Apache ZooKeeper 3.7.1 （最新稳定版）**\n\nZooKeeper版本更新规律，当前3.8为主线开发，同时维护3.5/3.6/3.7，各分支发版顺序无规律。\n\n```\n发布策略\nApache ZooKeeper 社区一次支持两个发布分支：稳定和当前。ZooKeeper的稳定版本是3.7.x，当前版本是3.8.x。一旦发布新的次要版本，稳定版本预计将很快退役，大约半年后将宣布为生命周期结束。在半年宽限期内，预计只会发布该版本的安全和关键修复。在宣布EoL之后，社区不再提供进一步的补丁。所有ZooKeeper版本都可以从官方Apache档案中访问。\n\n6 August, 2014: release 3.5.0-alpha available\n04 March, 2020: release 3.6.0 available\n27 March, 2021: release 3.7.0 available\n7 March, 2022: release 3.8.0 available\n\nApache ZooKeeper 3.7.1 (latest stable release)\nApache ZooKeeper 3.6.4 (3.6 is EoL since 30th of December, 2022)\nApache ZooKeeper 3.5.10 (3.5 is EoL since 1st of June, 2022)\n```\n\n- 更新说明：[ZooKeeper：因为协调分布式系统是一个动物园 (apache.org)](https://zookeeper.apache.org/doc/r3.8.1/releasenotes.html)\n\n\n\n### 3.Redis版本\n\n**Redis 7.0.11 (Latest Stable）**\n\n```\n在Redis的版本计划中，版本号第二位为奇数，为非稳定版本，如2.7、2.9、3.1；版本号第二为偶数，为稳定版本如2.6、2.8、3.0；一般来说当前奇数版本是下一个稳定版本的开发版本，如2.9是3.0的开发版本。\n\nRedis 7.0 RC1   Released Mon Jan 31 12:00:00 IST 2022\nRedis 7.0.10 Released Mon Mar 20 16:00:00 IST 2023\nRedis 7.0.11 Released Mon Apr 17 16:00:00 IST 2023\n```\n\n\n\n### 4.MinIO版本\n\n**MinIO Operator 的最新稳定版本：5.0.4**\n\n```\nminio以日期为版本命名，每周更新一次。GitHub项目有tags标识。\n\n官网记录的 MinIO 最新稳定版本的 Linux 平台上 MinIO 部署的操作、管理和开发：发布.2023-05-04T21-44-30Z。\nhttps://www.minio.org.cn/docs/minio/linux/index.html\n```\n\n- GitHub：[GitHub - minio/minio: High Performance Object Storage for AI](https://github.com/minio/minio)\n\n- 历史版本：[dl.minio.org.cn/server/minio/release/linux-amd64/archive/](https://dl.minio.org.cn/server/minio/release/linux-amd64/archive/)\n\n\n\n### 5.MySQL版本\n\n暂定**MySQL 8.0.32**\n\nMySQL不区分具体是否稳定版，最新一次子版本发布于今年1月，平均三个月到半年发布一个小版本。\n\n- 生命周期：[EOL MySQL | End of Life (EOL) | Oracle Corporation | Lifecycle](https://endoflife.software/applications/databases/mysql)\n\n```\n版本\t发布时间\t上一年版本\t上一年发布时间\n8.0.32\t2023.1.17\t8.0.28\t2022.1.18\n8.0.31\t2022.10.11\t8.0.27\t2021.10.10\n8.0.30\t2022.7.26\t8.0.26\t2021.7.20\n8.0.29\t2022.4.26\t8.0.25 8.0.24\t2021.5.11\n\nmysql-5.7.41-1.el7.x86_64\tDec 9, 2022\nmysql-5.7.40-1.el7.x86_64\tAug 31, 2022\nmysql-5.7.39-1.el7.x86_64\tJun 13, 2022\n\n\nCurrent releases\tRelease\tRelease date\tEnd of life\t\nMySQL 8.0\tApril 19, 2018\tApril, 2026\t\nMySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t\nAll releases\nMySQL 8.0\tApril 19, 2018\tApril, 2026\t\nMySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t\nMySQL 5.6\tFebruary 5, 2013\tFebruary 5, 2021\t\nMySQL 5.5\tDecember 3, 2010\tDecember 3, 2018\t\nMySQL 5.1\tNovember 14, 2008\tDecember 31, 2013\n```\n\n\n\n### 6.Nacos版本\n\n**官网推荐稳定版：Nacos 2.1.1**\n\n- 博客：https://nacos.io/zh-cn/blog/index.html\n\n```\nhttps://github.com/alibaba/nacos/releases\n\nNacos 依赖 Java 环境来运行。如果您是从代码开始构建并运行Nacos，还需要为此配置 Maven环境，请确保是在以下版本环境中安装使用:\n64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。\n64 bit JDK 1.8+；下载 & 配置。\nMaven 3.2.x+；下载 & 配置。\n\n最近更新：\nApr 11, 2023  Nacos 2.2.2发布，优化启动体验和鉴权提示\nMar 20, 2023  Nacos 多个新版本发布，rust-sdk完全适配完成\n```\n\n\n\n### 7.Kafka版本\n\n**Kafka 3.4.0**\n\n- 官网：[Apache Kafka](https://kafka.apache.org/downloads)\n\n```\n3.4.0 is the latest release. The current stable version is 3.4.0\n```\n\n\n\n### 8.Elasticsearch版本\n\n**最新版本：8.8.0**\n\n- 官网版本：[Starting with the Elasticsearch Platform and its Solutions [8.8\\] | Elastic](https://www.elastic.co/guide/en/welcome-to-elastic/8.8/index.html)\n\n- 生命周期：[支持一览表 | Elastic](https://www.elastic.co/cn/support/matrix)\n\n```\nElasticsearch\t支持截止日期\t\t\t\t\t\t\t\t\t\t\t维护至\n8.x\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2024 年 8 月 10 日，或 9.0 发布日期（待定）的 6 个月后\n7.17.x\t\t\t2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准\t 2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准\n```\n\n\n\n### 9.Nginx版本\n\n**Nginx-1.24.0 (Stable version)**\n\n- 官网：[nginx: download](https://nginx.org/en/download.html)\n\n```\nChanges with nginx 1.24.0                                        11 Apr 2023\n1.24.x stable branch.\nChanges with nginx 1.23.4                                        28 Mar 2023\nChanges with nginx 1.23.3                                        13 Dec 2022\nChanges with nginx 1.23.0                                        21 Jun 2022\nChanges with nginx 1.21.6                                        25 Jan 2022\n```\n\n","slug":"07中间件/2.1.版本选型","published":1,"date":"2023-09-01T13:06:37.570Z","updated":"2023-07-08T09:34:06.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0p000fzb8abvap9fys","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">中间件版本评估原则：</span><br><span class=\"line\">1、涉及代码兼容性，以开发给出版本为准。</span><br><span class=\"line\">2、未有明确版本要求的，使用latest stable release。</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-JDK版本\">1.JDK版本</h3>\n<p>当前开发程序使用JDK 1.8，暂不做改变，中间件环境以JDK1.8为基准。</p>\n<ul>\n<li>\n<p>JDK1.8新特性：<a href=\"https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6\">Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9</a></p>\n</li>\n<li>\n<p>JDK1.9新特性：<a href=\"https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6\">Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9</a></p>\n</li>\n</ul>\n<h3 id=\"2-Zookeeper版本\">2.Zookeeper版本</h3>\n<p><strong>Apache ZooKeeper 3.7.1 （最新稳定版）</strong></p>\n<p>ZooKeeper版本更新规律，当前3.8为主线开发，同时维护3.5/3.6/3.7，各分支发版顺序无规律。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">发布策略</span><br><span class=\"line\">Apache ZooKeeper 社区一次支持两个发布分支：稳定和当前。ZooKeeper的稳定版本是3.7.x，当前版本是3.8.x。一旦发布新的次要版本，稳定版本预计将很快退役，大约半年后将宣布为生命周期结束。在半年宽限期内，预计只会发布该版本的安全和关键修复。在宣布EoL之后，社区不再提供进一步的补丁。所有ZooKeeper版本都可以从官方Apache档案中访问。</span><br><span class=\"line\"></span><br><span class=\"line\">6 August, 2014: release 3.5.0-alpha available</span><br><span class=\"line\">04 March, 2020: release 3.6.0 available</span><br><span class=\"line\">27 March, 2021: release 3.7.0 available</span><br><span class=\"line\">7 March, 2022: release 3.8.0 available</span><br><span class=\"line\"></span><br><span class=\"line\">Apache ZooKeeper 3.7.1 (latest stable release)</span><br><span class=\"line\">Apache ZooKeeper 3.6.4 (3.6 is EoL since 30th of December, 2022)</span><br><span class=\"line\">Apache ZooKeeper 3.5.10 (3.5 is EoL since 1st of June, 2022)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>更新说明：<a href=\"https://zookeeper.apache.org/doc/r3.8.1/releasenotes.html\">ZooKeeper：因为协调分布式系统是一个动物园 (apache.org)</a></li>\n</ul>\n<h3 id=\"3-Redis版本\">3.Redis版本</h3>\n<p><strong>Redis 7.0.11 (Latest Stable）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在Redis的版本计划中，版本号第二位为奇数，为非稳定版本，如2.7、2.9、3.1；版本号第二为偶数，为稳定版本如2.6、2.8、3.0；一般来说当前奇数版本是下一个稳定版本的开发版本，如2.9是3.0的开发版本。</span><br><span class=\"line\"></span><br><span class=\"line\">Redis 7.0 RC1   Released Mon Jan 31 12:00:00 IST 2022</span><br><span class=\"line\">Redis 7.0.10 Released Mon Mar 20 16:00:00 IST 2023</span><br><span class=\"line\">Redis 7.0.11 Released Mon Apr 17 16:00:00 IST 2023</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-MinIO版本\">4.MinIO版本</h3>\n<p><strong>MinIO Operator 的最新稳定版本：5.0.4</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">minio以日期为版本命名，每周更新一次。GitHub项目有tags标识。</span><br><span class=\"line\"></span><br><span class=\"line\">官网记录的 MinIO 最新稳定版本的 Linux 平台上 MinIO 部署的操作、管理和开发：发布.2023-05-04T21-44-30Z。</span><br><span class=\"line\">https://www.minio.org.cn/docs/minio/linux/index.html</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>GitHub：<a href=\"https://github.com/minio/minio\">GitHub - minio/minio: High Performance Object Storage for AI</a></p>\n</li>\n<li>\n<p>历史版本：<a href=\"https://dl.minio.org.cn/server/minio/release/linux-amd64/archive/\">dl.minio.org.cn/server/minio/release/linux-amd64/archive/</a></p>\n</li>\n</ul>\n<h3 id=\"5-MySQL版本\">5.MySQL版本</h3>\n<p>暂定<strong>MySQL 8.0.32</strong></p>\n<p>MySQL不区分具体是否稳定版，最新一次子版本发布于今年1月，平均三个月到半年发布一个小版本。</p>\n<ul>\n<li>生命周期：<a href=\"https://endoflife.software/applications/databases/mysql\">EOL MySQL | End of Life (EOL) | Oracle Corporation | Lifecycle</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">版本\t发布时间\t上一年版本\t上一年发布时间</span><br><span class=\"line\">8.0.32\t2023.1.17\t8.0.28\t2022.1.18</span><br><span class=\"line\">8.0.31\t2022.10.11\t8.0.27\t2021.10.10</span><br><span class=\"line\">8.0.30\t2022.7.26\t8.0.26\t2021.7.20</span><br><span class=\"line\">8.0.29\t2022.4.26\t8.0.25 8.0.24\t2021.5.11</span><br><span class=\"line\"></span><br><span class=\"line\">mysql-5.7.41-1.el7.x86_64\tDec 9, 2022</span><br><span class=\"line\">mysql-5.7.40-1.el7.x86_64\tAug 31, 2022</span><br><span class=\"line\">mysql-5.7.39-1.el7.x86_64\tJun 13, 2022</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Current releases\tRelease\tRelease date\tEnd of life\t</span><br><span class=\"line\">MySQL 8.0\tApril 19, 2018\tApril, 2026\t</span><br><span class=\"line\">MySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t</span><br><span class=\"line\">All releases</span><br><span class=\"line\">MySQL 8.0\tApril 19, 2018\tApril, 2026\t</span><br><span class=\"line\">MySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t</span><br><span class=\"line\">MySQL 5.6\tFebruary 5, 2013\tFebruary 5, 2021\t</span><br><span class=\"line\">MySQL 5.5\tDecember 3, 2010\tDecember 3, 2018\t</span><br><span class=\"line\">MySQL 5.1\tNovember 14, 2008\tDecember 31, 2013</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-Nacos版本\">6.Nacos版本</h3>\n<p><strong>官网推荐稳定版：Nacos 2.1.1</strong></p>\n<ul>\n<li>博客：<a href=\"https://nacos.io/zh-cn/blog/index.html\">https://nacos.io/zh-cn/blog/index.html</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/alibaba/nacos/releases</span><br><span class=\"line\"></span><br><span class=\"line\">Nacos 依赖 Java 环境来运行。如果您是从代码开始构建并运行Nacos，还需要为此配置 Maven环境，请确保是在以下版本环境中安装使用:</span><br><span class=\"line\">64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。</span><br><span class=\"line\">64 bit JDK 1.8+；下载 &amp; 配置。</span><br><span class=\"line\">Maven 3.2.x+；下载 &amp; 配置。</span><br><span class=\"line\"></span><br><span class=\"line\">最近更新：</span><br><span class=\"line\">Apr 11, 2023  Nacos 2.2.2发布，优化启动体验和鉴权提示</span><br><span class=\"line\">Mar 20, 2023  Nacos 多个新版本发布，rust-sdk完全适配完成</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-Kafka版本\">7.Kafka版本</h3>\n<p><strong>Kafka 3.4.0</strong></p>\n<ul>\n<li>官网：<a href=\"https://kafka.apache.org/downloads\">Apache Kafka</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.4.0 is the latest release. The current stable version is 3.4.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-Elasticsearch版本\">8.Elasticsearch版本</h3>\n<p><strong>最新版本：8.8.0</strong></p>\n<ul>\n<li>\n<p>官网版本：[Starting with the Elasticsearch Platform and its Solutions <a href=\"https://www.elastic.co/guide/en/welcome-to-elastic/8.8/index.html\">8.8] | Elastic</a></p>\n</li>\n<li>\n<p>生命周期：<a href=\"https://www.elastic.co/cn/support/matrix\">支持一览表 | Elastic</a></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Elasticsearch\t支持截止日期\t\t\t\t\t\t\t\t\t\t\t维护至</span><br><span class=\"line\">8.x\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2024 年 8 月 10 日，或 9.0 发布日期（待定）的 6 个月后</span><br><span class=\"line\">7.17.x\t\t\t2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准\t 2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-Nginx版本\">9.Nginx版本</h3>\n<p><strong>Nginx-1.24.0 (Stable version)</strong></p>\n<ul>\n<li>官网：<a href=\"https://nginx.org/en/download.html\">nginx: download</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Changes with nginx 1.24.0                                        11 Apr 2023</span><br><span class=\"line\">1.24.x stable branch.</span><br><span class=\"line\">Changes with nginx 1.23.4                                        28 Mar 2023</span><br><span class=\"line\">Changes with nginx 1.23.3                                        13 Dec 2022</span><br><span class=\"line\">Changes with nginx 1.23.0                                        21 Jun 2022</span><br><span class=\"line\">Changes with nginx 1.21.6                                        25 Jan 2022</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">中间件版本评估原则：</span><br><span class=\"line\">1、涉及代码兼容性，以开发给出版本为准。</span><br><span class=\"line\">2、未有明确版本要求的，使用latest stable release。</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-JDK版本\">1.JDK版本</h3>\n<p>当前开发程序使用JDK 1.8，暂不做改变，中间件环境以JDK1.8为基准。</p>\n<ul>\n<li>\n<p>JDK1.8新特性：<a href=\"https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6\">Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9</a></p>\n</li>\n<li>\n<p>JDK1.9新特性：<a href=\"https://docs.oracle.com/javase/9/whatsnew/toc.htm#JSNEW-GUID-C23AFD78-C777-460B-8ACE-58BE5EA681F6\">Java Platform, Standard Edition What’s New in Oracle JDK 9, Release 9</a></p>\n</li>\n</ul>\n<h3 id=\"2-Zookeeper版本\">2.Zookeeper版本</h3>\n<p><strong>Apache ZooKeeper 3.7.1 （最新稳定版）</strong></p>\n<p>ZooKeeper版本更新规律，当前3.8为主线开发，同时维护3.5/3.6/3.7，各分支发版顺序无规律。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">发布策略</span><br><span class=\"line\">Apache ZooKeeper 社区一次支持两个发布分支：稳定和当前。ZooKeeper的稳定版本是3.7.x，当前版本是3.8.x。一旦发布新的次要版本，稳定版本预计将很快退役，大约半年后将宣布为生命周期结束。在半年宽限期内，预计只会发布该版本的安全和关键修复。在宣布EoL之后，社区不再提供进一步的补丁。所有ZooKeeper版本都可以从官方Apache档案中访问。</span><br><span class=\"line\"></span><br><span class=\"line\">6 August, 2014: release 3.5.0-alpha available</span><br><span class=\"line\">04 March, 2020: release 3.6.0 available</span><br><span class=\"line\">27 March, 2021: release 3.7.0 available</span><br><span class=\"line\">7 March, 2022: release 3.8.0 available</span><br><span class=\"line\"></span><br><span class=\"line\">Apache ZooKeeper 3.7.1 (latest stable release)</span><br><span class=\"line\">Apache ZooKeeper 3.6.4 (3.6 is EoL since 30th of December, 2022)</span><br><span class=\"line\">Apache ZooKeeper 3.5.10 (3.5 is EoL since 1st of June, 2022)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>更新说明：<a href=\"https://zookeeper.apache.org/doc/r3.8.1/releasenotes.html\">ZooKeeper：因为协调分布式系统是一个动物园 (apache.org)</a></li>\n</ul>\n<h3 id=\"3-Redis版本\">3.Redis版本</h3>\n<p><strong>Redis 7.0.11 (Latest Stable）</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在Redis的版本计划中，版本号第二位为奇数，为非稳定版本，如2.7、2.9、3.1；版本号第二为偶数，为稳定版本如2.6、2.8、3.0；一般来说当前奇数版本是下一个稳定版本的开发版本，如2.9是3.0的开发版本。</span><br><span class=\"line\"></span><br><span class=\"line\">Redis 7.0 RC1   Released Mon Jan 31 12:00:00 IST 2022</span><br><span class=\"line\">Redis 7.0.10 Released Mon Mar 20 16:00:00 IST 2023</span><br><span class=\"line\">Redis 7.0.11 Released Mon Apr 17 16:00:00 IST 2023</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-MinIO版本\">4.MinIO版本</h3>\n<p><strong>MinIO Operator 的最新稳定版本：5.0.4</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">minio以日期为版本命名，每周更新一次。GitHub项目有tags标识。</span><br><span class=\"line\"></span><br><span class=\"line\">官网记录的 MinIO 最新稳定版本的 Linux 平台上 MinIO 部署的操作、管理和开发：发布.2023-05-04T21-44-30Z。</span><br><span class=\"line\">https://www.minio.org.cn/docs/minio/linux/index.html</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>GitHub：<a href=\"https://github.com/minio/minio\">GitHub - minio/minio: High Performance Object Storage for AI</a></p>\n</li>\n<li>\n<p>历史版本：<a href=\"https://dl.minio.org.cn/server/minio/release/linux-amd64/archive/\">dl.minio.org.cn/server/minio/release/linux-amd64/archive/</a></p>\n</li>\n</ul>\n<h3 id=\"5-MySQL版本\">5.MySQL版本</h3>\n<p>暂定<strong>MySQL 8.0.32</strong></p>\n<p>MySQL不区分具体是否稳定版，最新一次子版本发布于今年1月，平均三个月到半年发布一个小版本。</p>\n<ul>\n<li>生命周期：<a href=\"https://endoflife.software/applications/databases/mysql\">EOL MySQL | End of Life (EOL) | Oracle Corporation | Lifecycle</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">版本\t发布时间\t上一年版本\t上一年发布时间</span><br><span class=\"line\">8.0.32\t2023.1.17\t8.0.28\t2022.1.18</span><br><span class=\"line\">8.0.31\t2022.10.11\t8.0.27\t2021.10.10</span><br><span class=\"line\">8.0.30\t2022.7.26\t8.0.26\t2021.7.20</span><br><span class=\"line\">8.0.29\t2022.4.26\t8.0.25 8.0.24\t2021.5.11</span><br><span class=\"line\"></span><br><span class=\"line\">mysql-5.7.41-1.el7.x86_64\tDec 9, 2022</span><br><span class=\"line\">mysql-5.7.40-1.el7.x86_64\tAug 31, 2022</span><br><span class=\"line\">mysql-5.7.39-1.el7.x86_64\tJun 13, 2022</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Current releases\tRelease\tRelease date\tEnd of life\t</span><br><span class=\"line\">MySQL 8.0\tApril 19, 2018\tApril, 2026\t</span><br><span class=\"line\">MySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t</span><br><span class=\"line\">All releases</span><br><span class=\"line\">MySQL 8.0\tApril 19, 2018\tApril, 2026\t</span><br><span class=\"line\">MySQL 5.7\tOctober 21, 2015\tOctober 21, 2023\t</span><br><span class=\"line\">MySQL 5.6\tFebruary 5, 2013\tFebruary 5, 2021\t</span><br><span class=\"line\">MySQL 5.5\tDecember 3, 2010\tDecember 3, 2018\t</span><br><span class=\"line\">MySQL 5.1\tNovember 14, 2008\tDecember 31, 2013</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-Nacos版本\">6.Nacos版本</h3>\n<p><strong>官网推荐稳定版：Nacos 2.1.1</strong></p>\n<ul>\n<li>博客：<a href=\"https://nacos.io/zh-cn/blog/index.html\">https://nacos.io/zh-cn/blog/index.html</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/alibaba/nacos/releases</span><br><span class=\"line\"></span><br><span class=\"line\">Nacos 依赖 Java 环境来运行。如果您是从代码开始构建并运行Nacos，还需要为此配置 Maven环境，请确保是在以下版本环境中安装使用:</span><br><span class=\"line\">64 bit OS，支持 Linux/Unix/Mac/Windows，推荐选用 Linux/Unix/Mac。</span><br><span class=\"line\">64 bit JDK 1.8+；下载 &amp; 配置。</span><br><span class=\"line\">Maven 3.2.x+；下载 &amp; 配置。</span><br><span class=\"line\"></span><br><span class=\"line\">最近更新：</span><br><span class=\"line\">Apr 11, 2023  Nacos 2.2.2发布，优化启动体验和鉴权提示</span><br><span class=\"line\">Mar 20, 2023  Nacos 多个新版本发布，rust-sdk完全适配完成</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-Kafka版本\">7.Kafka版本</h3>\n<p><strong>Kafka 3.4.0</strong></p>\n<ul>\n<li>官网：<a href=\"https://kafka.apache.org/downloads\">Apache Kafka</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.4.0 is the latest release. The current stable version is 3.4.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-Elasticsearch版本\">8.Elasticsearch版本</h3>\n<p><strong>最新版本：8.8.0</strong></p>\n<ul>\n<li>\n<p>官网版本：[Starting with the Elasticsearch Platform and its Solutions <a href=\"https://www.elastic.co/guide/en/welcome-to-elastic/8.8/index.html\">8.8] | Elastic</a></p>\n</li>\n<li>\n<p>生命周期：<a href=\"https://www.elastic.co/cn/support/matrix\">支持一览表 | Elastic</a></p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Elasticsearch\t支持截止日期\t\t\t\t\t\t\t\t\t\t\t维护至</span><br><span class=\"line\">8.x\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t2024 年 8 月 10 日，或 9.0 发布日期（待定）的 6 个月后</span><br><span class=\"line\">7.17.x\t\t\t2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准\t 2023 年 8 月 1 日，或 9.0.0 发布日期，具体以较晚者为准</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-Nginx版本\">9.Nginx版本</h3>\n<p><strong>Nginx-1.24.0 (Stable version)</strong></p>\n<ul>\n<li>官网：<a href=\"https://nginx.org/en/download.html\">nginx: download</a></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Changes with nginx 1.24.0                                        11 Apr 2023</span><br><span class=\"line\">1.24.x stable branch.</span><br><span class=\"line\">Changes with nginx 1.23.4                                        28 Mar 2023</span><br><span class=\"line\">Changes with nginx 1.23.3                                        13 Dec 2022</span><br><span class=\"line\">Changes with nginx 1.23.0                                        21 Jun 2022</span><br><span class=\"line\">Changes with nginx 1.21.6                                        25 Jan 2022</span><br></pre></td></tr></table></figure>\n"},{"_content":"## 常用命令\n\n### 关闭防火墙\n\n\n\n```shell\n查看状态\nsystemctl status firewalld.service\nsystemctl start firewalld.service\nsystemctl stop firewalld.service\nsystemctl enable firewalld.service\nsystemctl disable firewalld.service\n```\n\n### 确认系统版本\n\n```shell\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n  \n","source":"_posts/07中间件/0.9.0.常用命令.md","raw":"## 常用命令\n\n### 关闭防火墙\n\n\n\n```shell\n查看状态\nsystemctl status firewalld.service\nsystemctl start firewalld.service\nsystemctl stop firewalld.service\nsystemctl enable firewalld.service\nsystemctl disable firewalld.service\n```\n\n### 确认系统版本\n\n```shell\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n  \n","slug":"07中间件/0.9.0.常用命令","published":1,"date":"2023-09-01T13:06:37.560Z","updated":"2023-07-07T10:18:42.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0q000gzb8aehitfaxj","content":"<h2 id=\"常用命令\">常用命令</h2>\n<h3 id=\"关闭防火墙\">关闭防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看状态</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl enable firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"确认系统版本\">确认系统版本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"常用命令\">常用命令</h2>\n<h3 id=\"关闭防火墙\">关闭防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看状态</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl enable firewalld.service</span><br><span class=\"line\">systemctl disable firewalld.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"确认系统版本\">确认系统版本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n"},{"_content":"\n\n\n\n\n\n\n\n分发文件到所有主机\n\n```\nansible all -m copy -a \"src=/etc/hosts dest=/tmp\"\n```\n\n\n\n","source":"_posts/07中间件/2.1.Ansible使用说明.md","raw":"\n\n\n\n\n\n\n\n分发文件到所有主机\n\n```\nansible all -m copy -a \"src=/etc/hosts dest=/tmp\"\n```\n\n\n\n","slug":"07中间件/2.1.Ansible使用说明","published":1,"date":"2023-09-01T13:06:37.570Z","updated":"2023-09-01T03:24:10.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0q000hzb8a1kc2blng","content":"<p>分发文件到所有主机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible all -m copy -a &quot;src=/etc/hosts dest=/tmp&quot;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>分发文件到所有主机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible all -m copy -a &quot;src=/etc/hosts dest=/tmp&quot;</span><br></pre></td></tr></table></figure>\n"},{"_content":"# Ansible安装配置\n\n## Ansible安装\n\n### 1. yum源安装\n\n基于centos7.9和默认Python2.7安装。\n\n```shell\nyum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\n```\n\n\n\n### 2. 验证ansible安装结果\n\n查看版本\n\n```shell\n[root@localhost ansible]# ansible --version\nansible 2.9.27\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n查看/etc/ansible/路径下配置文件\n\n```shell\n[root@localhost ansible]# ll /etc/ansible/\ntotal 28\n-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg\n-rw-r--r--. 1 root root  1219 May 23 04:32 hosts\ndrwxr-xr-x. 2 root root     6 Jan 15  2022 roles\n```\n\n### 3. 编辑host文件\n\n在`/etc/ansible/hosts`文件里面，添加三台测试机器的用户信息。\n\n当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。\n\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***'\n```\n\n### 4. 编辑playbook sample\n\n在`/etc/ansible/`路径下添加`test.yml`文件如下，`hosts: kubernetes`表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。\n\n命令含义：将字符串`kongkong`输出到`/etc/kongkong.txt`文件中\n\n```shell\n- hosts: kubernetes\n  gather_facts: No\n  tasks:\n  - name: echo test data to file\n    shell: echo kongkong >> /etc/kongkong.txt\n```\n\n### 5. 执行测试\n\n查看执行结果`ok=1    changed=1`表示执行成功，update1个。\n\n```shell\n[root@localhost ansible]# ansible-playbook test.yml\n\nPLAY [kubernetes] ****************************************************************************************************\n\nTASK [find file] *****************************************************************************************************\nchanged: [192.168.132.131]\nchanged: [192.168.132.130]\nchanged: [192.168.132.129]\n\nPLAY RECAP ***********************************************************************************************************\n192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n\n### 6. 验证测试结果\n\n到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。\n\n```shell\n[root@localhost ~]# cat /etc/kongkong.txt\nkongkong\n```\n\n## Ansible配置\n### 1. 主机分组\n\n- hosts文件\n\n```shell\n[master]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=1\n\n[node1]\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=2\n\n[node2]\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=3\n\n[kubernetes:children]\nmaster\nnode1\nnode2\n```\n\n\n\n","source":"_posts/07中间件/2.Ansible安装配置.md","raw":"# Ansible安装配置\n\n## Ansible安装\n\n### 1. yum源安装\n\n基于centos7.9和默认Python2.7安装。\n\n```shell\nyum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\n```\n\n\n\n### 2. 验证ansible安装结果\n\n查看版本\n\n```shell\n[root@localhost ansible]# ansible --version\nansible 2.9.27\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n查看/etc/ansible/路径下配置文件\n\n```shell\n[root@localhost ansible]# ll /etc/ansible/\ntotal 28\n-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg\n-rw-r--r--. 1 root root  1219 May 23 04:32 hosts\ndrwxr-xr-x. 2 root root     6 Jan 15  2022 roles\n```\n\n### 3. 编辑host文件\n\n在`/etc/ansible/hosts`文件里面，添加三台测试机器的用户信息。\n\n当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。\n\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***'\n```\n\n### 4. 编辑playbook sample\n\n在`/etc/ansible/`路径下添加`test.yml`文件如下，`hosts: kubernetes`表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。\n\n命令含义：将字符串`kongkong`输出到`/etc/kongkong.txt`文件中\n\n```shell\n- hosts: kubernetes\n  gather_facts: No\n  tasks:\n  - name: echo test data to file\n    shell: echo kongkong >> /etc/kongkong.txt\n```\n\n### 5. 执行测试\n\n查看执行结果`ok=1    changed=1`表示执行成功，update1个。\n\n```shell\n[root@localhost ansible]# ansible-playbook test.yml\n\nPLAY [kubernetes] ****************************************************************************************************\n\nTASK [find file] *****************************************************************************************************\nchanged: [192.168.132.131]\nchanged: [192.168.132.130]\nchanged: [192.168.132.129]\n\nPLAY RECAP ***********************************************************************************************************\n192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n\n### 6. 验证测试结果\n\n到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。\n\n```shell\n[root@localhost ~]# cat /etc/kongkong.txt\nkongkong\n```\n\n## Ansible配置\n### 1. 主机分组\n\n- hosts文件\n\n```shell\n[master]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=1\n\n[node1]\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=2\n\n[node2]\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=3\n\n[kubernetes:children]\nmaster\nnode1\nnode2\n```\n\n\n\n","slug":"07中间件/2.Ansible安装配置","published":1,"date":"2023-09-01T13:06:37.570Z","updated":"2024-07-18T05:38:04.547Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0r000izb8a8e6taj2q","content":"<h1>Ansible安装配置</h1>\n<h2 id=\"Ansible安装\">Ansible安装</h2>\n<h3 id=\"1-yum源安装\">1. yum源安装</h3>\n<p>基于centos7.9和默认Python2.7安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-验证ansible安装结果\">2. 验证ansible安装结果</h3>\n<p>查看版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible --version</span><br><span class=\"line\">ansible 2.9.27</span><br><span class=\"line\">  config file = /etc/ansible/ansible.cfg</span><br><span class=\"line\">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class=\"line\">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class=\"line\">  executable location = /usr/bin/ansible</span><br><span class=\"line\">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure>\n<p>查看/etc/ansible/路径下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ll /etc/ansible/</span><br><span class=\"line\">total 28</span><br><span class=\"line\">-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg</span><br><span class=\"line\">-rw-r--r--. 1 root root  1219 May 23 04:32 hosts</span><br><span class=\"line\">drwxr-xr-x. 2 root root     6 Jan 15  2022 roles</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-编辑host文件\">3. 编辑host文件</h3>\n<p>在<code>/etc/ansible/hosts</code>文件里面，添加三台测试机器的用户信息。</p>\n<p>当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-编辑playbook-sample\">4. 编辑playbook sample</h3>\n<p>在<code>/etc/ansible/</code>路径下添加<code>test.yml</code>文件如下，<code>hosts: kubernetes</code>表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。</p>\n<p>命令含义：将字符串<code>kongkong</code>输出到<code>/etc/kongkong.txt</code>文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  gather_facts: No</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: echo test data to file</span><br><span class=\"line\">    shell: echo kongkong &gt;&gt; /etc/kongkong.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-执行测试\">5. 执行测试</h3>\n<p>查看执行结果<code>ok=1    changed=1</code>表示执行成功，update1个。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible-playbook test.yml</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY [kubernetes] ****************************************************************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">TASK [find file] *****************************************************************************************************</span><br><span class=\"line\">changed: [192.168.132.131]</span><br><span class=\"line\">changed: [192.168.132.130]</span><br><span class=\"line\">changed: [192.168.132.129]</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY RECAP ***********************************************************************************************************</span><br><span class=\"line\">192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证测试结果\">6. 验证测试结果</h3>\n<p>到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/kongkong.txt</span><br><span class=\"line\">kongkong</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ansible配置\">Ansible配置</h2>\n<h3 id=\"1-主机分组\">1. 主机分组</h3>\n<ul>\n<li>hosts文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[master]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=1</span><br><span class=\"line\"></span><br><span class=\"line\">[node1]</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=2</span><br><span class=\"line\"></span><br><span class=\"line\">[node2]</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=3</span><br><span class=\"line\"></span><br><span class=\"line\">[kubernetes:children]</span><br><span class=\"line\">master</span><br><span class=\"line\">node1</span><br><span class=\"line\">node2</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1>Ansible安装配置</h1>\n<h2 id=\"Ansible安装\">Ansible安装</h2>\n<h3 id=\"1-yum源安装\">1. yum源安装</h3>\n<p>基于centos7.9和默认Python2.7安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-验证ansible安装结果\">2. 验证ansible安装结果</h3>\n<p>查看版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible --version</span><br><span class=\"line\">ansible 2.9.27</span><br><span class=\"line\">  config file = /etc/ansible/ansible.cfg</span><br><span class=\"line\">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class=\"line\">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class=\"line\">  executable location = /usr/bin/ansible</span><br><span class=\"line\">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure>\n<p>查看/etc/ansible/路径下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ll /etc/ansible/</span><br><span class=\"line\">total 28</span><br><span class=\"line\">-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg</span><br><span class=\"line\">-rw-r--r--. 1 root root  1219 May 23 04:32 hosts</span><br><span class=\"line\">drwxr-xr-x. 2 root root     6 Jan 15  2022 roles</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-编辑host文件\">3. 编辑host文件</h3>\n<p>在<code>/etc/ansible/hosts</code>文件里面，添加三台测试机器的用户信息。</p>\n<p>当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-编辑playbook-sample\">4. 编辑playbook sample</h3>\n<p>在<code>/etc/ansible/</code>路径下添加<code>test.yml</code>文件如下，<code>hosts: kubernetes</code>表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。</p>\n<p>命令含义：将字符串<code>kongkong</code>输出到<code>/etc/kongkong.txt</code>文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  gather_facts: No</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: echo test data to file</span><br><span class=\"line\">    shell: echo kongkong &gt;&gt; /etc/kongkong.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-执行测试\">5. 执行测试</h3>\n<p>查看执行结果<code>ok=1    changed=1</code>表示执行成功，update1个。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible-playbook test.yml</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY [kubernetes] ****************************************************************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">TASK [find file] *****************************************************************************************************</span><br><span class=\"line\">changed: [192.168.132.131]</span><br><span class=\"line\">changed: [192.168.132.130]</span><br><span class=\"line\">changed: [192.168.132.129]</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY RECAP ***********************************************************************************************************</span><br><span class=\"line\">192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证测试结果\">6. 验证测试结果</h3>\n<p>到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/kongkong.txt</span><br><span class=\"line\">kongkong</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ansible配置\">Ansible配置</h2>\n<h3 id=\"1-主机分组\">1. 主机分组</h3>\n<ul>\n<li>hosts文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[master]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=1</span><br><span class=\"line\"></span><br><span class=\"line\">[node1]</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=2</span><br><span class=\"line\"></span><br><span class=\"line\">[node2]</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=3</span><br><span class=\"line\"></span><br><span class=\"line\">[kubernetes:children]</span><br><span class=\"line\">master</span><br><span class=\"line\">node1</span><br><span class=\"line\">node2</span><br></pre></td></tr></table></figure>\n"},{"_content":"# zookeeper集群环境部署\n\n前置说明：\n- 日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs\n- 数据文件：dataDir=/tmp/zookeeper\n- 安装路径：/opt/infra/apache-zookeeper-3.7.1-bin\n\n\n### 1. 下载zookeeper包\n注意生产环境请使用最新稳定版本。\n```shell\nThe Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. \n```\n- 下载地址：https://zookeeper.apache.org/releases.html\n\n\n### 2. zookeeper上传至配置服务器（ansible）\n安装文件上传至ansible主机如下路径\n- /etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n\n### 3. 编辑playbook脚本\n```shell\n[root@localhost etc]# tree ansible/\nansible/\n├── ansible.cfg\n├── hosts(主机列表)\n├── roles(空文件夹)\n└── script\n    └── zookeeper\n        ├── infra_pkgs\n        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)\n        │   ├── myid.j2(配置文件)\n        │   ├── zk.sh(配置文件)\n        │   └── zoo.cfg.j2(配置文件)\n        └── zookeeper_install_playbook.yml(playbook)\n4 directories, 7 files\n```\n- hosts文件\n在主机IP后添加`zk_myid=[number]`定义zookeeper id，后续`myid.j2`模版中会取这个值。\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=1\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=2\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=3\n```\n\n- myid.j2模板\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。\n```shell\n{{ zk_myid }}\n```\n\n- zoo.cfg.j2模板\n```shell\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir={{zk_data_dir}}\ndataLogDir={{zk_datalog_dir}}\nclientPort=2181\n\nautopurge.snapRetainCount=5\nautopurge.purgeInterval=1\nmaxClientCnxns=2000\n\n#master,node1,node2均为主机名\nserver.1=master:2888:3888\nserver.2=node1:2888:3888\nserver.3=node2:2888:3888\n```\n\n- playbook文件\n```shell\n- hosts: kubernetes\n  vars:\n      cfg_files:\n        - src: \"./infra_pkgs/zoo.cfg.j2\"\n          dest: \"/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\"\n        - src: \"./infra_pkgs/myid.j2\"\n          dest: \"/tmp/zookeeper/myid\"\n        - src: \"./infra_pkgs/zk.sh\"\n          dest: \"/etc/profile.d/zk.sh\"\n  gather_facts: no\n  user: root\n  tasks:\n    - name: 删除原文件\n      shell:\n        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/\n    - name: Create zookeeper installation directory\n      file:\n        path: \"{{item}}\"\n        state: directory\n      notify: Restart zookeeper service\n      with_items:\n          - /opt/infra\n          - /tmp/zookeeper\n    - name: Upload zookeeper package\n      unarchive:\n        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n        dest: /opt/infra\n      notify: Restart zookeeper service\n    - name: Init zookeeper config\n      template:\n        src: \"{{item.src}}\"\n        dest: \"{{item.dest}}\"\n      with_items: \"{{cfg_files}}\"\n      notify: Restart zookeeper service\n  handlers:\n    - name: Restart zookeeper service\n      shell:\n        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n```\n\n### 4. 验证zookeeper运行情况\n\n- 确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件\n- 确认/tmp/zookeeper/myid文件\n```shell\ncat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\ncat /tmp/zookeeper/myid\n```\n\n- 执行playbook\n```shell\ncd /etc/ansible/script/zookeeper/\n\nansible-playbook zookeeper_install_playbook.yml  -e '{ \"zk_servers\": [ {\"ip\": \"127.0.0.1\", \"myid\": 1 } ], \"zk_election_port\": 3888, \"zk_communication_port\": 2888, \"zk_data_dir\": \"/tmp/zookeeper\", \"zk_datalog_dir\": \"/opt/infra/apache-zookeeper-3.7.1-bin/logs\" }'\n```\n\n### 5. 单独维护\n\n```shell\n# 查看状态\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status\n# 停止\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop\n# 重启\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n# 启动\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start\n# 启动失败时，带输出启动查看\nzkServer.sh start-foreground\n```\n\n\n\n### 6.异常处理\n```shell\n2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally\njava.net.BindException: Address already in use\n        at sun.nio.ch.Net.bind0(Native Method)\n        at sun.nio.ch.Net.bind(Net.java:461)\n        at sun.nio.ch.Net.bind(Net.java:453)\n        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)\n2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.\n2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1\n[root@node71 ~]# netstat -nltp | grep 2181\ntcp6       0      0 :::2181                 :::*                    LISTEN      8305/java\n[root@node71 ~]# kill -9 8305\n\n```\n\n\n\n\n- 参考：[利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)](https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/)\n","source":"_posts/07中间件/3.1.Zookeeper集群环境部署.md","raw":"# zookeeper集群环境部署\n\n前置说明：\n- 日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs\n- 数据文件：dataDir=/tmp/zookeeper\n- 安装路径：/opt/infra/apache-zookeeper-3.7.1-bin\n\n\n### 1. 下载zookeeper包\n注意生产环境请使用最新稳定版本。\n```shell\nThe Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. \n```\n- 下载地址：https://zookeeper.apache.org/releases.html\n\n\n### 2. zookeeper上传至配置服务器（ansible）\n安装文件上传至ansible主机如下路径\n- /etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n\n### 3. 编辑playbook脚本\n```shell\n[root@localhost etc]# tree ansible/\nansible/\n├── ansible.cfg\n├── hosts(主机列表)\n├── roles(空文件夹)\n└── script\n    └── zookeeper\n        ├── infra_pkgs\n        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)\n        │   ├── myid.j2(配置文件)\n        │   ├── zk.sh(配置文件)\n        │   └── zoo.cfg.j2(配置文件)\n        └── zookeeper_install_playbook.yml(playbook)\n4 directories, 7 files\n```\n- hosts文件\n在主机IP后添加`zk_myid=[number]`定义zookeeper id，后续`myid.j2`模版中会取这个值。\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=1\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=2\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=3\n```\n\n- myid.j2模板\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。\n```shell\n{{ zk_myid }}\n```\n\n- zoo.cfg.j2模板\n```shell\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir={{zk_data_dir}}\ndataLogDir={{zk_datalog_dir}}\nclientPort=2181\n\nautopurge.snapRetainCount=5\nautopurge.purgeInterval=1\nmaxClientCnxns=2000\n\n#master,node1,node2均为主机名\nserver.1=master:2888:3888\nserver.2=node1:2888:3888\nserver.3=node2:2888:3888\n```\n\n- playbook文件\n```shell\n- hosts: kubernetes\n  vars:\n      cfg_files:\n        - src: \"./infra_pkgs/zoo.cfg.j2\"\n          dest: \"/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\"\n        - src: \"./infra_pkgs/myid.j2\"\n          dest: \"/tmp/zookeeper/myid\"\n        - src: \"./infra_pkgs/zk.sh\"\n          dest: \"/etc/profile.d/zk.sh\"\n  gather_facts: no\n  user: root\n  tasks:\n    - name: 删除原文件\n      shell:\n        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/\n    - name: Create zookeeper installation directory\n      file:\n        path: \"{{item}}\"\n        state: directory\n      notify: Restart zookeeper service\n      with_items:\n          - /opt/infra\n          - /tmp/zookeeper\n    - name: Upload zookeeper package\n      unarchive:\n        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n        dest: /opt/infra\n      notify: Restart zookeeper service\n    - name: Init zookeeper config\n      template:\n        src: \"{{item.src}}\"\n        dest: \"{{item.dest}}\"\n      with_items: \"{{cfg_files}}\"\n      notify: Restart zookeeper service\n  handlers:\n    - name: Restart zookeeper service\n      shell:\n        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n```\n\n### 4. 验证zookeeper运行情况\n\n- 确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件\n- 确认/tmp/zookeeper/myid文件\n```shell\ncat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\ncat /tmp/zookeeper/myid\n```\n\n- 执行playbook\n```shell\ncd /etc/ansible/script/zookeeper/\n\nansible-playbook zookeeper_install_playbook.yml  -e '{ \"zk_servers\": [ {\"ip\": \"127.0.0.1\", \"myid\": 1 } ], \"zk_election_port\": 3888, \"zk_communication_port\": 2888, \"zk_data_dir\": \"/tmp/zookeeper\", \"zk_datalog_dir\": \"/opt/infra/apache-zookeeper-3.7.1-bin/logs\" }'\n```\n\n### 5. 单独维护\n\n```shell\n# 查看状态\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status\n# 停止\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop\n# 重启\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n# 启动\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start\n# 启动失败时，带输出启动查看\nzkServer.sh start-foreground\n```\n\n\n\n### 6.异常处理\n```shell\n2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally\njava.net.BindException: Address already in use\n        at sun.nio.ch.Net.bind0(Native Method)\n        at sun.nio.ch.Net.bind(Net.java:461)\n        at sun.nio.ch.Net.bind(Net.java:453)\n        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)\n2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.\n2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1\n[root@node71 ~]# netstat -nltp | grep 2181\ntcp6       0      0 :::2181                 :::*                    LISTEN      8305/java\n[root@node71 ~]# kill -9 8305\n\n```\n\n\n\n\n- 参考：[利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)](https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/)\n","slug":"07中间件/3.1.Zookeeper集群环境部署","published":1,"date":"2023-09-01T13:06:37.570Z","updated":"2023-06-19T09:05:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0s000jzb8ah2l3a3hz","content":"<h1>zookeeper集群环境部署</h1>\n<p>前置说明：</p>\n<ul>\n<li>日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs</li>\n<li>数据文件：dataDir=/tmp/zookeeper</li>\n<li>安装路径：/opt/infra/apache-zookeeper-3.7.1-bin</li>\n</ul>\n<h3 id=\"1-下载zookeeper包\">1. 下载zookeeper包</h3>\n<p>注意生产环境请使用最新稳定版本。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. </span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载地址：<a href=\"https://zookeeper.apache.org/releases.html\">https://zookeeper.apache.org/releases.html</a></li>\n</ul>\n<h3 id=\"2-zookeeper上传至配置服务器（ansible）\">2. zookeeper上传至配置服务器（ansible）</h3>\n<p>安装文件上传至ansible主机如下路径</p>\n<ul>\n<li>/etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</li>\n</ul>\n<h3 id=\"3-编辑playbook脚本\">3. 编辑playbook脚本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost etc]# tree ansible/</span><br><span class=\"line\">ansible/</span><br><span class=\"line\">├── ansible.cfg</span><br><span class=\"line\">├── hosts(主机列表)</span><br><span class=\"line\">├── roles(空文件夹)</span><br><span class=\"line\">└── script</span><br><span class=\"line\">    └── zookeeper</span><br><span class=\"line\">        ├── infra_pkgs</span><br><span class=\"line\">        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)</span><br><span class=\"line\">        │   ├── myid.j2(配置文件)</span><br><span class=\"line\">        │   ├── zk.sh(配置文件)</span><br><span class=\"line\">        │   └── zoo.cfg.j2(配置文件)</span><br><span class=\"line\">        └── zookeeper_install_playbook.yml(playbook)</span><br><span class=\"line\">4 directories, 7 files</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hosts文件<br>\n在主机IP后添加<code>zk_myid=[number]</code>定义zookeeper id，后续<code>myid.j2</code>模版中会取这个值。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=1</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=2</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>myid.j2模板<br>\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; zk_myid &#125;&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>zoo.cfg.j2模板</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=&#123;&#123;zk_data_dir&#125;&#125;</span><br><span class=\"line\">dataLogDir=&#123;&#123;zk_datalog_dir&#125;&#125;</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\">autopurge.snapRetainCount=5</span><br><span class=\"line\">autopurge.purgeInterval=1</span><br><span class=\"line\">maxClientCnxns=2000</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">master,node1,node2均为主机名</span></span><br><span class=\"line\">server.1=master:2888:3888</span><br><span class=\"line\">server.2=node1:2888:3888</span><br><span class=\"line\">server.3=node2:2888:3888</span><br></pre></td></tr></table></figure>\n<ul>\n<li>playbook文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  vars:</span><br><span class=\"line\">      cfg_files:</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zoo.cfg.j2&quot;</span><br><span class=\"line\">          dest: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/myid.j2&quot;</span><br><span class=\"line\">          dest: &quot;/tmp/zookeeper/myid&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zk.sh&quot;</span><br><span class=\"line\">          dest: &quot;/etc/profile.d/zk.sh&quot;</span><br><span class=\"line\">  gather_facts: no</span><br><span class=\"line\">  user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: 删除原文件</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/</span><br><span class=\"line\">    - name: Create zookeeper installation directory</span><br><span class=\"line\">      file:</span><br><span class=\"line\">        path: &quot;&#123;&#123;item&#125;&#125;&quot;</span><br><span class=\"line\">        state: directory</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">      with_items:</span><br><span class=\"line\">          - /opt/infra</span><br><span class=\"line\">          - /tmp/zookeeper</span><br><span class=\"line\">    - name: Upload zookeeper package</span><br><span class=\"line\">      unarchive:</span><br><span class=\"line\">        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class=\"line\">        dest: /opt/infra</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">    - name: Init zookeeper config</span><br><span class=\"line\">      template:</span><br><span class=\"line\">        src: &quot;&#123;&#123;item.src&#125;&#125;&quot;</span><br><span class=\"line\">        dest: &quot;&#123;&#123;item.dest&#125;&#125;&quot;</span><br><span class=\"line\">      with_items: &quot;&#123;&#123;cfg_files&#125;&#125;&quot;</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">  handlers:</span><br><span class=\"line\">    - name: Restart zookeeper service</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-验证zookeeper运行情况\">4. 验证zookeeper运行情况</h3>\n<ul>\n<li>确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件</li>\n<li>确认/tmp/zookeeper/myid文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg</span><br><span class=\"line\">cat /tmp/zookeeper/myid</span><br></pre></td></tr></table></figure>\n<ul>\n<li>执行playbook</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/ansible/script/zookeeper/</span><br><span class=\"line\"></span><br><span class=\"line\">ansible-playbook zookeeper_install_playbook.yml  -e &#x27;&#123; &quot;zk_servers&quot;: [ &#123;&quot;ip&quot;: &quot;127.0.0.1&quot;, &quot;myid&quot;: 1 &#125; ], &quot;zk_election_port&quot;: 3888, &quot;zk_communication_port&quot;: 2888, &quot;zk_data_dir&quot;: &quot;/tmp/zookeeper&quot;, &quot;zk_datalog_dir&quot;: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/logs&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-单独维护\">5. 单独维护</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看状态</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动失败时，带输出启动查看</span></span><br><span class=\"line\">zkServer.sh start-foreground</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-异常处理\">6.异常处理</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally</span><br><span class=\"line\">java.net.BindException: Address already in use</span><br><span class=\"line\">        at sun.nio.ch.Net.bind0(Native Method)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:461)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:453)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)</span><br><span class=\"line\">        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)</span><br><span class=\"line\">2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.</span><br><span class=\"line\">2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1</span><br><span class=\"line\">[root@node71 ~]# netstat -nltp | grep 2181</span><br><span class=\"line\">tcp6       0      0 :::2181                 :::*                    LISTEN      8305/java</span><br><span class=\"line\">[root@node71 ~]# kill -9 8305</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考：<a href=\"https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/\">利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)</a></li>\n</ul>\n","excerpt":"","more":"<h1>zookeeper集群环境部署</h1>\n<p>前置说明：</p>\n<ul>\n<li>日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs</li>\n<li>数据文件：dataDir=/tmp/zookeeper</li>\n<li>安装路径：/opt/infra/apache-zookeeper-3.7.1-bin</li>\n</ul>\n<h3 id=\"1-下载zookeeper包\">1. 下载zookeeper包</h3>\n<p>注意生产环境请使用最新稳定版本。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. </span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载地址：<a href=\"https://zookeeper.apache.org/releases.html\">https://zookeeper.apache.org/releases.html</a></li>\n</ul>\n<h3 id=\"2-zookeeper上传至配置服务器（ansible）\">2. zookeeper上传至配置服务器（ansible）</h3>\n<p>安装文件上传至ansible主机如下路径</p>\n<ul>\n<li>/etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</li>\n</ul>\n<h3 id=\"3-编辑playbook脚本\">3. 编辑playbook脚本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost etc]# tree ansible/</span><br><span class=\"line\">ansible/</span><br><span class=\"line\">├── ansible.cfg</span><br><span class=\"line\">├── hosts(主机列表)</span><br><span class=\"line\">├── roles(空文件夹)</span><br><span class=\"line\">└── script</span><br><span class=\"line\">    └── zookeeper</span><br><span class=\"line\">        ├── infra_pkgs</span><br><span class=\"line\">        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)</span><br><span class=\"line\">        │   ├── myid.j2(配置文件)</span><br><span class=\"line\">        │   ├── zk.sh(配置文件)</span><br><span class=\"line\">        │   └── zoo.cfg.j2(配置文件)</span><br><span class=\"line\">        └── zookeeper_install_playbook.yml(playbook)</span><br><span class=\"line\">4 directories, 7 files</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hosts文件<br>\n在主机IP后添加<code>zk_myid=[number]</code>定义zookeeper id，后续<code>myid.j2</code>模版中会取这个值。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=1</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=2</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>myid.j2模板<br>\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; zk_myid &#125;&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>zoo.cfg.j2模板</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=&#123;&#123;zk_data_dir&#125;&#125;</span><br><span class=\"line\">dataLogDir=&#123;&#123;zk_datalog_dir&#125;&#125;</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\">autopurge.snapRetainCount=5</span><br><span class=\"line\">autopurge.purgeInterval=1</span><br><span class=\"line\">maxClientCnxns=2000</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">master,node1,node2均为主机名</span></span><br><span class=\"line\">server.1=master:2888:3888</span><br><span class=\"line\">server.2=node1:2888:3888</span><br><span class=\"line\">server.3=node2:2888:3888</span><br></pre></td></tr></table></figure>\n<ul>\n<li>playbook文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  vars:</span><br><span class=\"line\">      cfg_files:</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zoo.cfg.j2&quot;</span><br><span class=\"line\">          dest: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/myid.j2&quot;</span><br><span class=\"line\">          dest: &quot;/tmp/zookeeper/myid&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zk.sh&quot;</span><br><span class=\"line\">          dest: &quot;/etc/profile.d/zk.sh&quot;</span><br><span class=\"line\">  gather_facts: no</span><br><span class=\"line\">  user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: 删除原文件</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/</span><br><span class=\"line\">    - name: Create zookeeper installation directory</span><br><span class=\"line\">      file:</span><br><span class=\"line\">        path: &quot;&#123;&#123;item&#125;&#125;&quot;</span><br><span class=\"line\">        state: directory</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">      with_items:</span><br><span class=\"line\">          - /opt/infra</span><br><span class=\"line\">          - /tmp/zookeeper</span><br><span class=\"line\">    - name: Upload zookeeper package</span><br><span class=\"line\">      unarchive:</span><br><span class=\"line\">        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class=\"line\">        dest: /opt/infra</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">    - name: Init zookeeper config</span><br><span class=\"line\">      template:</span><br><span class=\"line\">        src: &quot;&#123;&#123;item.src&#125;&#125;&quot;</span><br><span class=\"line\">        dest: &quot;&#123;&#123;item.dest&#125;&#125;&quot;</span><br><span class=\"line\">      with_items: &quot;&#123;&#123;cfg_files&#125;&#125;&quot;</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">  handlers:</span><br><span class=\"line\">    - name: Restart zookeeper service</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-验证zookeeper运行情况\">4. 验证zookeeper运行情况</h3>\n<ul>\n<li>确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件</li>\n<li>确认/tmp/zookeeper/myid文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg</span><br><span class=\"line\">cat /tmp/zookeeper/myid</span><br></pre></td></tr></table></figure>\n<ul>\n<li>执行playbook</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/ansible/script/zookeeper/</span><br><span class=\"line\"></span><br><span class=\"line\">ansible-playbook zookeeper_install_playbook.yml  -e &#x27;&#123; &quot;zk_servers&quot;: [ &#123;&quot;ip&quot;: &quot;127.0.0.1&quot;, &quot;myid&quot;: 1 &#125; ], &quot;zk_election_port&quot;: 3888, &quot;zk_communication_port&quot;: 2888, &quot;zk_data_dir&quot;: &quot;/tmp/zookeeper&quot;, &quot;zk_datalog_dir&quot;: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/logs&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-单独维护\">5. 单独维护</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看状态</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动失败时，带输出启动查看</span></span><br><span class=\"line\">zkServer.sh start-foreground</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-异常处理\">6.异常处理</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally</span><br><span class=\"line\">java.net.BindException: Address already in use</span><br><span class=\"line\">        at sun.nio.ch.Net.bind0(Native Method)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:461)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:453)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)</span><br><span class=\"line\">        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)</span><br><span class=\"line\">2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.</span><br><span class=\"line\">2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1</span><br><span class=\"line\">[root@node71 ~]# netstat -nltp | grep 2181</span><br><span class=\"line\">tcp6       0      0 :::2181                 :::*                    LISTEN      8305/java</span><br><span class=\"line\">[root@node71 ~]# kill -9 8305</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考：<a href=\"https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/\">利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)</a></li>\n</ul>\n"},{"_content":"## Redis集群环境部署\n\n### 集群连接\n\n```shell\nRedis集群-测试库\nRedis连接：\n192.168.10.71:6379\n192.168.10.72:6379\n192.168.10.73:6379\n192.168.10.91:6379\n192.168.10.92:6379\n192.168.10.93:6379\n\nRedis密码：\n86a1b907d54bf7010394bf316e183e67\n```\n\n\n\n### 安装redis\n\n```\nyum install epel-release -y\nyum install redis -y\n\nsystemctl restart redis\nsystemctl enable redis\nsystemctl status redis\n\n\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n```\n\n\n\n### 修改配置文件\n\n路径：`/etc/redis.conf`，每个节点都需修改，bind ip以实际为准。\n\n```\nbind 192.168.10.71\ncluster-enabled yes\nmasterauth '86a1b907d54bf7010394bf316e183e67'\nrequirepass '86a1b907d54bf7010394bf316e183e67'\n```\n\nsystemctl restart redis\n\n\n\n### 配置集群\n\n```\nredis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\n\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\nab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected\n\n[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n>>> Performing hash slots allocation on 6 nodes...\nMaster[0] -> Slots 0 - 5460\nMaster[1] -> Slots 5461 - 10922\nMaster[2] -> Slots 10923 - 16383\nAdding replica 192.168.10.92:6379 to 192.168.10.71:6379\nAdding replica 192.168.10.93:6379 to 192.168.10.72:6379\nAdding replica 192.168.10.91:6379 to 192.168.10.73:6379\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\nCan I set the above configuration? (type 'yes' to accept): yes\n>>> Nodes configuration updated\n>>> Assign a different config epoch to each node\n>>> Sending CLUSTER MEET messages to join the cluster\nWaiting for the cluster to join\n.....\n>>> Performing Cluster Check (using node 192.168.10.71:6379)\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\n   1 additional replica(s)\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   slots: (0 slots) slave\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\n   1 additional replica(s)\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   slots: (0 slots) slave\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\n   1 additional replica(s)\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   slots: (0 slots) slave\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n```\n\n\n\n### 查看节点\n\n```\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.71:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:6\ncluster_size:3\ncluster_current_epoch:6\ncluster_my_epoch:1\ncluster_stats_messages_sent:1753\ncluster_stats_messages_received:1753\n\n192.168.10.71:6379> cluster nodes\n781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected\nd9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922\n00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected\ncf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383\nab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460\nc53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected\n192.168.10.71:6379> exit\n\n```\n\n","source":"_posts/07中间件/4.1.Redis集群环境部署.md","raw":"## Redis集群环境部署\n\n### 集群连接\n\n```shell\nRedis集群-测试库\nRedis连接：\n192.168.10.71:6379\n192.168.10.72:6379\n192.168.10.73:6379\n192.168.10.91:6379\n192.168.10.92:6379\n192.168.10.93:6379\n\nRedis密码：\n86a1b907d54bf7010394bf316e183e67\n```\n\n\n\n### 安装redis\n\n```\nyum install epel-release -y\nyum install redis -y\n\nsystemctl restart redis\nsystemctl enable redis\nsystemctl status redis\n\n\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n```\n\n\n\n### 修改配置文件\n\n路径：`/etc/redis.conf`，每个节点都需修改，bind ip以实际为准。\n\n```\nbind 192.168.10.71\ncluster-enabled yes\nmasterauth '86a1b907d54bf7010394bf316e183e67'\nrequirepass '86a1b907d54bf7010394bf316e183e67'\n```\n\nsystemctl restart redis\n\n\n\n### 配置集群\n\n```\nredis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\n\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\nab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected\n\n[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n>>> Performing hash slots allocation on 6 nodes...\nMaster[0] -> Slots 0 - 5460\nMaster[1] -> Slots 5461 - 10922\nMaster[2] -> Slots 10923 - 16383\nAdding replica 192.168.10.92:6379 to 192.168.10.71:6379\nAdding replica 192.168.10.93:6379 to 192.168.10.72:6379\nAdding replica 192.168.10.91:6379 to 192.168.10.73:6379\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\nCan I set the above configuration? (type 'yes' to accept): yes\n>>> Nodes configuration updated\n>>> Assign a different config epoch to each node\n>>> Sending CLUSTER MEET messages to join the cluster\nWaiting for the cluster to join\n.....\n>>> Performing Cluster Check (using node 192.168.10.71:6379)\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\n   1 additional replica(s)\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   slots: (0 slots) slave\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\n   1 additional replica(s)\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   slots: (0 slots) slave\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\n   1 additional replica(s)\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   slots: (0 slots) slave\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n```\n\n\n\n### 查看节点\n\n```\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.71:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:6\ncluster_size:3\ncluster_current_epoch:6\ncluster_my_epoch:1\ncluster_stats_messages_sent:1753\ncluster_stats_messages_received:1753\n\n192.168.10.71:6379> cluster nodes\n781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected\nd9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922\n00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected\ncf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383\nab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460\nc53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected\n192.168.10.71:6379> exit\n\n```\n\n","slug":"07中间件/4.1.Redis集群环境部署","published":1,"date":"2023-09-01T13:06:37.580Z","updated":"2023-06-20T03:37:52.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0v000kzb8a9me11new","content":"<h2 id=\"Redis集群环境部署\">Redis集群环境部署</h2>\n<h3 id=\"集群连接\">集群连接</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis集群-测试库</span><br><span class=\"line\">Redis连接：</span><br><span class=\"line\">192.168.10.71:6379</span><br><span class=\"line\">192.168.10.72:6379</span><br><span class=\"line\">192.168.10.73:6379</span><br><span class=\"line\">192.168.10.91:6379</span><br><span class=\"line\">192.168.10.92:6379</span><br><span class=\"line\">192.168.10.93:6379</span><br><span class=\"line\"></span><br><span class=\"line\">Redis密码：</span><br><span class=\"line\">86a1b907d54bf7010394bf316e183e67</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装redis\">安装redis</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release -y</span><br><span class=\"line\">yum install redis -y</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart redis</span><br><span class=\"line\">systemctl enable redis</span><br><span class=\"line\">systemctl status redis</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\">修改配置文件</h3>\n<p>路径：<code>/etc/redis.conf</code>，每个节点都需修改，bind ip以实际为准。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 192.168.10.71</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">masterauth &#x27;86a1b907d54bf7010394bf316e183e67&#x27;</span><br><span class=\"line\">requirepass &#x27;86a1b907d54bf7010394bf316e183e67&#x27;</span><br></pre></td></tr></table></figure>\n<p>systemctl restart redis</p>\n<h3 id=\"配置集群\">配置集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class=\"line\">Master[0] -&gt; Slots 0 - 5460</span><br><span class=\"line\">Master[1] -&gt; Slots 5461 - 10922</span><br><span class=\"line\">Master[2] -&gt; Slots 10923 - 16383</span><br><span class=\"line\">Adding replica 192.168.10.92:6379 to 192.168.10.71:6379</span><br><span class=\"line\">Adding replica 192.168.10.93:6379 to 192.168.10.72:6379</span><br><span class=\"line\">Adding replica 192.168.10.91:6379 to 192.168.10.73:6379</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class=\"line\">&gt;&gt;&gt; Nodes configuration updated</span><br><span class=\"line\">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class=\"line\">Waiting for the cluster to join</span><br><span class=\"line\">.....</span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.10.71:6379)</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check for open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看节点\">查看节点</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.71:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\">cluster_slots_ok:16384</span><br><span class=\"line\">cluster_slots_pfail:0</span><br><span class=\"line\">cluster_slots_fail:0</span><br><span class=\"line\">cluster_known_nodes:6</span><br><span class=\"line\">cluster_size:3</span><br><span class=\"line\">cluster_current_epoch:6</span><br><span class=\"line\">cluster_my_epoch:1</span><br><span class=\"line\">cluster_stats_messages_sent:1753</span><br><span class=\"line\">cluster_stats_messages_received:1753</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.71:6379&gt; cluster nodes</span><br><span class=\"line\">781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected</span><br><span class=\"line\">d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922</span><br><span class=\"line\">00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected</span><br><span class=\"line\">cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460</span><br><span class=\"line\">c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected</span><br><span class=\"line\">192.168.10.71:6379&gt; exit</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Redis集群环境部署\">Redis集群环境部署</h2>\n<h3 id=\"集群连接\">集群连接</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis集群-测试库</span><br><span class=\"line\">Redis连接：</span><br><span class=\"line\">192.168.10.71:6379</span><br><span class=\"line\">192.168.10.72:6379</span><br><span class=\"line\">192.168.10.73:6379</span><br><span class=\"line\">192.168.10.91:6379</span><br><span class=\"line\">192.168.10.92:6379</span><br><span class=\"line\">192.168.10.93:6379</span><br><span class=\"line\"></span><br><span class=\"line\">Redis密码：</span><br><span class=\"line\">86a1b907d54bf7010394bf316e183e67</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装redis\">安装redis</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release -y</span><br><span class=\"line\">yum install redis -y</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart redis</span><br><span class=\"line\">systemctl enable redis</span><br><span class=\"line\">systemctl status redis</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\">修改配置文件</h3>\n<p>路径：<code>/etc/redis.conf</code>，每个节点都需修改，bind ip以实际为准。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 192.168.10.71</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">masterauth &#x27;86a1b907d54bf7010394bf316e183e67&#x27;</span><br><span class=\"line\">requirepass &#x27;86a1b907d54bf7010394bf316e183e67&#x27;</span><br></pre></td></tr></table></figure>\n<p>systemctl restart redis</p>\n<h3 id=\"配置集群\">配置集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class=\"line\">Master[0] -&gt; Slots 0 - 5460</span><br><span class=\"line\">Master[1] -&gt; Slots 5461 - 10922</span><br><span class=\"line\">Master[2] -&gt; Slots 10923 - 16383</span><br><span class=\"line\">Adding replica 192.168.10.92:6379 to 192.168.10.71:6379</span><br><span class=\"line\">Adding replica 192.168.10.93:6379 to 192.168.10.72:6379</span><br><span class=\"line\">Adding replica 192.168.10.91:6379 to 192.168.10.73:6379</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class=\"line\">&gt;&gt;&gt; Nodes configuration updated</span><br><span class=\"line\">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class=\"line\">Waiting for the cluster to join</span><br><span class=\"line\">.....</span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.10.71:6379)</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check for open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看节点\">查看节点</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.71:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\">cluster_slots_ok:16384</span><br><span class=\"line\">cluster_slots_pfail:0</span><br><span class=\"line\">cluster_slots_fail:0</span><br><span class=\"line\">cluster_known_nodes:6</span><br><span class=\"line\">cluster_size:3</span><br><span class=\"line\">cluster_current_epoch:6</span><br><span class=\"line\">cluster_my_epoch:1</span><br><span class=\"line\">cluster_stats_messages_sent:1753</span><br><span class=\"line\">cluster_stats_messages_received:1753</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.71:6379&gt; cluster nodes</span><br><span class=\"line\">781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected</span><br><span class=\"line\">d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922</span><br><span class=\"line\">00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected</span><br><span class=\"line\">cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460</span><br><span class=\"line\">c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected</span><br><span class=\"line\">192.168.10.71:6379&gt; exit</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"## zookeeper集群环境部署\n\n前置说明：\n- 日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs\n- 数据文件：dataDir=/tmp/zookeeper\n- 安装路径：/opt/infra/apache-zookeeper-3.7.1-bin\n\n\n### 1. 下载zookeeper包\n注意生产环境请使用最新稳定版本。\n```shell\nThe Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. \n```\n- 下载地址：https://zookeeper.apache.org/releases.html\n\n\n### 2. zookeeper上传至配置服务器（ansible）\n安装文件上传至ansible主机如下路径\n- /etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n\n### 3. 编辑playbook脚本\n```shell\n[root@localhost etc]# tree ansible/\nansible/\n├── ansible.cfg\n├── hosts(主机列表)\n├── roles(空文件夹)\n└── script\n    └── zookeeper\n        ├── infra_pkgs\n        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)\n        │   ├── myid.j2(配置文件)\n        │   ├── zk.sh(配置文件)\n        │   └── zoo.cfg.j2(配置文件)\n        └── zookeeper_install_playbook.yml(playbook)\n4 directories, 7 files\n```\n- hosts文件\n在主机IP后添加`zk_myid=[number]`定义zookeeper id，后续`myid.j2`模版中会取这个值。\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=1\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=2\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=3\n```\n\n- myid.j2模板\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。\n```shell\n{{ zk_myid }}\n```\n\n- zoo.cfg.j2模板\n```shell\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir={{zk_data_dir}}\ndataLogDir={{zk_datalog_dir}}\nclientPort=2181\n\nautopurge.snapRetainCount=5\nautopurge.purgeInterval=1\nmaxClientCnxns=2000\n\n#master,node1,node2均为主机名\nserver.1=master:2888:3888\nserver.2=node1:2888:3888\nserver.3=node2:2888:3888\n```\n\n- playbook文件\n```shell\n- hosts: kubernetes\n  vars:\n      cfg_files:\n        - src: \"./infra_pkgs/zoo.cfg.j2\"\n          dest: \"/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\"\n        - src: \"./infra_pkgs/myid.j2\"\n          dest: \"/tmp/zookeeper/myid\"\n        - src: \"./infra_pkgs/zk.sh\"\n          dest: \"/etc/profile.d/zk.sh\"\n  gather_facts: no\n  user: root\n  tasks:\n    - name: 删除原文件\n      shell:\n        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/\n    - name: Create zookeeper installation directory\n      file:\n        path: \"{{item}}\"\n        state: directory\n      notify: Restart zookeeper service\n      with_items:\n          - /opt/infra\n          - /tmp/zookeeper\n    - name: Upload zookeeper package\n      unarchive:\n        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n        dest: /opt/infra\n      notify: Restart zookeeper service\n    - name: Init zookeeper config\n      template:\n        src: \"{{item.src}}\"\n        dest: \"{{item.dest}}\"\n      with_items: \"{{cfg_files}}\"\n      notify: Restart zookeeper service\n  handlers:\n    - name: Restart zookeeper service\n      shell:\n        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n```\n\n### 4. 验证zookeeper运行情况\n\n- 确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件\n- 确认/tmp/zookeeper/myid文件\n```shell\ncat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\ncat /tmp/zookeeper/myid\n```\n\n- 执行playbook\n```shell\ncd /etc/ansible/script/zookeeper/\n\nansible-playbook zookeeper_install_playbook.yml  -e '{ \"zk_servers\": [ {\"ip\": \"127.0.0.1\", \"myid\": 1 } ], \"zk_election_port\": 3888, \"zk_communication_port\": 2888, \"zk_data_dir\": \"/tmp/zookeeper\", \"zk_datalog_dir\": \"/opt/infra/apache-zookeeper-3.7.1-bin/logs\" }'\n```\n\n### 5. 单独维护\n\n```shell\n# 查看状态\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status\n# 停止\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop\n# 重启\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n# 启动\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start\n# 启动失败时，带输出启动查看\nzkServer.sh start-foreground\n```\n\n\n\n### 6.异常处理\n```shell\n2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally\njava.net.BindException: Address already in use\n        at sun.nio.ch.Net.bind0(Native Method)\n        at sun.nio.ch.Net.bind(Net.java:461)\n        at sun.nio.ch.Net.bind(Net.java:453)\n        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)\n2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.\n2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1\n[root@node71 ~]# netstat -nltp | grep 2181\ntcp6       0      0 :::2181                 :::*                    LISTEN      8305/java\n[root@node71 ~]# kill -9 8305\n\n```\n\n\n\n\n- 参考：[利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)](https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/)\n","source":"_posts/07中间件/7.1.Zookeeper集群环境部署.md","raw":"## zookeeper集群环境部署\n\n前置说明：\n- 日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs\n- 数据文件：dataDir=/tmp/zookeeper\n- 安装路径：/opt/infra/apache-zookeeper-3.7.1-bin\n\n\n### 1. 下载zookeeper包\n注意生产环境请使用最新稳定版本。\n```shell\nThe Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. \n```\n- 下载地址：https://zookeeper.apache.org/releases.html\n\n\n### 2. zookeeper上传至配置服务器（ansible）\n安装文件上传至ansible主机如下路径\n- /etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n\n### 3. 编辑playbook脚本\n```shell\n[root@localhost etc]# tree ansible/\nansible/\n├── ansible.cfg\n├── hosts(主机列表)\n├── roles(空文件夹)\n└── script\n    └── zookeeper\n        ├── infra_pkgs\n        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)\n        │   ├── myid.j2(配置文件)\n        │   ├── zk.sh(配置文件)\n        │   └── zoo.cfg.j2(配置文件)\n        └── zookeeper_install_playbook.yml(playbook)\n4 directories, 7 files\n```\n- hosts文件\n在主机IP后添加`zk_myid=[number]`定义zookeeper id，后续`myid.j2`模版中会取这个值。\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=1\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=2\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***' zk_myid=3\n```\n\n- myid.j2模板\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。\n```shell\n{{ zk_myid }}\n```\n\n- zoo.cfg.j2模板\n```shell\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir={{zk_data_dir}}\ndataLogDir={{zk_datalog_dir}}\nclientPort=2181\n\nautopurge.snapRetainCount=5\nautopurge.purgeInterval=1\nmaxClientCnxns=2000\n\n#master,node1,node2均为主机名\nserver.1=master:2888:3888\nserver.2=node1:2888:3888\nserver.3=node2:2888:3888\n```\n\n- playbook文件\n```shell\n- hosts: kubernetes\n  vars:\n      cfg_files:\n        - src: \"./infra_pkgs/zoo.cfg.j2\"\n          dest: \"/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\"\n        - src: \"./infra_pkgs/myid.j2\"\n          dest: \"/tmp/zookeeper/myid\"\n        - src: \"./infra_pkgs/zk.sh\"\n          dest: \"/etc/profile.d/zk.sh\"\n  gather_facts: no\n  user: root\n  tasks:\n    - name: 删除原文件\n      shell:\n        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/\n    - name: Create zookeeper installation directory\n      file:\n        path: \"{{item}}\"\n        state: directory\n      notify: Restart zookeeper service\n      with_items:\n          - /opt/infra\n          - /tmp/zookeeper\n    - name: Upload zookeeper package\n      unarchive:\n        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz\n        dest: /opt/infra\n      notify: Restart zookeeper service\n    - name: Init zookeeper config\n      template:\n        src: \"{{item.src}}\"\n        dest: \"{{item.dest}}\"\n      with_items: \"{{cfg_files}}\"\n      notify: Restart zookeeper service\n  handlers:\n    - name: Restart zookeeper service\n      shell:\n        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n```\n\n### 4. 验证zookeeper运行情况\n\n- 确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件\n- 确认/tmp/zookeeper/myid文件\n```shell\ncat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg\ncat /tmp/zookeeper/myid\n```\n\n- 执行playbook\n```shell\ncd /etc/ansible/script/zookeeper/\n\nansible-playbook zookeeper_install_playbook.yml  -e '{ \"zk_servers\": [ {\"ip\": \"127.0.0.1\", \"myid\": 1 } ], \"zk_election_port\": 3888, \"zk_communication_port\": 2888, \"zk_data_dir\": \"/tmp/zookeeper\", \"zk_datalog_dir\": \"/opt/infra/apache-zookeeper-3.7.1-bin/logs\" }'\n```\n\n### 5. 单独维护\n\n```shell\n# 查看状态\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status\n# 停止\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop\n# 重启\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart\n# 启动\n/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start\n# 启动失败时，带输出启动查看\nzkServer.sh start-foreground\n```\n\n\n\n### 6.异常处理\n```shell\n2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally\njava.net.BindException: Address already in use\n        at sun.nio.ch.Net.bind0(Native Method)\n        at sun.nio.ch.Net.bind(Net.java:461)\n        at sun.nio.ch.Net.bind(Net.java:453)\n        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)\n        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)\n        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)\n        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)\n2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.\n2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1\n[root@node71 ~]# netstat -nltp | grep 2181\ntcp6       0      0 :::2181                 :::*                    LISTEN      8305/java\n[root@node71 ~]# kill -9 8305\n\n```\n\n\n\n\n- 参考：[利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)](https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/)\n","slug":"07中间件/7.1.Zookeeper集群环境部署","published":1,"date":"2024-07-18T05:59:28.322Z","updated":"2024-07-18T06:02:31.876Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0w000lzb8a4gubgol5","content":"<h2 id=\"zookeeper集群环境部署\">zookeeper集群环境部署</h2>\n<p>前置说明：</p>\n<ul>\n<li>日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs</li>\n<li>数据文件：dataDir=/tmp/zookeeper</li>\n<li>安装路径：/opt/infra/apache-zookeeper-3.7.1-bin</li>\n</ul>\n<h3 id=\"1-下载zookeeper包\">1. 下载zookeeper包</h3>\n<p>注意生产环境请使用最新稳定版本。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. </span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载地址：<a href=\"https://zookeeper.apache.org/releases.html\">https://zookeeper.apache.org/releases.html</a></li>\n</ul>\n<h3 id=\"2-zookeeper上传至配置服务器（ansible）\">2. zookeeper上传至配置服务器（ansible）</h3>\n<p>安装文件上传至ansible主机如下路径</p>\n<ul>\n<li>/etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</li>\n</ul>\n<h3 id=\"3-编辑playbook脚本\">3. 编辑playbook脚本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost etc]# tree ansible/</span><br><span class=\"line\">ansible/</span><br><span class=\"line\">├── ansible.cfg</span><br><span class=\"line\">├── hosts(主机列表)</span><br><span class=\"line\">├── roles(空文件夹)</span><br><span class=\"line\">└── script</span><br><span class=\"line\">    └── zookeeper</span><br><span class=\"line\">        ├── infra_pkgs</span><br><span class=\"line\">        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)</span><br><span class=\"line\">        │   ├── myid.j2(配置文件)</span><br><span class=\"line\">        │   ├── zk.sh(配置文件)</span><br><span class=\"line\">        │   └── zoo.cfg.j2(配置文件)</span><br><span class=\"line\">        └── zookeeper_install_playbook.yml(playbook)</span><br><span class=\"line\">4 directories, 7 files</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hosts文件<br>\n在主机IP后添加<code>zk_myid=[number]</code>定义zookeeper id，后续<code>myid.j2</code>模版中会取这个值。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=1</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=2</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>myid.j2模板<br>\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; zk_myid &#125;&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>zoo.cfg.j2模板</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=&#123;&#123;zk_data_dir&#125;&#125;</span><br><span class=\"line\">dataLogDir=&#123;&#123;zk_datalog_dir&#125;&#125;</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\">autopurge.snapRetainCount=5</span><br><span class=\"line\">autopurge.purgeInterval=1</span><br><span class=\"line\">maxClientCnxns=2000</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">master,node1,node2均为主机名</span></span><br><span class=\"line\">server.1=master:2888:3888</span><br><span class=\"line\">server.2=node1:2888:3888</span><br><span class=\"line\">server.3=node2:2888:3888</span><br></pre></td></tr></table></figure>\n<ul>\n<li>playbook文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  vars:</span><br><span class=\"line\">      cfg_files:</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zoo.cfg.j2&quot;</span><br><span class=\"line\">          dest: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/myid.j2&quot;</span><br><span class=\"line\">          dest: &quot;/tmp/zookeeper/myid&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zk.sh&quot;</span><br><span class=\"line\">          dest: &quot;/etc/profile.d/zk.sh&quot;</span><br><span class=\"line\">  gather_facts: no</span><br><span class=\"line\">  user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: 删除原文件</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/</span><br><span class=\"line\">    - name: Create zookeeper installation directory</span><br><span class=\"line\">      file:</span><br><span class=\"line\">        path: &quot;&#123;&#123;item&#125;&#125;&quot;</span><br><span class=\"line\">        state: directory</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">      with_items:</span><br><span class=\"line\">          - /opt/infra</span><br><span class=\"line\">          - /tmp/zookeeper</span><br><span class=\"line\">    - name: Upload zookeeper package</span><br><span class=\"line\">      unarchive:</span><br><span class=\"line\">        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class=\"line\">        dest: /opt/infra</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">    - name: Init zookeeper config</span><br><span class=\"line\">      template:</span><br><span class=\"line\">        src: &quot;&#123;&#123;item.src&#125;&#125;&quot;</span><br><span class=\"line\">        dest: &quot;&#123;&#123;item.dest&#125;&#125;&quot;</span><br><span class=\"line\">      with_items: &quot;&#123;&#123;cfg_files&#125;&#125;&quot;</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">  handlers:</span><br><span class=\"line\">    - name: Restart zookeeper service</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-验证zookeeper运行情况\">4. 验证zookeeper运行情况</h3>\n<ul>\n<li>确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件</li>\n<li>确认/tmp/zookeeper/myid文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg</span><br><span class=\"line\">cat /tmp/zookeeper/myid</span><br></pre></td></tr></table></figure>\n<ul>\n<li>执行playbook</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/ansible/script/zookeeper/</span><br><span class=\"line\"></span><br><span class=\"line\">ansible-playbook zookeeper_install_playbook.yml  -e &#x27;&#123; &quot;zk_servers&quot;: [ &#123;&quot;ip&quot;: &quot;127.0.0.1&quot;, &quot;myid&quot;: 1 &#125; ], &quot;zk_election_port&quot;: 3888, &quot;zk_communication_port&quot;: 2888, &quot;zk_data_dir&quot;: &quot;/tmp/zookeeper&quot;, &quot;zk_datalog_dir&quot;: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/logs&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-单独维护\">5. 单独维护</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看状态</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动失败时，带输出启动查看</span></span><br><span class=\"line\">zkServer.sh start-foreground</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-异常处理\">6.异常处理</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally</span><br><span class=\"line\">java.net.BindException: Address already in use</span><br><span class=\"line\">        at sun.nio.ch.Net.bind0(Native Method)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:461)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:453)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)</span><br><span class=\"line\">        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)</span><br><span class=\"line\">2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.</span><br><span class=\"line\">2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1</span><br><span class=\"line\">[root@node71 ~]# netstat -nltp | grep 2181</span><br><span class=\"line\">tcp6       0      0 :::2181                 :::*                    LISTEN      8305/java</span><br><span class=\"line\">[root@node71 ~]# kill -9 8305</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考：<a href=\"https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/\">利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"zookeeper集群环境部署\">zookeeper集群环境部署</h2>\n<p>前置说明：</p>\n<ul>\n<li>日志文件：dataLogDir=/opt/infra/apache-zookeeper-3.7.1-bin/logs</li>\n<li>数据文件：dataDir=/tmp/zookeeper</li>\n<li>安装路径：/opt/infra/apache-zookeeper-3.7.1-bin</li>\n</ul>\n<h3 id=\"1-下载zookeeper包\">1. 下载zookeeper包</h3>\n<p>注意生产环境请使用最新稳定版本。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The Apache ZooKeeper community supports two release branches at a time: stable and current. The stable version of ZooKeeper is 3.7.x and the current version is 3.8.x. </span><br></pre></td></tr></table></figure>\n<ul>\n<li>下载地址：<a href=\"https://zookeeper.apache.org/releases.html\">https://zookeeper.apache.org/releases.html</a></li>\n</ul>\n<h3 id=\"2-zookeeper上传至配置服务器（ansible）\">2. zookeeper上传至配置服务器（ansible）</h3>\n<p>安装文件上传至ansible主机如下路径</p>\n<ul>\n<li>/etc/ansible/script/zookeeper/infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</li>\n</ul>\n<h3 id=\"3-编辑playbook脚本\">3. 编辑playbook脚本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost etc]# tree ansible/</span><br><span class=\"line\">ansible/</span><br><span class=\"line\">├── ansible.cfg</span><br><span class=\"line\">├── hosts(主机列表)</span><br><span class=\"line\">├── roles(空文件夹)</span><br><span class=\"line\">└── script</span><br><span class=\"line\">    └── zookeeper</span><br><span class=\"line\">        ├── infra_pkgs</span><br><span class=\"line\">        │   ├── apache-zookeeper-3.7.1-bin.tar.gz(zookeeper安装包)</span><br><span class=\"line\">        │   ├── myid.j2(配置文件)</span><br><span class=\"line\">        │   ├── zk.sh(配置文件)</span><br><span class=\"line\">        │   └── zoo.cfg.j2(配置文件)</span><br><span class=\"line\">        └── zookeeper_install_playbook.yml(playbook)</span><br><span class=\"line\">4 directories, 7 files</span><br></pre></td></tr></table></figure>\n<ul>\n<li>hosts文件<br>\n在主机IP后添加<code>zk_myid=[number]</code>定义zookeeper id，后续<code>myid.j2</code>模版中会取这个值。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=1</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=2</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27; zk_myid=3</span><br></pre></td></tr></table></figure>\n<ul>\n<li>myid.j2模板<br>\n根据ip发送到对应主机，如不明白，需先了解手动配置集群。看参考链接2。</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; zk_myid &#125;&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>zoo.cfg.j2模板</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=&#123;&#123;zk_data_dir&#125;&#125;</span><br><span class=\"line\">dataLogDir=&#123;&#123;zk_datalog_dir&#125;&#125;</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\">autopurge.snapRetainCount=5</span><br><span class=\"line\">autopurge.purgeInterval=1</span><br><span class=\"line\">maxClientCnxns=2000</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">master,node1,node2均为主机名</span></span><br><span class=\"line\">server.1=master:2888:3888</span><br><span class=\"line\">server.2=node1:2888:3888</span><br><span class=\"line\">server.3=node2:2888:3888</span><br></pre></td></tr></table></figure>\n<ul>\n<li>playbook文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  vars:</span><br><span class=\"line\">      cfg_files:</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zoo.cfg.j2&quot;</span><br><span class=\"line\">          dest: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/myid.j2&quot;</span><br><span class=\"line\">          dest: &quot;/tmp/zookeeper/myid&quot;</span><br><span class=\"line\">        - src: &quot;./infra_pkgs/zk.sh&quot;</span><br><span class=\"line\">          dest: &quot;/etc/profile.d/zk.sh&quot;</span><br><span class=\"line\">  gather_facts: no</span><br><span class=\"line\">  user: root</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">    - name: 删除原文件</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: rm -rf /opt/infra/apache-zookeeper-3.7.1-bin/ /tmp/zookeeper/</span><br><span class=\"line\">    - name: Create zookeeper installation directory</span><br><span class=\"line\">      file:</span><br><span class=\"line\">        path: &quot;&#123;&#123;item&#125;&#125;&quot;</span><br><span class=\"line\">        state: directory</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">      with_items:</span><br><span class=\"line\">          - /opt/infra</span><br><span class=\"line\">          - /tmp/zookeeper</span><br><span class=\"line\">    - name: Upload zookeeper package</span><br><span class=\"line\">      unarchive:</span><br><span class=\"line\">        src: ./infra_pkgs/apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class=\"line\">        dest: /opt/infra</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">    - name: Init zookeeper config</span><br><span class=\"line\">      template:</span><br><span class=\"line\">        src: &quot;&#123;&#123;item.src&#125;&#125;&quot;</span><br><span class=\"line\">        dest: &quot;&#123;&#123;item.dest&#125;&#125;&quot;</span><br><span class=\"line\">      with_items: &quot;&#123;&#123;cfg_files&#125;&#125;&quot;</span><br><span class=\"line\">      notify: Restart zookeeper service</span><br><span class=\"line\">  handlers:</span><br><span class=\"line\">    - name: Restart zookeeper service</span><br><span class=\"line\">      shell:</span><br><span class=\"line\">        cmd: /opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-验证zookeeper运行情况\">4. 验证zookeeper运行情况</h3>\n<ul>\n<li>确认/opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg文件</li>\n<li>确认/tmp/zookeeper/myid文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /opt/infra/apache-zookeeper-3.7.1-bin/conf/zoo.cfg</span><br><span class=\"line\">cat /tmp/zookeeper/myid</span><br></pre></td></tr></table></figure>\n<ul>\n<li>执行playbook</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /etc/ansible/script/zookeeper/</span><br><span class=\"line\"></span><br><span class=\"line\">ansible-playbook zookeeper_install_playbook.yml  -e &#x27;&#123; &quot;zk_servers&quot;: [ &#123;&quot;ip&quot;: &quot;127.0.0.1&quot;, &quot;myid&quot;: 1 &#125; ], &quot;zk_election_port&quot;: 3888, &quot;zk_communication_port&quot;: 2888, &quot;zk_data_dir&quot;: &quot;/tmp/zookeeper&quot;, &quot;zk_datalog_dir&quot;: &quot;/opt/infra/apache-zookeeper-3.7.1-bin/logs&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-单独维护\">5. 单独维护</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看状态</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh status</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh stop</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh restart</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动</span></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/bin/zkServer.sh start</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动失败时，带输出启动查看</span></span><br><span class=\"line\">zkServer.sh start-foreground</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-异常处理\">6.异常处理</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2023-05-27 22:34:50,874 [myid:1] - ERROR [main:QuorumPeerMain@114] - Unexpected exception, exiting abnormally</span><br><span class=\"line\">java.net.BindException: Address already in use</span><br><span class=\"line\">        at sun.nio.ch.Net.bind0(Native Method)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:461)</span><br><span class=\"line\">        at sun.nio.ch.Net.bind(Net.java:453)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)</span><br><span class=\"line\">        at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)</span><br><span class=\"line\">        at org.apache.zookeeper.server.NIOServerCnxnFactory.configure(NIOServerCnxnFactory.java:662)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.runFromConfig(QuorumPeerMain.java:169)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.initializeAndRun(QuorumPeerMain.java:137)</span><br><span class=\"line\">        at org.apache.zookeeper.server.quorum.QuorumPeerMain.main(QuorumPeerMain.java:91)</span><br><span class=\"line\">2023-05-27 22:34:50,875 [myid:1] - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.</span><br><span class=\"line\">2023-05-27 22:34:50,876 [myid:1] - ERROR [main:ServiceUtils@48] - Exiting JVM with code 1</span><br><span class=\"line\">[root@node71 ~]# netstat -nltp | grep 2181</span><br><span class=\"line\">tcp6       0      0 :::2181                 :::*                    LISTEN      8305/java</span><br><span class=\"line\">[root@node71 ~]# kill -9 8305</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考：<a href=\"https://coderatwork.cn/posts/deploy-zookeeper-with-ansible/\">利用 ansible 部署 zookeeper 集群 | kikimo (coderatwork.cn)</a></li>\n</ul>\n"},{"_content":"\n\n\n\n```shell\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\n### 安装docker\n\n```\nyum install docker-ce docker-ce-cli containerd.io\n//启动docker\nsystemctl enable docker\nsystemctl start docker\n//查看docker版本\ndocker --version\n//查看是否启动成功\n rpm -qa | grep  docker\n```\n\n### 配置国内源（请珍惜生命）\n```\n#docker 设置国内镜像源.创建或修改`vi /etc/docker/daemon.json` 文件，修改为如下形式\n\n{\n  \"registry-mirrors\": [\n    \"https://4sjn347i.mirror.aliyuncs.com\",\n    \"https://docker.mirrors.ustc.edu.cn\"\n  ],\n  \"max-concurrent-downloads\": 10,\n  \"insecure-registries\": [],\n  \"debug\": true,\n  \"experimental\": false,\n  \"features\": {\n    \"buildkit\": true\n  }\n}\n\n```\n\n### docker维护\n\n```\n#查看运行中的容器\n[root@ansible prometheus]# docker ps -a\nCONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                      NAMES\n1e67cc0cd48a   prom/prometheus   \"/bin/prometheus --c…\"   3 minutes ago    Created                                    crazy_varahamihira\n121e8c4fae84   prom/prometheus   \"/bin/prometheus --c…\"   19 minutes ago   Up 19 minutes   127.0.0.1:9090->9090/tcp   prometheus\n\n#停止运行中的容器\n[root@ansible prometheus]# docker stop prometheus\nprometheus\n\n\n\ndocker info                # 查看docker的信息\n\ndocker search img_name     # 搜索名为img_name的镜像\ndocker pull img_name       # 将名为img_name的镜像下载到本地\ndocker images              # 查看本地已有的镜像\ndocker rmi img_name        # 删除名为img_name的镜像\n \ndocker ps                  # 列出正在运行的容器\ndocker ps -a               # 列出所有的容器\n# 使用img_name以交互模式在后台运行分配了伪终端的名为container_name的镜像\ndocker run -itd --name=container_name img_name  \n \ndocker start container_name/container_id        # 通过容器名字或ID启动容器\ndocker stop container_name/container_id         # 通过容器名字或ID停止容器\ndocker restart container_name/container_id      # 通过容器名字或ID重启容器\ndocker rm container_name/container_id           # 通过容器名字或ID删除容器\n \ndocker exec -it  id /bin/bash   # 通过容器名字或ID进入容器\nexit               # 退出容器\n\n#docker进入容器命令\ndocker exec -it 44fc0f0582d9 /bin/bash\n\n\n```\n\n\n\n### 查看报错\n\n```\n#查看log\ndocker logs 34d9cdf91e46\n\n\n1. # 通过查看容器日志，确定是什么问题,docker logs -f -t --tail 行数 容器名\n    docker logs -f -t --tail 100 <containerID> \n2. # 将容器中导致错误的文件拷贝到宿主机上\n    docker cp containerID:container_path host_path \n    ***说明***\n    \tcontainerID：容器ID\n    \tcontainer_path：容器内文件路径（需拷贝的源文件）\n    \thost_path：宿主机路径（拷贝文件的目标）\n3. # 修改拷贝出来的配置文件, 再将配置文件拷贝回去容器 \n    docker cp host_path containerID:container_path\n4. # 再次启动容器\n    docker start containerID\n\n```\n\n\n\n\n\n","source":"_posts/07中间件/5.2.Docker环境部署.md","raw":"\n\n\n\n```shell\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\n### 安装docker\n\n```\nyum install docker-ce docker-ce-cli containerd.io\n//启动docker\nsystemctl enable docker\nsystemctl start docker\n//查看docker版本\ndocker --version\n//查看是否启动成功\n rpm -qa | grep  docker\n```\n\n### 配置国内源（请珍惜生命）\n```\n#docker 设置国内镜像源.创建或修改`vi /etc/docker/daemon.json` 文件，修改为如下形式\n\n{\n  \"registry-mirrors\": [\n    \"https://4sjn347i.mirror.aliyuncs.com\",\n    \"https://docker.mirrors.ustc.edu.cn\"\n  ],\n  \"max-concurrent-downloads\": 10,\n  \"insecure-registries\": [],\n  \"debug\": true,\n  \"experimental\": false,\n  \"features\": {\n    \"buildkit\": true\n  }\n}\n\n```\n\n### docker维护\n\n```\n#查看运行中的容器\n[root@ansible prometheus]# docker ps -a\nCONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                      NAMES\n1e67cc0cd48a   prom/prometheus   \"/bin/prometheus --c…\"   3 minutes ago    Created                                    crazy_varahamihira\n121e8c4fae84   prom/prometheus   \"/bin/prometheus --c…\"   19 minutes ago   Up 19 minutes   127.0.0.1:9090->9090/tcp   prometheus\n\n#停止运行中的容器\n[root@ansible prometheus]# docker stop prometheus\nprometheus\n\n\n\ndocker info                # 查看docker的信息\n\ndocker search img_name     # 搜索名为img_name的镜像\ndocker pull img_name       # 将名为img_name的镜像下载到本地\ndocker images              # 查看本地已有的镜像\ndocker rmi img_name        # 删除名为img_name的镜像\n \ndocker ps                  # 列出正在运行的容器\ndocker ps -a               # 列出所有的容器\n# 使用img_name以交互模式在后台运行分配了伪终端的名为container_name的镜像\ndocker run -itd --name=container_name img_name  \n \ndocker start container_name/container_id        # 通过容器名字或ID启动容器\ndocker stop container_name/container_id         # 通过容器名字或ID停止容器\ndocker restart container_name/container_id      # 通过容器名字或ID重启容器\ndocker rm container_name/container_id           # 通过容器名字或ID删除容器\n \ndocker exec -it  id /bin/bash   # 通过容器名字或ID进入容器\nexit               # 退出容器\n\n#docker进入容器命令\ndocker exec -it 44fc0f0582d9 /bin/bash\n\n\n```\n\n\n\n### 查看报错\n\n```\n#查看log\ndocker logs 34d9cdf91e46\n\n\n1. # 通过查看容器日志，确定是什么问题,docker logs -f -t --tail 行数 容器名\n    docker logs -f -t --tail 100 <containerID> \n2. # 将容器中导致错误的文件拷贝到宿主机上\n    docker cp containerID:container_path host_path \n    ***说明***\n    \tcontainerID：容器ID\n    \tcontainer_path：容器内文件路径（需拷贝的源文件）\n    \thost_path：宿主机路径（拷贝文件的目标）\n3. # 修改拷贝出来的配置文件, 再将配置文件拷贝回去容器 \n    docker cp host_path containerID:container_path\n4. # 再次启动容器\n    docker start containerID\n\n```\n\n\n\n\n\n","slug":"07中间件/5.2.Docker环境部署","published":1,"date":"2023-09-01T13:06:37.590Z","updated":"2023-06-29T11:49:46.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0x000mzb8ab0a4di5e","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装docker\">安装docker</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">//启动docker</span><br><span class=\"line\">systemctl enable docker</span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">//查看docker版本</span><br><span class=\"line\">docker --version</span><br><span class=\"line\">//查看是否启动成功</span><br><span class=\"line\"> rpm -qa | grep  docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置国内源（请珍惜生命）\">配置国内源（请珍惜生命）</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#docker 设置国内镜像源.创建或修改`vi /etc/docker/daemon.json` 文件，修改为如下形式</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">    &quot;https://4sjn347i.mirror.aliyuncs.com&quot;,</span><br><span class=\"line\">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;max-concurrent-downloads&quot;: 10,</span><br><span class=\"line\">  &quot;insecure-registries&quot;: [],</span><br><span class=\"line\">  &quot;debug&quot;: true,</span><br><span class=\"line\">  &quot;experimental&quot;: false,</span><br><span class=\"line\">  &quot;features&quot;: &#123;</span><br><span class=\"line\">    &quot;buildkit&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"docker维护\">docker维护</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看运行中的容器</span><br><span class=\"line\">[root@ansible prometheus]# docker ps -a</span><br><span class=\"line\">CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                      NAMES</span><br><span class=\"line\">1e67cc0cd48a   prom/prometheus   &quot;/bin/prometheus --c…&quot;   3 minutes ago    Created                                    crazy_varahamihira</span><br><span class=\"line\">121e8c4fae84   prom/prometheus   &quot;/bin/prometheus --c…&quot;   19 minutes ago   Up 19 minutes   127.0.0.1:9090-&gt;9090/tcp   prometheus</span><br><span class=\"line\"></span><br><span class=\"line\">#停止运行中的容器</span><br><span class=\"line\">[root@ansible prometheus]# docker stop prometheus</span><br><span class=\"line\">prometheus</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker info                # 查看docker的信息</span><br><span class=\"line\"></span><br><span class=\"line\">docker search img_name     # 搜索名为img_name的镜像</span><br><span class=\"line\">docker pull img_name       # 将名为img_name的镜像下载到本地</span><br><span class=\"line\">docker images              # 查看本地已有的镜像</span><br><span class=\"line\">docker rmi img_name        # 删除名为img_name的镜像</span><br><span class=\"line\"> </span><br><span class=\"line\">docker ps                  # 列出正在运行的容器</span><br><span class=\"line\">docker ps -a               # 列出所有的容器</span><br><span class=\"line\"># 使用img_name以交互模式在后台运行分配了伪终端的名为container_name的镜像</span><br><span class=\"line\">docker run -itd --name=container_name img_name  </span><br><span class=\"line\"> </span><br><span class=\"line\">docker start container_name/container_id        # 通过容器名字或ID启动容器</span><br><span class=\"line\">docker stop container_name/container_id         # 通过容器名字或ID停止容器</span><br><span class=\"line\">docker restart container_name/container_id      # 通过容器名字或ID重启容器</span><br><span class=\"line\">docker rm container_name/container_id           # 通过容器名字或ID删除容器</span><br><span class=\"line\"> </span><br><span class=\"line\">docker exec -it  id /bin/bash   # 通过容器名字或ID进入容器</span><br><span class=\"line\">exit               # 退出容器</span><br><span class=\"line\"></span><br><span class=\"line\">#docker进入容器命令</span><br><span class=\"line\">docker exec -it 44fc0f0582d9 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"查看报错\">查看报错</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看log</span><br><span class=\"line\">docker logs 34d9cdf91e46</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1. # 通过查看容器日志，确定是什么问题,docker logs -f -t --tail 行数 容器名</span><br><span class=\"line\">    docker logs -f -t --tail 100 &lt;containerID&gt; </span><br><span class=\"line\">2. # 将容器中导致错误的文件拷贝到宿主机上</span><br><span class=\"line\">    docker cp containerID:container_path host_path </span><br><span class=\"line\">    ***说明***</span><br><span class=\"line\">    \tcontainerID：容器ID</span><br><span class=\"line\">    \tcontainer_path：容器内文件路径（需拷贝的源文件）</span><br><span class=\"line\">    \thost_path：宿主机路径（拷贝文件的目标）</span><br><span class=\"line\">3. # 修改拷贝出来的配置文件, 再将配置文件拷贝回去容器 </span><br><span class=\"line\">    docker cp host_path containerID:container_path</span><br><span class=\"line\">4. # 再次启动容器</span><br><span class=\"line\">    docker start containerID</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装docker\">安装docker</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">//启动docker</span><br><span class=\"line\">systemctl enable docker</span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\">//查看docker版本</span><br><span class=\"line\">docker --version</span><br><span class=\"line\">//查看是否启动成功</span><br><span class=\"line\"> rpm -qa | grep  docker</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置国内源（请珍惜生命）\">配置国内源（请珍惜生命）</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#docker 设置国内镜像源.创建或修改`vi /etc/docker/daemon.json` 文件，修改为如下形式</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">    &quot;https://4sjn347i.mirror.aliyuncs.com&quot;,</span><br><span class=\"line\">    &quot;https://docker.mirrors.ustc.edu.cn&quot;</span><br><span class=\"line\">  ],</span><br><span class=\"line\">  &quot;max-concurrent-downloads&quot;: 10,</span><br><span class=\"line\">  &quot;insecure-registries&quot;: [],</span><br><span class=\"line\">  &quot;debug&quot;: true,</span><br><span class=\"line\">  &quot;experimental&quot;: false,</span><br><span class=\"line\">  &quot;features&quot;: &#123;</span><br><span class=\"line\">    &quot;buildkit&quot;: true</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"docker维护\">docker维护</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看运行中的容器</span><br><span class=\"line\">[root@ansible prometheus]# docker ps -a</span><br><span class=\"line\">CONTAINER ID   IMAGE             COMMAND                  CREATED          STATUS          PORTS                      NAMES</span><br><span class=\"line\">1e67cc0cd48a   prom/prometheus   &quot;/bin/prometheus --c…&quot;   3 minutes ago    Created                                    crazy_varahamihira</span><br><span class=\"line\">121e8c4fae84   prom/prometheus   &quot;/bin/prometheus --c…&quot;   19 minutes ago   Up 19 minutes   127.0.0.1:9090-&gt;9090/tcp   prometheus</span><br><span class=\"line\"></span><br><span class=\"line\">#停止运行中的容器</span><br><span class=\"line\">[root@ansible prometheus]# docker stop prometheus</span><br><span class=\"line\">prometheus</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker info                # 查看docker的信息</span><br><span class=\"line\"></span><br><span class=\"line\">docker search img_name     # 搜索名为img_name的镜像</span><br><span class=\"line\">docker pull img_name       # 将名为img_name的镜像下载到本地</span><br><span class=\"line\">docker images              # 查看本地已有的镜像</span><br><span class=\"line\">docker rmi img_name        # 删除名为img_name的镜像</span><br><span class=\"line\"> </span><br><span class=\"line\">docker ps                  # 列出正在运行的容器</span><br><span class=\"line\">docker ps -a               # 列出所有的容器</span><br><span class=\"line\"># 使用img_name以交互模式在后台运行分配了伪终端的名为container_name的镜像</span><br><span class=\"line\">docker run -itd --name=container_name img_name  </span><br><span class=\"line\"> </span><br><span class=\"line\">docker start container_name/container_id        # 通过容器名字或ID启动容器</span><br><span class=\"line\">docker stop container_name/container_id         # 通过容器名字或ID停止容器</span><br><span class=\"line\">docker restart container_name/container_id      # 通过容器名字或ID重启容器</span><br><span class=\"line\">docker rm container_name/container_id           # 通过容器名字或ID删除容器</span><br><span class=\"line\"> </span><br><span class=\"line\">docker exec -it  id /bin/bash   # 通过容器名字或ID进入容器</span><br><span class=\"line\">exit               # 退出容器</span><br><span class=\"line\"></span><br><span class=\"line\">#docker进入容器命令</span><br><span class=\"line\">docker exec -it 44fc0f0582d9 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"查看报错\">查看报错</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查看log</span><br><span class=\"line\">docker logs 34d9cdf91e46</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1. # 通过查看容器日志，确定是什么问题,docker logs -f -t --tail 行数 容器名</span><br><span class=\"line\">    docker logs -f -t --tail 100 &lt;containerID&gt; </span><br><span class=\"line\">2. # 将容器中导致错误的文件拷贝到宿主机上</span><br><span class=\"line\">    docker cp containerID:container_path host_path </span><br><span class=\"line\">    ***说明***</span><br><span class=\"line\">    \tcontainerID：容器ID</span><br><span class=\"line\">    \tcontainer_path：容器内文件路径（需拷贝的源文件）</span><br><span class=\"line\">    \thost_path：宿主机路径（拷贝文件的目标）</span><br><span class=\"line\">3. # 修改拷贝出来的配置文件, 再将配置文件拷贝回去容器 </span><br><span class=\"line\">    docker cp host_path containerID:container_path</span><br><span class=\"line\">4. # 再次启动容器</span><br><span class=\"line\">    docker start containerID</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"## 1. 网络规划\n\n198.168.10.71（主）\n\n198.168.10.72（主）\n\n198.168.10.73（从，延迟复制71）\n\nkeepalived部署于双主节点\n\n\n## 2. 前置工作\n\n- 确认系统版本\n\n```\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n  \n\n- 下载rpm安装包\n\n  [MySQL :: Download MySQL Community Server (Archived Versions)](https://downloads.mysql.com/archives/community/)\n\n```shell\n  Product Version:5.7.41\n  Operating System: Red Hat Enterprise Linux / Oracle Linux \n  OS Version: Red Hat Enterprise Linux 7 / Oracle Linux 7 (x86, 64-bit)  \n  RPM Bundle: Dec 9, 2022\t531.5M\t(mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar)\n```\n\n- 解压\n\n  上传文件到任意目录，然后解压\n\n```\ntar -xvf mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar\n```\n\n\n\n## 3. 单机安装\n\n以下两台主机都需安装，按普通单机模式先完成。\n\n- RPM安装\n\n```shell\nrpm  -ivh  *.rpm --nodeps --force\nwarning: mysql-community-client-5.7.41-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Si\nPreparing...                          ################################# [100%]\n```\n\n- 确认安装位置\n\n```shell\n[root@node71 ~]#  whereis mysql\nmysql: /usr/bin/mysql /usr/lib64/mysql /usr/include/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz\n```\n\n- 初始化\n\n```shell\n[root@node71 ~]# mysqld --initialize --console\n[root@node71 ~]# chown -R mysql:mysql /var/lib/mysql/\n#启动数据库\n[root@node71 ~]# systemctl start mysqld\n[root@node71 ~]# systemctl status mysqld\n● mysqld.service - MySQL Server\n   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor prese      t: disabled)\n   Active: active (running) since Sun 2023-05-28 00:59:45 PDT; 6s ago\n     Docs: man:mysqld(8)\n           http://dev.mysql.com/doc/refman/en/using-systemd.html\n  Process: 11671 ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysq      ld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)\n  Process: 11639 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0      /SUCCESS)\n Main PID: 11674 (mysqld)\n    Tasks: 27\n   CGroup: /system.slice/mysqld.service\n           └─11674 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/my...\n```\n\n- 初始密码\n\n```shell\n[root@node71 ~]# cat /var/log/mysqld.log |grep tempo\n2023-05-28T07:59:25.164850Z 1 [Note] A temporary password is generated for root@localhost: +<pWgX3)GmP>\n```\n\n- 修改root密码\n\n```\n[root@node72 ~]# mysql -u root -p\nmysql> use mysql;\nmysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'dahouzi';\n```\n\n- 修改root访问权限\n\n```sql\n#更改为任意主机可访问\nmysql> UPDATE user SET host = \"%\" WHERE user='root';\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> SELECT host, user, authentication_string, plugin FROM user;\n+-----------+---------------+-------------------------------------------+-----------------------+\n| host      | user          | authentication_string                     | plugin                |\n+-----------+---------------+-------------------------------------------+-----------------------+\n| %         | root          | *1FB37DBB9243517E6128CA92A0FBE13C066456CF | mysql_native_password |\n| localhost | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password |\n| localhost | mysql.sys     | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password |\n+-----------+---------------+-------------------------------------------+-----------------------+\n\nmysql> FLUSH privileges;\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n\n\n## 4. 双主配置\n\n两台主机均需如下操作：\n\n- 查询master_log_file和Position位置\n\n```shell\n[root@node71 ~]# mysql -uroot -p\n\nmysql> show master status;\n+------------------+----------+--------------+-------------------------------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                          | Executed_Gtid_Set |\n+------------------+----------+--------------+-------------------------------------------+-------------------+\n| mysql-bin.000001 |      868 |              | performance_schema,information_schema,sys |                   |\n+------------------+----------+--------------+-------------------------------------------+-------------------+\n1 row in set (0.00 sec)\n```\n\n- 修改配置文件\n\n```\n  vi /etc/my.cnf\n  \n  log_bin=mysql-bin\n  server-id=73\n  sync-binlog=1\n  binlog-ignore-db=performance_schema\n  binlog-ignore-db=information_schema\n  binlog-ignore-db=sys\n  \n  \n  relay_log=mysql-relay-bin\n  log_slave_updates=1\n  \n  auto_increment_offset=1\n  auto_increment_increment=2\n```\n\n  \n\n- 授权\n\n```shell\nmysql> grant replication slave on *.* to 'root'@'%' identified by 'dahouzi';\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> grant all privileges on *.* to 'root'@'%' identified by 'dahouzi';\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n\n\n- 主从关系（`此步两台主机有所不同`）\n\n```\n#192.168.10.72主机执行\nchange master to master_host='192.168.10.71',master_port=3306,master_user='root',master_password='dahouzi',master_log_file='mysql-bin.000001',master_log_pos=2438;\n\n#192.168.10.71主机执行\nchange master to master_host='192.168.10.72',master_port=3306,master_user='root',master_password='***',master_log_file='mysql-bin.000001',master_log_pos=868;\n```\n\n- 确认主从关系\nSlave_IO_Running: Yes和Slave_SQL_Running: Yes\n```shell\nmysql> start slave;\nQuery OK, 0 rows affected (0.00 sec)\n\n\nmysql> show slave status \\G;\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 192.168.10.72\n                  Master_User: root\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000001\n          Read_Master_Log_Pos: 868\n               Relay_Log_File: mysql-relay-bin.000002\n                Relay_Log_Pos: 320\n        Relay_Master_Log_File: mysql-bin.000001\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n```\n\n\n\n## 5. MHA高可用\n\n```\nssh-keygen -t rsa\ncd ~/.ssh\nssh-copy-id node71\nssh-copy-id node72\nssh-copy-id node73\n```\n\n\n\nkeepalive\n/etc/keepalived/keepalived.conf\n```\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id master71\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface ens33\n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.10.77\n    }\n}\n\nvirtual_server 192.168.10.77 3306 {\n    delay_loop 6\n    lb_algo rr\n    lb_kind DR\n    net_mask 255.255.255.0\n    persistence_timeout 50\n    protocol TCP\n\n    real_server 192.168.10.71 3306 {\n        weight 1\n        notify_down /etc/keepalived/closekeepalived.sh\n        TCP_CHECK {               # 健康检查\n            connect_timeout 3\n            nb_get_retry 3\n            delay_before_retry 3\n            connect_port 3306     # 设置连接端口3306\n        }\n    }\n}\n\n```\n\n\n\n关闭keepalived\n\n```\n/etc/keepalived/closekeepalived.sh\n\n#closekeepalived.sh内容\nsudo -S killall keepalived\n\nchmod +x /etc/keepalived/closekeepalived.sh\n```\n\n\n\n## 6. 测试\n\n原理：keepalived监控自己节点的mysql是否正常，如果检测mysql已关闭，则关闭自己告诉对方接管虚拟IP。\n\n```\n[root@node71 mha]# service keepalived restart\nRedirecting to /bin/systemctl restart keepalived.service\n[root@node71 mha]# ps -ef | grep keepalived\nroot      27246      1  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D\nroot      27247  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D\nroot      27248  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D\nroot      27255  23305  0 00:04 pts/0    00:00:00 grep --color=auto keepalived\n[root@node71 mha]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: ens32: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:fd:2c:2f brd ff:ff:ff:ff:ff:ff\n    inet 192.168.10.71/24 brd 192.168.10.255 scope global noprefixroute ens32\n       valid_lft forever preferred_lft forever\n    inet 192.168.10.77/32 scope global ens32\n       valid_lft forever preferred_lft forever\n    inet6 fe80::9c86:aaa1:7ab7:4315/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n3: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0\n       valid_lft forever preferred_lft forever\n4: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000\n    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff\n\n\n```\n\n\n\n## 7. 维护操作\n\n```\n[root@node71 ~]# systemctl restart mysqld\n[root@node71 ~]# systemctl status mysqld\n[root@node71 ~]# systemctl stop mysqld\n[root@node71 ~]# systemctl restart keepalived.service\n[root@node71 ~]# systemctl stop keepalived.service\n```\n\n\n\n## 8. 日常运维（主机重启）\n\n1. 因数据库不常重启，主机重启后的操作，需校对数据库一致性\n2. 每隔24小时，也需校对一次关键数据在主从服务器一致性，在资源消耗低谷时做\n\n\n\n\n\n","source":"_posts/07中间件/7.2.Mysql双主集群部署.md","raw":"## 1. 网络规划\n\n198.168.10.71（主）\n\n198.168.10.72（主）\n\n198.168.10.73（从，延迟复制71）\n\nkeepalived部署于双主节点\n\n\n## 2. 前置工作\n\n- 确认系统版本\n\n```\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n  \n\n- 下载rpm安装包\n\n  [MySQL :: Download MySQL Community Server (Archived Versions)](https://downloads.mysql.com/archives/community/)\n\n```shell\n  Product Version:5.7.41\n  Operating System: Red Hat Enterprise Linux / Oracle Linux \n  OS Version: Red Hat Enterprise Linux 7 / Oracle Linux 7 (x86, 64-bit)  \n  RPM Bundle: Dec 9, 2022\t531.5M\t(mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar)\n```\n\n- 解压\n\n  上传文件到任意目录，然后解压\n\n```\ntar -xvf mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar\n```\n\n\n\n## 3. 单机安装\n\n以下两台主机都需安装，按普通单机模式先完成。\n\n- RPM安装\n\n```shell\nrpm  -ivh  *.rpm --nodeps --force\nwarning: mysql-community-client-5.7.41-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Si\nPreparing...                          ################################# [100%]\n```\n\n- 确认安装位置\n\n```shell\n[root@node71 ~]#  whereis mysql\nmysql: /usr/bin/mysql /usr/lib64/mysql /usr/include/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz\n```\n\n- 初始化\n\n```shell\n[root@node71 ~]# mysqld --initialize --console\n[root@node71 ~]# chown -R mysql:mysql /var/lib/mysql/\n#启动数据库\n[root@node71 ~]# systemctl start mysqld\n[root@node71 ~]# systemctl status mysqld\n● mysqld.service - MySQL Server\n   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor prese      t: disabled)\n   Active: active (running) since Sun 2023-05-28 00:59:45 PDT; 6s ago\n     Docs: man:mysqld(8)\n           http://dev.mysql.com/doc/refman/en/using-systemd.html\n  Process: 11671 ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysq      ld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)\n  Process: 11639 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0      /SUCCESS)\n Main PID: 11674 (mysqld)\n    Tasks: 27\n   CGroup: /system.slice/mysqld.service\n           └─11674 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/my...\n```\n\n- 初始密码\n\n```shell\n[root@node71 ~]# cat /var/log/mysqld.log |grep tempo\n2023-05-28T07:59:25.164850Z 1 [Note] A temporary password is generated for root@localhost: +<pWgX3)GmP>\n```\n\n- 修改root密码\n\n```\n[root@node72 ~]# mysql -u root -p\nmysql> use mysql;\nmysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'dahouzi';\n```\n\n- 修改root访问权限\n\n```sql\n#更改为任意主机可访问\nmysql> UPDATE user SET host = \"%\" WHERE user='root';\nQuery OK, 1 row affected (0.00 sec)\n\nmysql> SELECT host, user, authentication_string, plugin FROM user;\n+-----------+---------------+-------------------------------------------+-----------------------+\n| host      | user          | authentication_string                     | plugin                |\n+-----------+---------------+-------------------------------------------+-----------------------+\n| %         | root          | *1FB37DBB9243517E6128CA92A0FBE13C066456CF | mysql_native_password |\n| localhost | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password |\n| localhost | mysql.sys     | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | mysql_native_password |\n+-----------+---------------+-------------------------------------------+-----------------------+\n\nmysql> FLUSH privileges;\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n\n\n## 4. 双主配置\n\n两台主机均需如下操作：\n\n- 查询master_log_file和Position位置\n\n```shell\n[root@node71 ~]# mysql -uroot -p\n\nmysql> show master status;\n+------------------+----------+--------------+-------------------------------------------+-------------------+\n| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                          | Executed_Gtid_Set |\n+------------------+----------+--------------+-------------------------------------------+-------------------+\n| mysql-bin.000001 |      868 |              | performance_schema,information_schema,sys |                   |\n+------------------+----------+--------------+-------------------------------------------+-------------------+\n1 row in set (0.00 sec)\n```\n\n- 修改配置文件\n\n```\n  vi /etc/my.cnf\n  \n  log_bin=mysql-bin\n  server-id=73\n  sync-binlog=1\n  binlog-ignore-db=performance_schema\n  binlog-ignore-db=information_schema\n  binlog-ignore-db=sys\n  \n  \n  relay_log=mysql-relay-bin\n  log_slave_updates=1\n  \n  auto_increment_offset=1\n  auto_increment_increment=2\n```\n\n  \n\n- 授权\n\n```shell\nmysql> grant replication slave on *.* to 'root'@'%' identified by 'dahouzi';\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> grant all privileges on *.* to 'root'@'%' identified by 'dahouzi';\nQuery OK, 0 rows affected, 1 warning (0.00 sec)\n\nmysql> flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n```\n\n\n\n- 主从关系（`此步两台主机有所不同`）\n\n```\n#192.168.10.72主机执行\nchange master to master_host='192.168.10.71',master_port=3306,master_user='root',master_password='dahouzi',master_log_file='mysql-bin.000001',master_log_pos=2438;\n\n#192.168.10.71主机执行\nchange master to master_host='192.168.10.72',master_port=3306,master_user='root',master_password='***',master_log_file='mysql-bin.000001',master_log_pos=868;\n```\n\n- 确认主从关系\nSlave_IO_Running: Yes和Slave_SQL_Running: Yes\n```shell\nmysql> start slave;\nQuery OK, 0 rows affected (0.00 sec)\n\n\nmysql> show slave status \\G;\n*************************** 1. row ***************************\n               Slave_IO_State: Waiting for master to send event\n                  Master_Host: 192.168.10.72\n                  Master_User: root\n                  Master_Port: 3306\n                Connect_Retry: 60\n              Master_Log_File: mysql-bin.000001\n          Read_Master_Log_Pos: 868\n               Relay_Log_File: mysql-relay-bin.000002\n                Relay_Log_Pos: 320\n        Relay_Master_Log_File: mysql-bin.000001\n             Slave_IO_Running: Yes\n            Slave_SQL_Running: Yes\n```\n\n\n\n## 5. MHA高可用\n\n```\nssh-keygen -t rsa\ncd ~/.ssh\nssh-copy-id node71\nssh-copy-id node72\nssh-copy-id node73\n```\n\n\n\nkeepalive\n/etc/keepalived/keepalived.conf\n```\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id master71\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface ens33\n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.10.77\n    }\n}\n\nvirtual_server 192.168.10.77 3306 {\n    delay_loop 6\n    lb_algo rr\n    lb_kind DR\n    net_mask 255.255.255.0\n    persistence_timeout 50\n    protocol TCP\n\n    real_server 192.168.10.71 3306 {\n        weight 1\n        notify_down /etc/keepalived/closekeepalived.sh\n        TCP_CHECK {               # 健康检查\n            connect_timeout 3\n            nb_get_retry 3\n            delay_before_retry 3\n            connect_port 3306     # 设置连接端口3306\n        }\n    }\n}\n\n```\n\n\n\n关闭keepalived\n\n```\n/etc/keepalived/closekeepalived.sh\n\n#closekeepalived.sh内容\nsudo -S killall keepalived\n\nchmod +x /etc/keepalived/closekeepalived.sh\n```\n\n\n\n## 6. 测试\n\n原理：keepalived监控自己节点的mysql是否正常，如果检测mysql已关闭，则关闭自己告诉对方接管虚拟IP。\n\n```\n[root@node71 mha]# service keepalived restart\nRedirecting to /bin/systemctl restart keepalived.service\n[root@node71 mha]# ps -ef | grep keepalived\nroot      27246      1  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D\nroot      27247  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D\nroot      27248  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D\nroot      27255  23305  0 00:04 pts/0    00:00:00 grep --color=auto keepalived\n[root@node71 mha]# ip a\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n2: ens32: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000\n    link/ether 00:0c:29:fd:2c:2f brd ff:ff:ff:ff:ff:ff\n    inet 192.168.10.71/24 brd 192.168.10.255 scope global noprefixroute ens32\n       valid_lft forever preferred_lft forever\n    inet 192.168.10.77/32 scope global ens32\n       valid_lft forever preferred_lft forever\n    inet6 fe80::9c86:aaa1:7ab7:4315/64 scope link noprefixroute\n       valid_lft forever preferred_lft forever\n3: virbr0: <NO-CARRIER,BROADCAST,MULTICAST,UP> mtu 1500 qdisc noqueue state DOWN group default qlen 1000\n    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff\n    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0\n       valid_lft forever preferred_lft forever\n4: virbr0-nic: <BROADCAST,MULTICAST> mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000\n    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff\n\n\n```\n\n\n\n## 7. 维护操作\n\n```\n[root@node71 ~]# systemctl restart mysqld\n[root@node71 ~]# systemctl status mysqld\n[root@node71 ~]# systemctl stop mysqld\n[root@node71 ~]# systemctl restart keepalived.service\n[root@node71 ~]# systemctl stop keepalived.service\n```\n\n\n\n## 8. 日常运维（主机重启）\n\n1. 因数据库不常重启，主机重启后的操作，需校对数据库一致性\n2. 每隔24小时，也需校对一次关键数据在主从服务器一致性，在资源消耗低谷时做\n\n\n\n\n\n","slug":"07中间件/7.2.Mysql双主集群部署","published":1,"date":"2023-09-01T13:06:37.590Z","updated":"2024-07-18T06:10:46.527Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0y000nzb8aa54f0k0m","content":"<h2 id=\"1-网络规划\">1. 网络规划</h2>\n<p>198.168.10.71（主）</p>\n<p>198.168.10.72（主）</p>\n<p>198.168.10.73（从，延迟复制71）</p>\n<p>keepalived部署于双主节点</p>\n<h2 id=\"2-前置工作\">2. 前置工作</h2>\n<ul>\n<li>确认系统版本</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>下载rpm安装包</p>\n<p><a href=\"https://downloads.mysql.com/archives/community/\">MySQL :: Download MySQL Community Server (Archived Versions)</a></p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Product Version:5.7.41</span><br><span class=\"line\">Operating System: Red Hat Enterprise Linux / Oracle Linux </span><br><span class=\"line\">OS Version: Red Hat Enterprise Linux 7 / Oracle Linux 7 (x86, 64-bit)  </span><br><span class=\"line\">RPM Bundle: Dec 9, 2022\t531.5M\t(mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>解压</p>\n<p>上传文件到任意目录，然后解压</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-单机安装\">3. 单机安装</h2>\n<p>以下两台主机都需安装，按普通单机模式先完成。</p>\n<ul>\n<li>RPM安装</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm  -ivh  *.rpm --nodeps --force</span><br><span class=\"line\">warning: mysql-community-client-5.7.41-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Si</span><br><span class=\"line\">Preparing...                          ################################# [100%]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认安装位置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]#  whereis mysql</span><br><span class=\"line\">mysql: /usr/bin/mysql /usr/lib64/mysql /usr/include/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>初始化</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# mysqld --initialize --console</span><br><span class=\"line\">[root@node71 ~]# chown -R mysql:mysql /var/lib/mysql/</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动数据库</span></span><br><span class=\"line\">[root@node71 ~]# systemctl start mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl status mysqld</span><br><span class=\"line\">● mysqld.service - MySQL Server</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor prese      t: disabled)</span><br><span class=\"line\">   Active: active (running) since Sun 2023-05-28 00:59:45 PDT; 6s ago</span><br><span class=\"line\">     Docs: man:mysqld(8)</span><br><span class=\"line\">           http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class=\"line\">  Process: 11671 ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysq      ld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)</span><br><span class=\"line\">  Process: 11639 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0      /SUCCESS)</span><br><span class=\"line\"> Main PID: 11674 (mysqld)</span><br><span class=\"line\">    Tasks: 27</span><br><span class=\"line\">   CGroup: /system.slice/mysqld.service</span><br><span class=\"line\">           └─11674 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/my...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>初始密码</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /var/log/mysqld.log |grep tempo</span><br><span class=\"line\">2023-05-28T07:59:25.164850Z 1 [Note] A temporary password is generated for root@localhost: +&lt;pWgX3)GmP&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改root密码</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node72 ~]# mysql -u root -p</span><br><span class=\"line\">mysql&gt; use mysql;</span><br><span class=\"line\">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;dahouzi&#x27;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改root访问权限</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#更改为任意主机可访问</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> host <span class=\"operator\">=</span> &quot;%&quot; <span class=\"keyword\">WHERE</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">SELECT</span> host, <span class=\"keyword\">user</span>, authentication_string, plugin <span class=\"keyword\">FROM</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+---------------+-------------------------------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> host      <span class=\"operator\">|</span> <span class=\"keyword\">user</span>          <span class=\"operator\">|</span> authentication_string                     <span class=\"operator\">|</span> plugin                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+---------------+-------------------------------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">%</span>         <span class=\"operator\">|</span> root          <span class=\"operator\">|</span> <span class=\"operator\">*</span><span class=\"number\">1</span>FB37DBB9243517E6128CA92A0FBE13C066456CF <span class=\"operator\">|</span> mysql_native_password <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> localhost <span class=\"operator\">|</span> mysql.session <span class=\"operator\">|</span> <span class=\"operator\">*</span>THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE <span class=\"operator\">|</span> mysql_native_password <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> localhost <span class=\"operator\">|</span> mysql.sys     <span class=\"operator\">|</span> <span class=\"operator\">*</span>THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE <span class=\"operator\">|</span> mysql_native_password <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+---------------+-------------------------------------------+-----------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> FLUSH privileges;</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-双主配置\">4. 双主配置</h2>\n<p>两台主机均需如下操作：</p>\n<ul>\n<li>查询master_log_file和Position位置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# mysql -uroot -p</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show master status;</span></span><br><span class=\"line\">+------------------+----------+--------------+-------------------------------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                          | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+-------------------------------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000001 |      868 |              | performance_schema,information_schema,sys |                   |</span><br><span class=\"line\">+------------------+----------+--------------+-------------------------------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改配置文件</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\">log_bin=mysql-bin</span><br><span class=\"line\">server-id=73</span><br><span class=\"line\">sync-binlog=1</span><br><span class=\"line\">binlog-ignore-db=performance_schema</span><br><span class=\"line\">binlog-ignore-db=information_schema</span><br><span class=\"line\">binlog-ignore-db=sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">relay_log=mysql-relay-bin</span><br><span class=\"line\">log_slave_updates=1</span><br><span class=\"line\"></span><br><span class=\"line\">auto_increment_offset=1</span><br><span class=\"line\">auto_increment_increment=2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>授权</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">grant replication slave on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;dahouzi&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;dahouzi&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">flush privileges;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>主从关系（<code>此步两台主机有所不同</code>）</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#192.168.10.72主机执行</span><br><span class=\"line\">change master to master_host=&#x27;192.168.10.71&#x27;,master_port=3306,master_user=&#x27;root&#x27;,master_password=&#x27;dahouzi&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=2438;</span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.10.71主机执行</span><br><span class=\"line\">change master to master_host=&#x27;192.168.10.72&#x27;,master_port=3306,master_user=&#x27;root&#x27;,master_password=&#x27;***&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=868;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认主从关系<br>\nSlave_IO_Running: Yes和Slave_SQL_Running: Yes</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">start slave;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show slave status \\G;</span></span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.10.72</span><br><span class=\"line\">                  Master_User: root</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">          Read_Master_Log_Pos: 868</span><br><span class=\"line\">               Relay_Log_File: mysql-relay-bin.000002</span><br><span class=\"line\">                Relay_Log_Pos: 320</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-MHA高可用\">5. MHA高可用</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ssh-copy-id node71</span><br><span class=\"line\">ssh-copy-id node72</span><br><span class=\"line\">ssh-copy-id node73</span><br></pre></td></tr></table></figure>\n<p>keepalive<br>\n/etc/keepalived/keepalived.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id master71</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface ens33</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.77</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.10.77 3306 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    net_mask 255.255.255.0</span><br><span class=\"line\">    persistence_timeout 50</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.10.71 3306 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        notify_down /etc/keepalived/closekeepalived.sh</span><br><span class=\"line\">        TCP_CHECK &#123;               # 健康检查</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 3306     # 设置连接端口3306</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>关闭keepalived</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/keepalived/closekeepalived.sh</span><br><span class=\"line\"></span><br><span class=\"line\">#closekeepalived.sh内容</span><br><span class=\"line\">sudo -S killall keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">chmod +x /etc/keepalived/closekeepalived.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-测试\">6. 测试</h2>\n<p>原理：keepalived监控自己节点的mysql是否正常，如果检测mysql已关闭，则关闭自己告诉对方接管虚拟IP。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 mha]# service keepalived restart</span><br><span class=\"line\">Redirecting to /bin/systemctl restart keepalived.service</span><br><span class=\"line\">[root@node71 mha]# ps -ef | grep keepalived</span><br><span class=\"line\">root      27246      1  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class=\"line\">root      27247  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class=\"line\">root      27248  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class=\"line\">root      27255  23305  0 00:04 pts/0    00:00:00 grep --color=auto keepalived</span><br><span class=\"line\">[root@node71 mha]# ip a</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1/128 scope host</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: ens32: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:0c:29:fd:2c:2f brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.10.71/24 brd 192.168.10.255 scope global noprefixroute ens32</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet 192.168.10.77/32 scope global ens32</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 fe80::9c86:aaa1:7ab7:4315/64 scope link noprefixroute</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span><br><span class=\"line\">    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000</span><br><span class=\"line\">    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"7-维护操作\">7. 维护操作</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# systemctl restart mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl status mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl stop mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl restart keepalived.service</span><br><span class=\"line\">[root@node71 ~]# systemctl stop keepalived.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-日常运维（主机重启）\">8. 日常运维（主机重启）</h2>\n<ol>\n<li>因数据库不常重启，主机重启后的操作，需校对数据库一致性</li>\n<li>每隔24小时，也需校对一次关键数据在主从服务器一致性，在资源消耗低谷时做</li>\n</ol>\n","excerpt":"","more":"<h2 id=\"1-网络规划\">1. 网络规划</h2>\n<p>198.168.10.71（主）</p>\n<p>198.168.10.72（主）</p>\n<p>198.168.10.73（从，延迟复制71）</p>\n<p>keepalived部署于双主节点</p>\n<h2 id=\"2-前置工作\">2. 前置工作</h2>\n<ul>\n<li>确认系统版本</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>下载rpm安装包</p>\n<p><a href=\"https://downloads.mysql.com/archives/community/\">MySQL :: Download MySQL Community Server (Archived Versions)</a></p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Product Version:5.7.41</span><br><span class=\"line\">Operating System: Red Hat Enterprise Linux / Oracle Linux </span><br><span class=\"line\">OS Version: Red Hat Enterprise Linux 7 / Oracle Linux 7 (x86, 64-bit)  </span><br><span class=\"line\">RPM Bundle: Dec 9, 2022\t531.5M\t(mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>解压</p>\n<p>上传文件到任意目录，然后解压</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf mysql-5.7.41-1.el7.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-单机安装\">3. 单机安装</h2>\n<p>以下两台主机都需安装，按普通单机模式先完成。</p>\n<ul>\n<li>RPM安装</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rpm  -ivh  *.rpm --nodeps --force</span><br><span class=\"line\">warning: mysql-community-client-5.7.41-1.el7.x86_64.rpm: Header V4 RSA/SHA256 Si</span><br><span class=\"line\">Preparing...                          ################################# [100%]</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认安装位置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]#  whereis mysql</span><br><span class=\"line\">mysql: /usr/bin/mysql /usr/lib64/mysql /usr/include/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz</span><br></pre></td></tr></table></figure>\n<ul>\n<li>初始化</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# mysqld --initialize --console</span><br><span class=\"line\">[root@node71 ~]# chown -R mysql:mysql /var/lib/mysql/</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动数据库</span></span><br><span class=\"line\">[root@node71 ~]# systemctl start mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl status mysqld</span><br><span class=\"line\">● mysqld.service - MySQL Server</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/mysqld.service; enabled; vendor prese      t: disabled)</span><br><span class=\"line\">   Active: active (running) since Sun 2023-05-28 00:59:45 PDT; 6s ago</span><br><span class=\"line\">     Docs: man:mysqld(8)</span><br><span class=\"line\">           http://dev.mysql.com/doc/refman/en/using-systemd.html</span><br><span class=\"line\">  Process: 11671 ExecStart=/usr/sbin/mysqld --daemonize --pid-file=/var/run/mysq      ld/mysqld.pid $MYSQLD_OPTS (code=exited, status=0/SUCCESS)</span><br><span class=\"line\">  Process: 11639 ExecStartPre=/usr/bin/mysqld_pre_systemd (code=exited, status=0      /SUCCESS)</span><br><span class=\"line\"> Main PID: 11674 (mysqld)</span><br><span class=\"line\">    Tasks: 27</span><br><span class=\"line\">   CGroup: /system.slice/mysqld.service</span><br><span class=\"line\">           └─11674 /usr/sbin/mysqld --daemonize --pid-file=/var/run/mysqld/my...</span><br></pre></td></tr></table></figure>\n<ul>\n<li>初始密码</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /var/log/mysqld.log |grep tempo</span><br><span class=\"line\">2023-05-28T07:59:25.164850Z 1 [Note] A temporary password is generated for root@localhost: +&lt;pWgX3)GmP&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改root密码</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node72 ~]# mysql -u root -p</span><br><span class=\"line\">mysql&gt; use mysql;</span><br><span class=\"line\">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;dahouzi&#x27;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改root访问权限</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#更改为任意主机可访问</span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">UPDATE</span> <span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> host <span class=\"operator\">=</span> &quot;%&quot; <span class=\"keyword\">WHERE</span> <span class=\"keyword\">user</span><span class=\"operator\">=</span><span class=\"string\">&#x27;root&#x27;</span>;</span><br><span class=\"line\">Query OK, <span class=\"number\">1</span> <span class=\"type\">row</span> affected (<span class=\"number\">0.00</span> sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> <span class=\"keyword\">SELECT</span> host, <span class=\"keyword\">user</span>, authentication_string, plugin <span class=\"keyword\">FROM</span> <span class=\"keyword\">user</span>;</span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+---------------+-------------------------------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> host      <span class=\"operator\">|</span> <span class=\"keyword\">user</span>          <span class=\"operator\">|</span> authentication_string                     <span class=\"operator\">|</span> plugin                <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+---------------+-------------------------------------------+-----------------------+</span></span><br><span class=\"line\"><span class=\"operator\">|</span> <span class=\"operator\">%</span>         <span class=\"operator\">|</span> root          <span class=\"operator\">|</span> <span class=\"operator\">*</span><span class=\"number\">1</span>FB37DBB9243517E6128CA92A0FBE13C066456CF <span class=\"operator\">|</span> mysql_native_password <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> localhost <span class=\"operator\">|</span> mysql.session <span class=\"operator\">|</span> <span class=\"operator\">*</span>THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE <span class=\"operator\">|</span> mysql_native_password <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">|</span> localhost <span class=\"operator\">|</span> mysql.sys     <span class=\"operator\">|</span> <span class=\"operator\">*</span>THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE <span class=\"operator\">|</span> mysql_native_password <span class=\"operator\">|</span></span><br><span class=\"line\"><span class=\"operator\">+</span><span class=\"comment\">-----------+---------------+-------------------------------------------+-----------------------+</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql<span class=\"operator\">&gt;</span> FLUSH privileges;</span><br><span class=\"line\">Query OK, <span class=\"number\">0</span> <span class=\"keyword\">rows</span> affected (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-双主配置\">4. 双主配置</h2>\n<p>两台主机均需如下操作：</p>\n<ul>\n<li>查询master_log_file和Position位置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# mysql -uroot -p</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show master status;</span></span><br><span class=\"line\">+------------------+----------+--------------+-------------------------------------------+-------------------+</span><br><span class=\"line\">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB                          | Executed_Gtid_Set |</span><br><span class=\"line\">+------------------+----------+--------------+-------------------------------------------+-------------------+</span><br><span class=\"line\">| mysql-bin.000001 |      868 |              | performance_schema,information_schema,sys |                   |</span><br><span class=\"line\">+------------------+----------+--------------+-------------------------------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>修改配置文件</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/my.cnf</span><br><span class=\"line\"></span><br><span class=\"line\">log_bin=mysql-bin</span><br><span class=\"line\">server-id=73</span><br><span class=\"line\">sync-binlog=1</span><br><span class=\"line\">binlog-ignore-db=performance_schema</span><br><span class=\"line\">binlog-ignore-db=information_schema</span><br><span class=\"line\">binlog-ignore-db=sys</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">relay_log=mysql-relay-bin</span><br><span class=\"line\">log_slave_updates=1</span><br><span class=\"line\"></span><br><span class=\"line\">auto_increment_offset=1</span><br><span class=\"line\">auto_increment_increment=2</span><br></pre></td></tr></table></figure>\n<ul>\n<li>授权</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">grant replication slave on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;dahouzi&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">grant all privileges on *.* to <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;%&#x27;</span> identified by <span class=\"string\">&#x27;dahouzi&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">flush privileges;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>主从关系（<code>此步两台主机有所不同</code>）</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#192.168.10.72主机执行</span><br><span class=\"line\">change master to master_host=&#x27;192.168.10.71&#x27;,master_port=3306,master_user=&#x27;root&#x27;,master_password=&#x27;dahouzi&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=2438;</span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.10.71主机执行</span><br><span class=\"line\">change master to master_host=&#x27;192.168.10.72&#x27;,master_port=3306,master_user=&#x27;root&#x27;,master_password=&#x27;***&#x27;,master_log_file=&#x27;mysql-bin.000001&#x27;,master_log_pos=868;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认主从关系<br>\nSlave_IO_Running: Yes和Slave_SQL_Running: Yes</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">start slave;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">show slave status \\G;</span></span><br><span class=\"line\">*************************** 1. row ***************************</span><br><span class=\"line\">               Slave_IO_State: Waiting for master to send event</span><br><span class=\"line\">                  Master_Host: 192.168.10.72</span><br><span class=\"line\">                  Master_User: root</span><br><span class=\"line\">                  Master_Port: 3306</span><br><span class=\"line\">                Connect_Retry: 60</span><br><span class=\"line\">              Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">          Read_Master_Log_Pos: 868</span><br><span class=\"line\">               Relay_Log_File: mysql-relay-bin.000002</span><br><span class=\"line\">                Relay_Log_Pos: 320</span><br><span class=\"line\">        Relay_Master_Log_File: mysql-bin.000001</span><br><span class=\"line\">             Slave_IO_Running: Yes</span><br><span class=\"line\">            Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-MHA高可用\">5. MHA高可用</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">ssh-copy-id node71</span><br><span class=\"line\">ssh-copy-id node72</span><br><span class=\"line\">ssh-copy-id node73</span><br></pre></td></tr></table></figure>\n<p>keepalive<br>\n/etc/keepalived/keepalived.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id master71</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface ens33</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.77</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.10.77 3306 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    net_mask 255.255.255.0</span><br><span class=\"line\">    persistence_timeout 50</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.10.71 3306 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        notify_down /etc/keepalived/closekeepalived.sh</span><br><span class=\"line\">        TCP_CHECK &#123;               # 健康检查</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 3306     # 设置连接端口3306</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>关闭keepalived</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/keepalived/closekeepalived.sh</span><br><span class=\"line\"></span><br><span class=\"line\">#closekeepalived.sh内容</span><br><span class=\"line\">sudo -S killall keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">chmod +x /etc/keepalived/closekeepalived.sh</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-测试\">6. 测试</h2>\n<p>原理：keepalived监控自己节点的mysql是否正常，如果检测mysql已关闭，则关闭自己告诉对方接管虚拟IP。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 mha]# service keepalived restart</span><br><span class=\"line\">Redirecting to /bin/systemctl restart keepalived.service</span><br><span class=\"line\">[root@node71 mha]# ps -ef | grep keepalived</span><br><span class=\"line\">root      27246      1  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class=\"line\">root      27247  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class=\"line\">root      27248  27246  0 00:04 ?        00:00:00 /usr/sbin/keepalived -D</span><br><span class=\"line\">root      27255  23305  0 00:04 pts/0    00:00:00 grep --color=auto keepalived</span><br><span class=\"line\">[root@node71 mha]# ip a</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1/128 scope host</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: ens32: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:0c:29:fd:2c:2f brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.10.71/24 brd 192.168.10.255 scope global noprefixroute ens32</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet 192.168.10.77/32 scope global ens32</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 fe80::9c86:aaa1:7ab7:4315/64 scope link noprefixroute</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span><br><span class=\"line\">    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">4: virbr0-nic: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc pfifo_fast master virbr0 state DOWN group default qlen 1000</span><br><span class=\"line\">    link/ether 52:54:00:6b:1e:21 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"7-维护操作\">7. 维护操作</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# systemctl restart mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl status mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl stop mysqld</span><br><span class=\"line\">[root@node71 ~]# systemctl restart keepalived.service</span><br><span class=\"line\">[root@node71 ~]# systemctl stop keepalived.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-日常运维（主机重启）\">8. 日常运维（主机重启）</h2>\n<ol>\n<li>因数据库不常重启，主机重启后的操作，需校对数据库一致性</li>\n<li>每隔24小时，也需校对一次关键数据在主从服务器一致性，在资源消耗低谷时做</li>\n</ol>\n"},{"_content":"\n\n\n\n简版\n\n```\n#安装docker\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\nyum install docker-ce docker-ce-cli containerd.io\n\nsystemctl start docker\n\nsystemctl enable docker\n\n#安装docker-compose\ncurl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\n\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\nsudo chmod +x /usr/local/bin/docker-compose\n\ndocker-compose --version\n\n```\n\n\n\n\n\n完全版\n\n```\n[root@node71 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\ngrabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo\nrepo saved to /etc/yum.repos.d/docker-ce.repo\n[root@node71 ~]# yum install docker-ce docker-ce-cli containerd.io\nLoaded plugins: fastestmirror, langpacks\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyun.com\n * epel: mirrors.bfsu.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.aliyun.com\ndocker-ce-stable                                                                                                                                                                       | 3.5 kB  00:00:00\nPackage 3:docker-ce-24.0.2-1.el7.x86_64 already installed and latest version\nPackage 1:docker-ce-cli-24.0.2-1.el7.x86_64 already installed and latest version\nPackage containerd.io-1.6.21-3.1.el7.x86_64 already installed and latest version\nNothing to do\n[root@node71 ~]# systemctl start docker\n[root@node71 ~]# systemctl enabled docker\nUnknown operation 'enabled'.\n[root@node71 ~]# systemctl enable docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n[root@node71 ~]# curl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100 52.0M  100 52.0M    0     0  1012k      0  0:00:52  0:00:52 --:--:-- 2080k\n[root@node71 ~]# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n[root@node71 ~]# docker-compose --version\n-bash: /usr/local/bin/docker-compose: Permission denied\n[root@node71 ~]# sudo chmod +x /usr/local/bin/docker-compose\n[root@node71 ~]# docker-compose --version\nDocker Compose version v2.18.1\n\n```\n\n- 参考链接：https://blog.csdn.net/ytangdigl/article/details/103831739\n- 官网：https://docs.docker.com/compose/install/standalone/","source":"_posts/07中间件/5.3.Docker-compose环境部署.md","raw":"\n\n\n\n简版\n\n```\n#安装docker\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\nyum install docker-ce docker-ce-cli containerd.io\n\nsystemctl start docker\n\nsystemctl enable docker\n\n#安装docker-compose\ncurl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\n\nsudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n\nsudo chmod +x /usr/local/bin/docker-compose\n\ndocker-compose --version\n\n```\n\n\n\n\n\n完全版\n\n```\n[root@node71 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\nLoaded plugins: fastestmirror, langpacks\nadding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\ngrabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo\nrepo saved to /etc/yum.repos.d/docker-ce.repo\n[root@node71 ~]# yum install docker-ce docker-ce-cli containerd.io\nLoaded plugins: fastestmirror, langpacks\nLoading mirror speeds from cached hostfile\n * base: mirrors.aliyun.com\n * epel: mirrors.bfsu.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.aliyun.com\ndocker-ce-stable                                                                                                                                                                       | 3.5 kB  00:00:00\nPackage 3:docker-ce-24.0.2-1.el7.x86_64 already installed and latest version\nPackage 1:docker-ce-cli-24.0.2-1.el7.x86_64 already installed and latest version\nPackage containerd.io-1.6.21-3.1.el7.x86_64 already installed and latest version\nNothing to do\n[root@node71 ~]# systemctl start docker\n[root@node71 ~]# systemctl enabled docker\nUnknown operation 'enabled'.\n[root@node71 ~]# systemctl enable docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n[root@node71 ~]# curl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100 52.0M  100 52.0M    0     0  1012k      0  0:00:52  0:00:52 --:--:-- 2080k\n[root@node71 ~]# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n[root@node71 ~]# docker-compose --version\n-bash: /usr/local/bin/docker-compose: Permission denied\n[root@node71 ~]# sudo chmod +x /usr/local/bin/docker-compose\n[root@node71 ~]# docker-compose --version\nDocker Compose version v2.18.1\n\n```\n\n- 参考链接：https://blog.csdn.net/ytangdigl/article/details/103831739\n- 官网：https://docs.docker.com/compose/install/standalone/","slug":"07中间件/5.3.Docker-compose环境部署","published":1,"date":"2023-09-01T13:06:37.590Z","updated":"2023-06-05T02:25:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0y000ozb8ad9xld01d","content":"<p>简版</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装docker</span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"></span><br><span class=\"line\">yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable docker</span><br><span class=\"line\"></span><br><span class=\"line\">#安装docker-compose</span><br><span class=\"line\">curl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>完全版</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\">Loaded plugins: fastestmirror, langpacks</span><br><span class=\"line\">adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\">grabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class=\"line\">repo saved to /etc/yum.repos.d/docker-ce.repo</span><br><span class=\"line\">[root@node71 ~]# yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">Loaded plugins: fastestmirror, langpacks</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.aliyun.com</span><br><span class=\"line\"> * epel: mirrors.bfsu.edu.cn</span><br><span class=\"line\"> * extras: mirrors.aliyun.com</span><br><span class=\"line\"> * updates: mirrors.aliyun.com</span><br><span class=\"line\">docker-ce-stable                                                                                                                                                                       | 3.5 kB  00:00:00</span><br><span class=\"line\">Package 3:docker-ce-24.0.2-1.el7.x86_64 already installed and latest version</span><br><span class=\"line\">Package 1:docker-ce-cli-24.0.2-1.el7.x86_64 already installed and latest version</span><br><span class=\"line\">Package containerd.io-1.6.21-3.1.el7.x86_64 already installed and latest version</span><br><span class=\"line\">Nothing to do</span><br><span class=\"line\">[root@node71 ~]# systemctl start docker</span><br><span class=\"line\">[root@node71 ~]# systemctl enabled docker</span><br><span class=\"line\">Unknown operation &#x27;enabled&#x27;.</span><br><span class=\"line\">[root@node71 ~]# systemctl enable docker</span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class=\"line\">[root@node71 ~]# curl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class=\"line\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class=\"line\">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class=\"line\">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class=\"line\">100 52.0M  100 52.0M    0     0  1012k      0  0:00:52  0:00:52 --:--:-- 2080k</span><br><span class=\"line\">[root@node71 ~]# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\">[root@node71 ~]# docker-compose --version</span><br><span class=\"line\">-bash: /usr/local/bin/docker-compose: Permission denied</span><br><span class=\"line\">[root@node71 ~]# sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\">[root@node71 ~]# docker-compose --version</span><br><span class=\"line\">Docker Compose version v2.18.1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考链接：<a href=\"https://blog.csdn.net/ytangdigl/article/details/103831739\">https://blog.csdn.net/ytangdigl/article/details/103831739</a></li>\n<li>官网：<a href=\"https://docs.docker.com/compose/install/standalone/\">https://docs.docker.com/compose/install/standalone/</a></li>\n</ul>\n","excerpt":"","more":"<p>简版</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#安装docker</span><br><span class=\"line\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\"></span><br><span class=\"line\">yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start docker</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable docker</span><br><span class=\"line\"></span><br><span class=\"line\">#安装docker-compose</span><br><span class=\"line\">curl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>完全版</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\">Loaded plugins: fastestmirror, langpacks</span><br><span class=\"line\">adding repo from: http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class=\"line\">grabbing file http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo to /etc/yum.repos.d/docker-ce.repo</span><br><span class=\"line\">repo saved to /etc/yum.repos.d/docker-ce.repo</span><br><span class=\"line\">[root@node71 ~]# yum install docker-ce docker-ce-cli containerd.io</span><br><span class=\"line\">Loaded plugins: fastestmirror, langpacks</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.aliyun.com</span><br><span class=\"line\"> * epel: mirrors.bfsu.edu.cn</span><br><span class=\"line\"> * extras: mirrors.aliyun.com</span><br><span class=\"line\"> * updates: mirrors.aliyun.com</span><br><span class=\"line\">docker-ce-stable                                                                                                                                                                       | 3.5 kB  00:00:00</span><br><span class=\"line\">Package 3:docker-ce-24.0.2-1.el7.x86_64 already installed and latest version</span><br><span class=\"line\">Package 1:docker-ce-cli-24.0.2-1.el7.x86_64 already installed and latest version</span><br><span class=\"line\">Package containerd.io-1.6.21-3.1.el7.x86_64 already installed and latest version</span><br><span class=\"line\">Nothing to do</span><br><span class=\"line\">[root@node71 ~]# systemctl start docker</span><br><span class=\"line\">[root@node71 ~]# systemctl enabled docker</span><br><span class=\"line\">Unknown operation &#x27;enabled&#x27;.</span><br><span class=\"line\">[root@node71 ~]# systemctl enable docker</span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br><span class=\"line\">[root@node71 ~]# curl -SL https://github.com/docker/compose/releases/download/v2.18.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose</span><br><span class=\"line\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class=\"line\">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class=\"line\">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class=\"line\">100 52.0M  100 52.0M    0     0  1012k      0  0:00:52  0:00:52 --:--:-- 2080k</span><br><span class=\"line\">[root@node71 ~]# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span><br><span class=\"line\">[root@node71 ~]# docker-compose --version</span><br><span class=\"line\">-bash: /usr/local/bin/docker-compose: Permission denied</span><br><span class=\"line\">[root@node71 ~]# sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\">[root@node71 ~]# docker-compose --version</span><br><span class=\"line\">Docker Compose version v2.18.1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>参考链接：<a href=\"https://blog.csdn.net/ytangdigl/article/details/103831739\">https://blog.csdn.net/ytangdigl/article/details/103831739</a></li>\n<li>官网：<a href=\"https://docs.docker.com/compose/install/standalone/\">https://docs.docker.com/compose/install/standalone/</a></li>\n</ul>\n"},{"_content":"## 系统初始化\n\n### 修改国内源\n\n####  阿里云\n\n1. yum配置文件路径 `/etc/yum.repos.d/centos.repo`\n\n2. 备份源配置 `mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup`\n3. 阿里源配置\n4. 更新缓存 `yum makecache && yum update`\n\n```shell\n# CentOS-Base.repo\n[base]\nname=CentOS-$releasever - Base - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n \n[PowerTools]\nname=CentOS-$releasever - PowerTools - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n[AppStream]\nname=CentOS-$releasever - AppStream - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n```\n\n### 主机命名\n\nidszt-node001，首位数字定义机房。\n\n\n\n### 收集主机信息\n\n```\necho \"--------------防火墙---------------------\">>info.txt\nfirewall-cmd --state >>info.txt\necho \"--------------网卡---------------------\">>info.txt\nifconfig -a >>info.txt\necho \"---------------运行中的程序--------------------\">>info.txt\nsystemctl list-units -t service --state=running >>info.txt\necho \"---------------磁盘情况--------------------\" >>info.txt \ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*' >>info.txt\necho \"---------------内存情况--------------------\">>info.txt\nfree -h >>info.txt\necho \"---------------处理器情况--------------------\">>info.txt\ncat /proc/cpuinfo >>info.txt\necho \"---------------硬盘--------------------\">>info.txt\nfdisk -l >>info.txt\necho \"---------------结束--------------------\">>info.txt\n```\n\n\n\n### 确认系统版本\n\n```\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n\n### 磁盘分区\n因服务主要以docker运行为主，建立最大磁盘挂载`/data`。所有数据均存于data目录。\n```shell\n[root@localhost ~]# lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\n├─sda1   8:1    0  300M  0 part /boot\n└─sda2   8:2    0  5.9G  0 part [SWAP]\nsdb      8:16   0   40G  0 disk\n└─sdb1   8:17   0   40G  0 part /\nsr0     11:0    1 61.2M  0 rom\nsr1     11:1    1  4.4G  0 rom\n```\n\n### 配置防火墙\n```shell\nsystemctl disable firewalld.service\nsystemctl status firewalld.service\nsystemctl stop firewalld.service\nsystemctl enable firewalld.service\nsystemctl start firewalld.service\n```\n\n### 关闭交换分区\n```shell\n[root@ansible ~]# swapoff -a\n[root@ansible ~]# free -m\n               total        used        free      shared  buff/cache   available\nMem:            3631        3475         155          41         270         155\nSwap:              0           0           0\n```\n\n### 添加管理员\n```shell\nadduser idszt\npasswd idszt\n\nsudo vim /etc/sudoers\n# 添加以下两行\nidszt\tALL=(ALL) \tNOPASSWD:ALL\n%idszt\tALL=(ALL) \tNOPASSWD:ALL\n\n\n```\n\n\n\nyum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software\n\n","source":"_posts/07中间件/9.2.系统安装初始化 - 副本.md","raw":"## 系统初始化\n\n### 修改国内源\n\n####  阿里云\n\n1. yum配置文件路径 `/etc/yum.repos.d/centos.repo`\n\n2. 备份源配置 `mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup`\n3. 阿里源配置\n4. 更新缓存 `yum makecache && yum update`\n\n```shell\n# CentOS-Base.repo\n[base]\nname=CentOS-$releasever - Base - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n \n[PowerTools]\nname=CentOS-$releasever - PowerTools - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n[AppStream]\nname=CentOS-$releasever - AppStream - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n```\n\n### 主机命名\n\nidszt-node001，首位数字定义机房。\n\n\n\n### 收集主机信息\n\n```\necho \"--------------防火墙---------------------\">>info.txt\nfirewall-cmd --state >>info.txt\necho \"--------------网卡---------------------\">>info.txt\nifconfig -a >>info.txt\necho \"---------------运行中的程序--------------------\">>info.txt\nsystemctl list-units -t service --state=running >>info.txt\necho \"---------------磁盘情况--------------------\" >>info.txt \ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*' >>info.txt\necho \"---------------内存情况--------------------\">>info.txt\nfree -h >>info.txt\necho \"---------------处理器情况--------------------\">>info.txt\ncat /proc/cpuinfo >>info.txt\necho \"---------------硬盘--------------------\">>info.txt\nfdisk -l >>info.txt\necho \"---------------结束--------------------\">>info.txt\n```\n\n\n\n### 确认系统版本\n\n```\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n\n### 磁盘分区\n因服务主要以docker运行为主，建立最大磁盘挂载`/data`。所有数据均存于data目录。\n```shell\n[root@localhost ~]# lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\n├─sda1   8:1    0  300M  0 part /boot\n└─sda2   8:2    0  5.9G  0 part [SWAP]\nsdb      8:16   0   40G  0 disk\n└─sdb1   8:17   0   40G  0 part /\nsr0     11:0    1 61.2M  0 rom\nsr1     11:1    1  4.4G  0 rom\n```\n\n### 配置防火墙\n```shell\nsystemctl disable firewalld.service\nsystemctl status firewalld.service\nsystemctl stop firewalld.service\nsystemctl enable firewalld.service\nsystemctl start firewalld.service\n```\n\n### 关闭交换分区\n```shell\n[root@ansible ~]# swapoff -a\n[root@ansible ~]# free -m\n               total        used        free      shared  buff/cache   available\nMem:            3631        3475         155          41         270         155\nSwap:              0           0           0\n```\n\n### 添加管理员\n```shell\nadduser idszt\npasswd idszt\n\nsudo vim /etc/sudoers\n# 添加以下两行\nidszt\tALL=(ALL) \tNOPASSWD:ALL\n%idszt\tALL=(ALL) \tNOPASSWD:ALL\n\n\n```\n\n\n\nyum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software\n\n","slug":"07中间件/9.2.系统安装初始化 - 副本","published":1,"date":"2023-09-01T13:06:37.610Z","updated":"2023-08-25T11:11:06.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0z000pzb8aeowz1axl","content":"<h2 id=\"系统初始化\">系统初始化</h2>\n<h3 id=\"修改国内源\">修改国内源</h3>\n<h4 id=\"阿里云\">阿里云</h4>\n<ol>\n<li>\n<p>yum配置文件路径 <code>/etc/yum.repos.d/centos.repo</code></p>\n</li>\n<li>\n<p>备份源配置 <code>mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup</code></p>\n</li>\n<li>\n<p>阿里源配置</p>\n</li>\n<li>\n<p>更新缓存 <code>yum makecache &amp;&amp; yum update</code></p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CentOS-Base.repo</span></span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">additional packages that extend functionality of existing packages</span></span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"> </span><br><span class=\"line\">[PowerTools]</span><br><span class=\"line\">name=CentOS-$releasever - PowerTools - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"></span><br><span class=\"line\">[AppStream]</span><br><span class=\"line\">name=CentOS-$releasever - AppStream - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br></pre></td></tr></table></figure>\n<h3 id=\"主机命名\">主机命名</h3>\n<p>idszt-node001，首位数字定义机房。</p>\n<h3 id=\"收集主机信息\">收集主机信息</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;--------------防火墙---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">firewall-cmd --state &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;--------------网卡---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">ifconfig -a &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------运行中的程序--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">systemctl list-units -t service --state=running &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------磁盘情况--------------------&quot; &gt;&gt;info.txt </span><br><span class=\"line\">df -Th | grep &#x27;Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*&#x27; &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------内存情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">free -h &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------处理器情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">cat /proc/cpuinfo &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------硬盘--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">fdisk -l &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------结束--------------------&quot;&gt;&gt;info.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"确认系统版本\">确认系统版本</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n<h3 id=\"磁盘分区\">磁盘分区</h3>\n<p>因服务主要以docker运行为主，建立最大磁盘挂载<code>/data</code>。所有数据均存于data目录。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# lsblk</span><br><span class=\"line\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda      8:0    0   20G  0 disk</span><br><span class=\"line\">├─sda1   8:1    0  300M  0 part /boot</span><br><span class=\"line\">└─sda2   8:2    0  5.9G  0 part [SWAP]</span><br><span class=\"line\">sdb      8:16   0   40G  0 disk</span><br><span class=\"line\">└─sdb1   8:17   0   40G  0 part /</span><br><span class=\"line\">sr0     11:0    1 61.2M  0 rom</span><br><span class=\"line\">sr1     11:1    1  4.4G  0 rom</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl enable firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭交换分区\">关闭交换分区</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ansible ~]# swapoff -a</span><br><span class=\"line\">[root@ansible ~]# free -m</span><br><span class=\"line\">               total        used        free      shared  buff/cache   available</span><br><span class=\"line\">Mem:            3631        3475         155          41         270         155</span><br><span class=\"line\">Swap:              0           0           0</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加管理员\">添加管理员</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser idszt</span><br><span class=\"line\">passwd idszt</span><br><span class=\"line\"></span><br><span class=\"line\">sudo vim /etc/sudoers</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加以下两行</span></span><br><span class=\"line\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span><br><span class=\"line\"><span class=\"meta prompt_\">%</span><span class=\"language-bash\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>yum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software</p>\n","excerpt":"","more":"<h2 id=\"系统初始化\">系统初始化</h2>\n<h3 id=\"修改国内源\">修改国内源</h3>\n<h4 id=\"阿里云\">阿里云</h4>\n<ol>\n<li>\n<p>yum配置文件路径 <code>/etc/yum.repos.d/centos.repo</code></p>\n</li>\n<li>\n<p>备份源配置 <code>mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup</code></p>\n</li>\n<li>\n<p>阿里源配置</p>\n</li>\n<li>\n<p>更新缓存 <code>yum makecache &amp;&amp; yum update</code></p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CentOS-Base.repo</span></span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">additional packages that extend functionality of existing packages</span></span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"> </span><br><span class=\"line\">[PowerTools]</span><br><span class=\"line\">name=CentOS-$releasever - PowerTools - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"></span><br><span class=\"line\">[AppStream]</span><br><span class=\"line\">name=CentOS-$releasever - AppStream - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br></pre></td></tr></table></figure>\n<h3 id=\"主机命名\">主机命名</h3>\n<p>idszt-node001，首位数字定义机房。</p>\n<h3 id=\"收集主机信息\">收集主机信息</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;--------------防火墙---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">firewall-cmd --state &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;--------------网卡---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">ifconfig -a &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------运行中的程序--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">systemctl list-units -t service --state=running &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------磁盘情况--------------------&quot; &gt;&gt;info.txt </span><br><span class=\"line\">df -Th | grep &#x27;Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*&#x27; &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------内存情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">free -h &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------处理器情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">cat /proc/cpuinfo &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------硬盘--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">fdisk -l &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------结束--------------------&quot;&gt;&gt;info.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"确认系统版本\">确认系统版本</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n<h3 id=\"磁盘分区\">磁盘分区</h3>\n<p>因服务主要以docker运行为主，建立最大磁盘挂载<code>/data</code>。所有数据均存于data目录。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# lsblk</span><br><span class=\"line\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda      8:0    0   20G  0 disk</span><br><span class=\"line\">├─sda1   8:1    0  300M  0 part /boot</span><br><span class=\"line\">└─sda2   8:2    0  5.9G  0 part [SWAP]</span><br><span class=\"line\">sdb      8:16   0   40G  0 disk</span><br><span class=\"line\">└─sdb1   8:17   0   40G  0 part /</span><br><span class=\"line\">sr0     11:0    1 61.2M  0 rom</span><br><span class=\"line\">sr1     11:1    1  4.4G  0 rom</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl enable firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭交换分区\">关闭交换分区</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ansible ~]# swapoff -a</span><br><span class=\"line\">[root@ansible ~]# free -m</span><br><span class=\"line\">               total        used        free      shared  buff/cache   available</span><br><span class=\"line\">Mem:            3631        3475         155          41         270         155</span><br><span class=\"line\">Swap:              0           0           0</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加管理员\">添加管理员</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser idszt</span><br><span class=\"line\">passwd idszt</span><br><span class=\"line\"></span><br><span class=\"line\">sudo vim /etc/sudoers</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加以下两行</span></span><br><span class=\"line\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span><br><span class=\"line\"><span class=\"meta prompt_\">%</span><span class=\"language-bash\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>yum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software</p>\n"},{"_content":"## 系统初始化\n\n### 修改国内源\n\n####  阿里云\n\n1. yum配置文件路径 `/etc/yum.repos.d/centos.repo`\n\n2. 备份源配置 `mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup`\n3. 阿里源配置\n4. 更新缓存 `yum makecache && yum update`\n\n```shell\n# CentOS-Base.repo\n[base]\nname=CentOS-$releasever - Base - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n \n[PowerTools]\nname=CentOS-$releasever - PowerTools - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n[AppStream]\nname=CentOS-$releasever - AppStream - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n```\n\n### 主机命名\n\nidszt-node001，首位数字定义机房。\n\n\n\n### 收集主机信息\n\n```\necho \"--------------防火墙---------------------\">>info.txt\nfirewall-cmd --state >>info.txt\necho \"--------------网卡---------------------\">>info.txt\nifconfig -a >>info.txt\necho \"---------------运行中的程序--------------------\">>info.txt\nsystemctl list-units -t service --state=running >>info.txt\necho \"---------------磁盘情况--------------------\" >>info.txt \ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*' >>info.txt\necho \"---------------内存情况--------------------\">>info.txt\nfree -h >>info.txt\necho \"---------------处理器情况--------------------\">>info.txt\ncat /proc/cpuinfo >>info.txt\necho \"---------------硬盘--------------------\">>info.txt\nfdisk -l >>info.txt\necho \"---------------结束--------------------\">>info.txt\n```\n\n\n\n### 确认系统版本\n\n```\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n\n### 磁盘分区\n因服务主要以docker运行为主，建立最大磁盘挂载`/data`。所有数据均存于data目录。\n```shell\n[root@localhost ~]# lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\n├─sda1   8:1    0  300M  0 part /boot\n└─sda2   8:2    0  5.9G  0 part [SWAP]\nsdb      8:16   0   40G  0 disk\n└─sdb1   8:17   0   40G  0 part /\nsr0     11:0    1 61.2M  0 rom\nsr1     11:1    1  4.4G  0 rom\n```\n\n### 配置防火墙\n```shell\nsystemctl disable firewalld.service\nsystemctl status firewalld.service\nsystemctl stop firewalld.service\nsystemctl enable firewalld.service\nsystemctl start firewalld.service\n```\n\n### 关闭交换分区\n```shell\n[root@ansible ~]# swapoff -a\n[root@ansible ~]# free -m\n               total        used        free      shared  buff/cache   available\nMem:            3631        3475         155          41         270         155\nSwap:              0           0           0\n```\n\n### 添加管理员\n```shell\nadduser idszt\npasswd idszt\n\nsudo vim /etc/sudoers\n# 添加以下两行\nidszt\tALL=(ALL) \tNOPASSWD:ALL\n%idszt\tALL=(ALL) \tNOPASSWD:ALL\n\n\n```\n\n\n\nyum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software\n\nyum localinstall *.rpm -y","source":"_posts/07中间件/9.2.系统安装初始化.md","raw":"## 系统初始化\n\n### 修改国内源\n\n####  阿里云\n\n1. yum配置文件路径 `/etc/yum.repos.d/centos.repo`\n\n2. 备份源配置 `mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup`\n3. 阿里源配置\n4. 更新缓存 `yum makecache && yum update`\n\n```shell\n# CentOS-Base.repo\n[base]\nname=CentOS-$releasever - Base - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n#additional packages that extend functionality of existing packages\n[centosplus]\nname=CentOS-$releasever - Plus - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n \n[PowerTools]\nname=CentOS-$releasever - PowerTools - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/\ngpgcheck=1\nenabled=0\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n\n[AppStream]\nname=CentOS-$releasever - AppStream - mirrors.aliyun.com\n#failovermethod=priority\nbaseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\n        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/\ngpgcheck=1\ngpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official\n```\n\n### 主机命名\n\nidszt-node001，首位数字定义机房。\n\n\n\n### 收集主机信息\n\n```\necho \"--------------防火墙---------------------\">>info.txt\nfirewall-cmd --state >>info.txt\necho \"--------------网卡---------------------\">>info.txt\nifconfig -a >>info.txt\necho \"---------------运行中的程序--------------------\">>info.txt\nsystemctl list-units -t service --state=running >>info.txt\necho \"---------------磁盘情况--------------------\" >>info.txt \ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*' >>info.txt\necho \"---------------内存情况--------------------\">>info.txt\nfree -h >>info.txt\necho \"---------------处理器情况--------------------\">>info.txt\ncat /proc/cpuinfo >>info.txt\necho \"---------------硬盘--------------------\">>info.txt\nfdisk -l >>info.txt\necho \"---------------结束--------------------\">>info.txt\n```\n\n\n\n### 确认系统版本\n\n```\n  [root@node71 ~]# cat /etc/redhat-release\n  CentOS Linux release 7.9.2009 (Core)\n```\n\n\n### 磁盘分区\n因服务主要以docker运行为主，建立最大磁盘挂载`/data`。所有数据均存于data目录。\n```shell\n[root@localhost ~]# lsblk\nNAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda      8:0    0   20G  0 disk\n├─sda1   8:1    0  300M  0 part /boot\n└─sda2   8:2    0  5.9G  0 part [SWAP]\nsdb      8:16   0   40G  0 disk\n└─sdb1   8:17   0   40G  0 part /\nsr0     11:0    1 61.2M  0 rom\nsr1     11:1    1  4.4G  0 rom\n```\n\n### 配置防火墙\n```shell\nsystemctl disable firewalld.service\nsystemctl status firewalld.service\nsystemctl stop firewalld.service\nsystemctl enable firewalld.service\nsystemctl start firewalld.service\n```\n\n### 关闭交换分区\n```shell\n[root@ansible ~]# swapoff -a\n[root@ansible ~]# free -m\n               total        used        free      shared  buff/cache   available\nMem:            3631        3475         155          41         270         155\nSwap:              0           0           0\n```\n\n### 添加管理员\n```shell\nadduser idszt\npasswd idszt\n\nsudo vim /etc/sudoers\n# 添加以下两行\nidszt\tALL=(ALL) \tNOPASSWD:ALL\n%idszt\tALL=(ALL) \tNOPASSWD:ALL\n\n\n```\n\n\n\nyum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software\n\nyum localinstall *.rpm -y","slug":"07中间件/9.2.系统安装初始化","published":1,"date":"2023-09-01T13:06:37.610Z","updated":"2023-08-31T07:27:42.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o0z000qzb8a2zescoyd","content":"<h2 id=\"系统初始化\">系统初始化</h2>\n<h3 id=\"修改国内源\">修改国内源</h3>\n<h4 id=\"阿里云\">阿里云</h4>\n<ol>\n<li>\n<p>yum配置文件路径 <code>/etc/yum.repos.d/centos.repo</code></p>\n</li>\n<li>\n<p>备份源配置 <code>mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup</code></p>\n</li>\n<li>\n<p>阿里源配置</p>\n</li>\n<li>\n<p>更新缓存 <code>yum makecache &amp;&amp; yum update</code></p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CentOS-Base.repo</span></span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">additional packages that extend functionality of existing packages</span></span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"> </span><br><span class=\"line\">[PowerTools]</span><br><span class=\"line\">name=CentOS-$releasever - PowerTools - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"></span><br><span class=\"line\">[AppStream]</span><br><span class=\"line\">name=CentOS-$releasever - AppStream - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br></pre></td></tr></table></figure>\n<h3 id=\"主机命名\">主机命名</h3>\n<p>idszt-node001，首位数字定义机房。</p>\n<h3 id=\"收集主机信息\">收集主机信息</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;--------------防火墙---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">firewall-cmd --state &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;--------------网卡---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">ifconfig -a &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------运行中的程序--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">systemctl list-units -t service --state=running &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------磁盘情况--------------------&quot; &gt;&gt;info.txt </span><br><span class=\"line\">df -Th | grep &#x27;Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*&#x27; &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------内存情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">free -h &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------处理器情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">cat /proc/cpuinfo &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------硬盘--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">fdisk -l &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------结束--------------------&quot;&gt;&gt;info.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"确认系统版本\">确认系统版本</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n<h3 id=\"磁盘分区\">磁盘分区</h3>\n<p>因服务主要以docker运行为主，建立最大磁盘挂载<code>/data</code>。所有数据均存于data目录。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# lsblk</span><br><span class=\"line\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda      8:0    0   20G  0 disk</span><br><span class=\"line\">├─sda1   8:1    0  300M  0 part /boot</span><br><span class=\"line\">└─sda2   8:2    0  5.9G  0 part [SWAP]</span><br><span class=\"line\">sdb      8:16   0   40G  0 disk</span><br><span class=\"line\">└─sdb1   8:17   0   40G  0 part /</span><br><span class=\"line\">sr0     11:0    1 61.2M  0 rom</span><br><span class=\"line\">sr1     11:1    1  4.4G  0 rom</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl enable firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭交换分区\">关闭交换分区</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ansible ~]# swapoff -a</span><br><span class=\"line\">[root@ansible ~]# free -m</span><br><span class=\"line\">               total        used        free      shared  buff/cache   available</span><br><span class=\"line\">Mem:            3631        3475         155          41         270         155</span><br><span class=\"line\">Swap:              0           0           0</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加管理员\">添加管理员</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser idszt</span><br><span class=\"line\">passwd idszt</span><br><span class=\"line\"></span><br><span class=\"line\">sudo vim /etc/sudoers</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加以下两行</span></span><br><span class=\"line\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span><br><span class=\"line\"><span class=\"meta prompt_\">%</span><span class=\"language-bash\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>yum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software</p>\n<p>yum localinstall *.rpm -y</p>\n","excerpt":"","more":"<h2 id=\"系统初始化\">系统初始化</h2>\n<h3 id=\"修改国内源\">修改国内源</h3>\n<h4 id=\"阿里云\">阿里云</h4>\n<ol>\n<li>\n<p>yum配置文件路径 <code>/etc/yum.repos.d/centos.repo</code></p>\n</li>\n<li>\n<p>备份源配置 <code>mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.backup</code></p>\n</li>\n<li>\n<p>阿里源配置</p>\n</li>\n<li>\n<p>更新缓存 <code>yum makecache &amp;&amp; yum update</code></p>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CentOS-Base.repo</span></span><br><span class=\"line\">[base]</span><br><span class=\"line\">name=CentOS-$releasever - Base - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/BaseOS/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">additional packages that extend functionality of existing packages</span></span><br><span class=\"line\">[centosplus]</span><br><span class=\"line\">name=CentOS-$releasever - Plus - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/centosplus/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"> </span><br><span class=\"line\">[PowerTools]</span><br><span class=\"line\">name=CentOS-$releasever - PowerTools - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/PowerTools/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br><span class=\"line\"></span><br><span class=\"line\">[AppStream]</span><br><span class=\"line\">name=CentOS-$releasever - AppStream - mirrors.aliyun.com</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">failovermethod=priority</span></span><br><span class=\"line\">baseurl=https://mirrors.aliyun.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">        http://mirrors.cloud.aliyuncs.com/centos-stream/$stream/AppStream/$basearch/os/</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://mirrors.aliyun.com/centos-stream/RPM-GPG-KEY-CentOS-Official</span><br></pre></td></tr></table></figure>\n<h3 id=\"主机命名\">主机命名</h3>\n<p>idszt-node001，首位数字定义机房。</p>\n<h3 id=\"收集主机信息\">收集主机信息</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo &quot;--------------防火墙---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">firewall-cmd --state &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;--------------网卡---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">ifconfig -a &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------运行中的程序--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">systemctl list-units -t service --state=running &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------磁盘情况--------------------&quot; &gt;&gt;info.txt </span><br><span class=\"line\">df -Th | grep &#x27;Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*&#x27; &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------内存情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">free -h &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------处理器情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">cat /proc/cpuinfo &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------硬盘--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">fdisk -l &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------结束--------------------&quot;&gt;&gt;info.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"确认系统版本\">确认系统版本</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 ~]# cat /etc/redhat-release</span><br><span class=\"line\">CentOS Linux release 7.9.2009 (Core)</span><br></pre></td></tr></table></figure>\n<h3 id=\"磁盘分区\">磁盘分区</h3>\n<p>因服务主要以docker运行为主，建立最大磁盘挂载<code>/data</code>。所有数据均存于data目录。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# lsblk</span><br><span class=\"line\">NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda      8:0    0   20G  0 disk</span><br><span class=\"line\">├─sda1   8:1    0  300M  0 part /boot</span><br><span class=\"line\">└─sda2   8:2    0  5.9G  0 part [SWAP]</span><br><span class=\"line\">sdb      8:16   0   40G  0 disk</span><br><span class=\"line\">└─sdb1   8:17   0   40G  0 part /</span><br><span class=\"line\">sr0     11:0    1 61.2M  0 rom</span><br><span class=\"line\">sr1     11:1    1  4.4G  0 rom</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl disable firewalld.service</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl enable firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭交换分区\">关闭交换分区</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@ansible ~]# swapoff -a</span><br><span class=\"line\">[root@ansible ~]# free -m</span><br><span class=\"line\">               total        used        free      shared  buff/cache   available</span><br><span class=\"line\">Mem:            3631        3475         155          41         270         155</span><br><span class=\"line\">Swap:              0           0           0</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加管理员\">添加管理员</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser idszt</span><br><span class=\"line\">passwd idszt</span><br><span class=\"line\"></span><br><span class=\"line\">sudo vim /etc/sudoers</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加以下两行</span></span><br><span class=\"line\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span><br><span class=\"line\"><span class=\"meta prompt_\">%</span><span class=\"language-bash\">idszt\tALL=(ALL) \tNOPASSWD:ALL</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>yum install -y openssl-devel openssh --downloadonly --downloaddir=/root/software</p>\n<p>yum localinstall *.rpm -y</p>\n"},{"_content":"\ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*'\nfind / -type f -size +102400k -exec ls -lh {} \\;\nfind /var/lib/docker/overlay2 -type f -size +102400k -exec ls -lh {} \\;\n\n rm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/access_log*\n rm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/*.log\n rm -rf /var/lib/docker/containers/a817fb1993d0442e6642bbba5f14f82d828d38a2b40c5fd23ab2e376e0304cd0/*.log\n\n\n\n rm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged/logs/*\n rm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/diff/logs/*\n\nset global binlog_expire_logs_seconds=86400;\n手动刷新清理过期日志\nflush logs;\n\n\n-----------\nhttps://blog.csdn.net/qq_39399966/article/details/105816374\ndocker system df命令，类似于Linux上的df命令，用于查看Docker的磁盘使用情况：\n\n慎重执行docker system prune -a\n\n\n\n\n\n\n show master status\\G;\n purge master logs to \"binlog.000082\";","source":"_posts/07中间件/9.5.阿里云开发主机维护.md","raw":"\ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*'\nfind / -type f -size +102400k -exec ls -lh {} \\;\nfind /var/lib/docker/overlay2 -type f -size +102400k -exec ls -lh {} \\;\n\n rm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/access_log*\n rm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/*.log\n rm -rf /var/lib/docker/containers/a817fb1993d0442e6642bbba5f14f82d828d38a2b40c5fd23ab2e376e0304cd0/*.log\n\n\n\n rm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged/logs/*\n rm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/diff/logs/*\n\nset global binlog_expire_logs_seconds=86400;\n手动刷新清理过期日志\nflush logs;\n\n\n-----------\nhttps://blog.csdn.net/qq_39399966/article/details/105816374\ndocker system df命令，类似于Linux上的df命令，用于查看Docker的磁盘使用情况：\n\n慎重执行docker system prune -a\n\n\n\n\n\n\n show master status\\G;\n purge master logs to \"binlog.000082\";","slug":"07中间件/9.5.阿里云开发主机维护","published":1,"date":"2023-09-01T13:06:37.620Z","updated":"2023-08-21T01:51:36.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o10000rzb8afui86da5","content":"<p>df -Th | grep ‘Filesystem|^/dev/sd*|^/dev/vd*|^/dev/hd*|^/dev/mapper*|^/dev/md*’<br>\nfind / -type f -size +102400k -exec ls -lh {} ;<br>\nfind /var/lib/docker/overlay2 -type f -size +102400k -exec ls -lh {} ;</p>\n<p>rm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/access_log*<br>\nrm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/<em>.log<br>\nrm -rf /var/lib/docker/containers/a817fb1993d0442e6642bbba5f14f82d828d38a2b40c5fd23ab2e376e0304cd0/</em>.log</p>\n<p>rm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged/logs/*<br>\nrm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/diff/logs/*</p>\n<p>set global binlog_expire_logs_seconds=86400;<br>\n手动刷新清理过期日志<br>\nflush logs;</p>\n<hr>\n<p><a href=\"https://blog.csdn.net/qq_39399966/article/details/105816374\">https://blog.csdn.net/qq_39399966/article/details/105816374</a><br>\ndocker system df命令，类似于Linux上的df命令，用于查看Docker的磁盘使用情况：</p>\n<p>慎重执行docker system prune -a</p>\n<p>show master status\\G;<br>\npurge master logs to “binlog.000082”;</p>\n","excerpt":"","more":"<p>df -Th | grep ‘Filesystem|^/dev/sd*|^/dev/vd*|^/dev/hd*|^/dev/mapper*|^/dev/md*’<br>\nfind / -type f -size +102400k -exec ls -lh {} ;<br>\nfind /var/lib/docker/overlay2 -type f -size +102400k -exec ls -lh {} ;</p>\n<p>rm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/access_log*<br>\nrm -rf /var/lib/docker/overlay2/3133cda8f69afa7a656acccf68400259844b2c825948b2e0b6dc243a7a3c5ba7/merged/logs/<em>.log<br>\nrm -rf /var/lib/docker/containers/a817fb1993d0442e6642bbba5f14f82d828d38a2b40c5fd23ab2e376e0304cd0/</em>.log</p>\n<p>rm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged/logs/*<br>\nrm -rf /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/diff/logs/*</p>\n<p>set global binlog_expire_logs_seconds=86400;<br>\n手动刷新清理过期日志<br>\nflush logs;</p>\n<hr>\n<p><a href=\"https://blog.csdn.net/qq_39399966/article/details/105816374\">https://blog.csdn.net/qq_39399966/article/details/105816374</a><br>\ndocker system df命令，类似于Linux上的df命令，用于查看Docker的磁盘使用情况：</p>\n<p>慎重执行docker system prune -a</p>\n<p>show master status\\G;<br>\npurge master logs to “binlog.000082”;</p>\n"},{"_content":"\n\n\n\n192.168.10.92：kafka-zookeeper-kafkamanager\n\n192.168.10.72：filebeat-\n\n192.168.10.71：kibana-es\n\n安装es(71)\n\n```\n[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/data\n[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/logs\n[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/plugins\n\ndocker run -it \\\n--name dev-es-standalone-01 \\\n--restart=always \\\n-p 9200:9200 \\\n-p 9300:9300 \\\n-e ES_JAVA_OPTS=\"-Xms512m -Xmx1024m\" \\\n-e \"discovery.type=single-node\" \\\ndocker.elastic.co/elasticsearch/elasticsearch:7.15.2\n\n\n\n\n\nhealth status index                           uuid                   pri rep docs.count docs.deleted store.size pri.store.size\ngreen  open   .geoip_databases                IX8SaXizQkC0uHunM2Hwmw   1   0         42            0     39.9mb         39.9mb\ngreen  open   .apm-custom-link                cJm8GijZSZSPoGpRVGBcEg   1   0          0            0       208b           208b\ngreen  open   .apm-agent-configuration        N7VfBedDRDOLf4UU_1fQyQ   1   0          0            0       208b           208b\ngreen  open   .kibana-event-log-7.15.2-000001 4jgSZhEMTiu3kPKvGWAnAQ   1   0          3            0     12.2kb         12.2kb\ngreen  open   .kibana_7.15.2_001              msQTKdTgSLiio_y2hDNeOw   1   0         49            0      4.6mb          4.6mb\ngreen  open   .tasks                          NdEDalLMSQCph51iRfzf9Q   1   0          2            0     13.8kb         13.8kb\ngreen  open   .kibana_task_manager_7.15.2_001 686bNnjLS4-wiHKeKkxjag   1   0         15         6849    895.4kb        895.4kb\n\n\n```\n\n查看所有索引：https://192.168.10.71:9200/_cat/indices?v&pretty\n\n\n\ndocker cp dev-mysql-standalone-01:/etc/my.cnf /root/my.cnf\n\n安装kibana\n\n```\ndocker run -d --name dev-kibana-standalone-01 --net elastic -p 5601:5601 -e \"ELASTICSEARCH_HOSTS=http://192.168.10.73:9200/\" docker.elastic.co/kibana/kibana:7.15.2\n\n```\n\n\n\n\n\nLogstash\n\n[Configuring Logstash for Docker | Logstash Reference [8.8\\] | Elastic](https://www.elastic.co/guide/en/logstash/current/docker-config.html)\n\n```\ndocker pull docker.elastic.co/logstash/logstash:8.2.0\nmkdir -p /root/logstash/{pipeline,config,data}\n\n\nmkdir -p ~/settings\n\ndocker run --rm -it -v ~/settings/:/usr/share/logstash/config/  docker.elastic.co/logstash/logstash:8.8.1\n\n docker run --rm -it -v ~/settings/logstash.conf:/usr/share/logstash/config/logstash.conf -v ~/settings/logstash.yml:/usr/share/logstash/config/logstash.yml  -v ~/settings/pipelines.yml:/usr/share/logstash/config/pipelines.yml docker.elastic.co/logstash/logstash:7.15.2\n \n \n es api key\n \n S05XZ3VJZ0JzZzE5NWo1WGlhNC06dE05OEJMV0NTSjIzVkFNWkw3QXZVUQ==\n```\n\n\n\n\n\nzookeeper(92)\n\n```\ndocker run --name dev-elk-zookeeper-01 --privileged -p 2181:2181  -d zookeeper:3.7.1\n```\n\n\n\n\n\nkafka\n\n- 部署参考官网：[Apache Kafka](https://kafka.apache.org/quickstart)\n\n1、下载`kafka3.4.0`\n\n- Scala 2.13  - [kafka_2.13-3.4.0.tgz](https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz) ([asc](https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.asc), [sha512](https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.sha512))\n\n2、新建`/root/kafka`文件夹，解压安装包\n\n3、编辑server.properties，仅修改以下三行。\n\n```\nbroker.id=1\n\n############################# Socket Server Settings #############################\n\n# The address the socket server listens on. If not configured, the host name will be equal to the value of\n# java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.\n#   FORMAT:\n#     listeners = listener_name://host_name:port\n#   EXAMPLE:\n#     listeners = PLAINTEXT://your.host.name:9092\nlisteners=PLAINTEXT://0.0.0.0:9092\n\n# Listener name, hostname and port the broker will advertise to clients.\n# If not set, it uses the value for \"listeners\".\nadvertised.listeners=PLAINTEXT://192.168.10.92:9092\n```\n\n4、后台启动\n\n```\nnohup /root/kafka/kafka_2.13-3.4.0/bin/kafka-server-start.sh /root/kafka/kafka_2.13-3.4.0/bin/config/server.properties & \n\n\n\n[root@idszt-node92 kafka]# pwd\n/root/kafka\n[root@idszt-node92 kafka]# bin/kafka-server-start.sh config/server.properties\n\n```\n\nkafka manager(91)\n\n```\ndocker run -p 8080:8080 -e KAFKA_BROKERS=192.168.10.92:9092 docker.redpanda.com/redpandadata/console:latest\n```\n\n\n\n\n\n\n\nfilebeat\n\n\n\n```\n#查找大于50M的日志\nfind / -type f -size +50240k -exec ls -lh {} \\;\n\n/opt/infra/apache-zookeeper-3.7.1-bin/logs/version-2/log.200000001\n\n#运行\n./filebeat -e -c filebeat.yml\n```\n\n","source":"_posts/07中间件/9.9.日志采集系统部署.md","raw":"\n\n\n\n192.168.10.92：kafka-zookeeper-kafkamanager\n\n192.168.10.72：filebeat-\n\n192.168.10.71：kibana-es\n\n安装es(71)\n\n```\n[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/data\n[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/logs\n[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/plugins\n\ndocker run -it \\\n--name dev-es-standalone-01 \\\n--restart=always \\\n-p 9200:9200 \\\n-p 9300:9300 \\\n-e ES_JAVA_OPTS=\"-Xms512m -Xmx1024m\" \\\n-e \"discovery.type=single-node\" \\\ndocker.elastic.co/elasticsearch/elasticsearch:7.15.2\n\n\n\n\n\nhealth status index                           uuid                   pri rep docs.count docs.deleted store.size pri.store.size\ngreen  open   .geoip_databases                IX8SaXizQkC0uHunM2Hwmw   1   0         42            0     39.9mb         39.9mb\ngreen  open   .apm-custom-link                cJm8GijZSZSPoGpRVGBcEg   1   0          0            0       208b           208b\ngreen  open   .apm-agent-configuration        N7VfBedDRDOLf4UU_1fQyQ   1   0          0            0       208b           208b\ngreen  open   .kibana-event-log-7.15.2-000001 4jgSZhEMTiu3kPKvGWAnAQ   1   0          3            0     12.2kb         12.2kb\ngreen  open   .kibana_7.15.2_001              msQTKdTgSLiio_y2hDNeOw   1   0         49            0      4.6mb          4.6mb\ngreen  open   .tasks                          NdEDalLMSQCph51iRfzf9Q   1   0          2            0     13.8kb         13.8kb\ngreen  open   .kibana_task_manager_7.15.2_001 686bNnjLS4-wiHKeKkxjag   1   0         15         6849    895.4kb        895.4kb\n\n\n```\n\n查看所有索引：https://192.168.10.71:9200/_cat/indices?v&pretty\n\n\n\ndocker cp dev-mysql-standalone-01:/etc/my.cnf /root/my.cnf\n\n安装kibana\n\n```\ndocker run -d --name dev-kibana-standalone-01 --net elastic -p 5601:5601 -e \"ELASTICSEARCH_HOSTS=http://192.168.10.73:9200/\" docker.elastic.co/kibana/kibana:7.15.2\n\n```\n\n\n\n\n\nLogstash\n\n[Configuring Logstash for Docker | Logstash Reference [8.8\\] | Elastic](https://www.elastic.co/guide/en/logstash/current/docker-config.html)\n\n```\ndocker pull docker.elastic.co/logstash/logstash:8.2.0\nmkdir -p /root/logstash/{pipeline,config,data}\n\n\nmkdir -p ~/settings\n\ndocker run --rm -it -v ~/settings/:/usr/share/logstash/config/  docker.elastic.co/logstash/logstash:8.8.1\n\n docker run --rm -it -v ~/settings/logstash.conf:/usr/share/logstash/config/logstash.conf -v ~/settings/logstash.yml:/usr/share/logstash/config/logstash.yml  -v ~/settings/pipelines.yml:/usr/share/logstash/config/pipelines.yml docker.elastic.co/logstash/logstash:7.15.2\n \n \n es api key\n \n S05XZ3VJZ0JzZzE5NWo1WGlhNC06dE05OEJMV0NTSjIzVkFNWkw3QXZVUQ==\n```\n\n\n\n\n\nzookeeper(92)\n\n```\ndocker run --name dev-elk-zookeeper-01 --privileged -p 2181:2181  -d zookeeper:3.7.1\n```\n\n\n\n\n\nkafka\n\n- 部署参考官网：[Apache Kafka](https://kafka.apache.org/quickstart)\n\n1、下载`kafka3.4.0`\n\n- Scala 2.13  - [kafka_2.13-3.4.0.tgz](https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz) ([asc](https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.asc), [sha512](https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.sha512))\n\n2、新建`/root/kafka`文件夹，解压安装包\n\n3、编辑server.properties，仅修改以下三行。\n\n```\nbroker.id=1\n\n############################# Socket Server Settings #############################\n\n# The address the socket server listens on. If not configured, the host name will be equal to the value of\n# java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.\n#   FORMAT:\n#     listeners = listener_name://host_name:port\n#   EXAMPLE:\n#     listeners = PLAINTEXT://your.host.name:9092\nlisteners=PLAINTEXT://0.0.0.0:9092\n\n# Listener name, hostname and port the broker will advertise to clients.\n# If not set, it uses the value for \"listeners\".\nadvertised.listeners=PLAINTEXT://192.168.10.92:9092\n```\n\n4、后台启动\n\n```\nnohup /root/kafka/kafka_2.13-3.4.0/bin/kafka-server-start.sh /root/kafka/kafka_2.13-3.4.0/bin/config/server.properties & \n\n\n\n[root@idszt-node92 kafka]# pwd\n/root/kafka\n[root@idszt-node92 kafka]# bin/kafka-server-start.sh config/server.properties\n\n```\n\nkafka manager(91)\n\n```\ndocker run -p 8080:8080 -e KAFKA_BROKERS=192.168.10.92:9092 docker.redpanda.com/redpandadata/console:latest\n```\n\n\n\n\n\n\n\nfilebeat\n\n\n\n```\n#查找大于50M的日志\nfind / -type f -size +50240k -exec ls -lh {} \\;\n\n/opt/infra/apache-zookeeper-3.7.1-bin/logs/version-2/log.200000001\n\n#运行\n./filebeat -e -c filebeat.yml\n```\n\n","slug":"07中间件/9.9.日志采集系统部署","published":1,"date":"2023-09-01T13:06:37.620Z","updated":"2023-06-27T13:42:02.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o11000szb8a8evc85wh","content":"<p>192.168.10.92：kafka-zookeeper-kafkamanager</p>\n<p>192.168.10.72：filebeat-</p>\n<p>192.168.10.71：kibana-es</p>\n<p>安装es(71)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/data</span><br><span class=\"line\">[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/logs</span><br><span class=\"line\">[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/plugins</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -it \\</span><br><span class=\"line\">--name dev-es-standalone-01 \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">-p 9200:9200 \\</span><br><span class=\"line\">-p 9300:9300 \\</span><br><span class=\"line\">-e ES_JAVA_OPTS=&quot;-Xms512m -Xmx1024m&quot; \\</span><br><span class=\"line\">-e &quot;discovery.type=single-node&quot; \\</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">health status index                           uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class=\"line\">green  open   .geoip_databases                IX8SaXizQkC0uHunM2Hwmw   1   0         42            0     39.9mb         39.9mb</span><br><span class=\"line\">green  open   .apm-custom-link                cJm8GijZSZSPoGpRVGBcEg   1   0          0            0       208b           208b</span><br><span class=\"line\">green  open   .apm-agent-configuration        N7VfBedDRDOLf4UU_1fQyQ   1   0          0            0       208b           208b</span><br><span class=\"line\">green  open   .kibana-event-log-7.15.2-000001 4jgSZhEMTiu3kPKvGWAnAQ   1   0          3            0     12.2kb         12.2kb</span><br><span class=\"line\">green  open   .kibana_7.15.2_001              msQTKdTgSLiio_y2hDNeOw   1   0         49            0      4.6mb          4.6mb</span><br><span class=\"line\">green  open   .tasks                          NdEDalLMSQCph51iRfzf9Q   1   0          2            0     13.8kb         13.8kb</span><br><span class=\"line\">green  open   .kibana_task_manager_7.15.2_001 686bNnjLS4-wiHKeKkxjag   1   0         15         6849    895.4kb        895.4kb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>查看所有索引：<a href=\"https://192.168.10.71:9200/_cat/indices?v&amp;pretty\">https://192.168.10.71:9200/_cat/indices?v&amp;pretty</a></p>\n<p>docker cp dev-mysql-standalone-01:/etc/my.cnf /root/my.cnf</p>\n<p>安装kibana</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name dev-kibana-standalone-01 --net elastic -p 5601:5601 -e &quot;ELASTICSEARCH_HOSTS=http://192.168.10.73:9200/&quot; docker.elastic.co/kibana/kibana:7.15.2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Logstash</p>\n<p>[Configuring Logstash for Docker | Logstash Reference <a href=\"https://www.elastic.co/guide/en/logstash/current/docker-config.html\">8.8] | Elastic</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull docker.elastic.co/logstash/logstash:8.2.0</span><br><span class=\"line\">mkdir -p /root/logstash/&#123;pipeline,config,data&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p ~/settings</span><br><span class=\"line\"></span><br><span class=\"line\">docker run --rm -it -v ~/settings/:/usr/share/logstash/config/  docker.elastic.co/logstash/logstash:8.8.1</span><br><span class=\"line\"></span><br><span class=\"line\"> docker run --rm -it -v ~/settings/logstash.conf:/usr/share/logstash/config/logstash.conf -v ~/settings/logstash.yml:/usr/share/logstash/config/logstash.yml  -v ~/settings/pipelines.yml:/usr/share/logstash/config/pipelines.yml docker.elastic.co/logstash/logstash:7.15.2</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> es api key</span><br><span class=\"line\"> </span><br><span class=\"line\"> S05XZ3VJZ0JzZzE5NWo1WGlhNC06dE05OEJMV0NTSjIzVkFNWkw3QXZVUQ==</span><br></pre></td></tr></table></figure>\n<p>zookeeper(92)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name dev-elk-zookeeper-01 --privileged -p 2181:2181  -d zookeeper:3.7.1</span><br></pre></td></tr></table></figure>\n<p>kafka</p>\n<ul>\n<li>部署参考官网：<a href=\"https://kafka.apache.org/quickstart\">Apache Kafka</a></li>\n</ul>\n<p>1、下载<code>kafka3.4.0</code></p>\n<ul>\n<li>Scala 2.13  - <a href=\"https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz\">kafka_2.13-3.4.0.tgz</a> (<a href=\"https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.asc\">asc</a>, <a href=\"https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.sha512\">sha512</a>)</li>\n</ul>\n<p>2、新建<code>/root/kafka</code>文件夹，解压安装包</p>\n<p>3、编辑server.properties，仅修改以下三行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">broker.id=1</span><br><span class=\"line\"></span><br><span class=\"line\">############################# Socket Server Settings #############################</span><br><span class=\"line\"></span><br><span class=\"line\"># The address the socket server listens on. If not configured, the host name will be equal to the value of</span><br><span class=\"line\"># java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.</span><br><span class=\"line\">#   FORMAT:</span><br><span class=\"line\">#     listeners = listener_name://host_name:port</span><br><span class=\"line\">#   EXAMPLE:</span><br><span class=\"line\">#     listeners = PLAINTEXT://your.host.name:9092</span><br><span class=\"line\">listeners=PLAINTEXT://0.0.0.0:9092</span><br><span class=\"line\"></span><br><span class=\"line\"># Listener name, hostname and port the broker will advertise to clients.</span><br><span class=\"line\"># If not set, it uses the value for &quot;listeners&quot;.</span><br><span class=\"line\">advertised.listeners=PLAINTEXT://192.168.10.92:9092</span><br></pre></td></tr></table></figure>\n<p>4、后台启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup /root/kafka/kafka_2.13-3.4.0/bin/kafka-server-start.sh /root/kafka/kafka_2.13-3.4.0/bin/config/server.properties &amp; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-node92 kafka]# pwd</span><br><span class=\"line\">/root/kafka</span><br><span class=\"line\">[root@idszt-node92 kafka]# bin/kafka-server-start.sh config/server.properties</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>kafka manager(91)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 8080:8080 -e KAFKA_BROKERS=192.168.10.92:9092 docker.redpanda.com/redpandadata/console:latest</span><br></pre></td></tr></table></figure>\n<p>filebeat</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查找大于50M的日志</span><br><span class=\"line\">find / -type f -size +50240k -exec ls -lh &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/logs/version-2/log.200000001</span><br><span class=\"line\"></span><br><span class=\"line\">#运行</span><br><span class=\"line\">./filebeat -e -c filebeat.yml</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>192.168.10.92：kafka-zookeeper-kafkamanager</p>\n<p>192.168.10.72：filebeat-</p>\n<p>192.168.10.71：kibana-es</p>\n<p>安装es(71)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/data</span><br><span class=\"line\">[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/logs</span><br><span class=\"line\">[root@node73 ~]# mkdir -p /usr/local/docker_data/elasticsearch/plugins</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -it \\</span><br><span class=\"line\">--name dev-es-standalone-01 \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">-p 9200:9200 \\</span><br><span class=\"line\">-p 9300:9300 \\</span><br><span class=\"line\">-e ES_JAVA_OPTS=&quot;-Xms512m -Xmx1024m&quot; \\</span><br><span class=\"line\">-e &quot;discovery.type=single-node&quot; \\</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">health status index                           uuid                   pri rep docs.count docs.deleted store.size pri.store.size</span><br><span class=\"line\">green  open   .geoip_databases                IX8SaXizQkC0uHunM2Hwmw   1   0         42            0     39.9mb         39.9mb</span><br><span class=\"line\">green  open   .apm-custom-link                cJm8GijZSZSPoGpRVGBcEg   1   0          0            0       208b           208b</span><br><span class=\"line\">green  open   .apm-agent-configuration        N7VfBedDRDOLf4UU_1fQyQ   1   0          0            0       208b           208b</span><br><span class=\"line\">green  open   .kibana-event-log-7.15.2-000001 4jgSZhEMTiu3kPKvGWAnAQ   1   0          3            0     12.2kb         12.2kb</span><br><span class=\"line\">green  open   .kibana_7.15.2_001              msQTKdTgSLiio_y2hDNeOw   1   0         49            0      4.6mb          4.6mb</span><br><span class=\"line\">green  open   .tasks                          NdEDalLMSQCph51iRfzf9Q   1   0          2            0     13.8kb         13.8kb</span><br><span class=\"line\">green  open   .kibana_task_manager_7.15.2_001 686bNnjLS4-wiHKeKkxjag   1   0         15         6849    895.4kb        895.4kb</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>查看所有索引：<a href=\"https://192.168.10.71:9200/_cat/indices?v&amp;pretty\">https://192.168.10.71:9200/_cat/indices?v&amp;pretty</a></p>\n<p>docker cp dev-mysql-standalone-01:/etc/my.cnf /root/my.cnf</p>\n<p>安装kibana</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name dev-kibana-standalone-01 --net elastic -p 5601:5601 -e &quot;ELASTICSEARCH_HOSTS=http://192.168.10.73:9200/&quot; docker.elastic.co/kibana/kibana:7.15.2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Logstash</p>\n<p>[Configuring Logstash for Docker | Logstash Reference <a href=\"https://www.elastic.co/guide/en/logstash/current/docker-config.html\">8.8] | Elastic</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull docker.elastic.co/logstash/logstash:8.2.0</span><br><span class=\"line\">mkdir -p /root/logstash/&#123;pipeline,config,data&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p ~/settings</span><br><span class=\"line\"></span><br><span class=\"line\">docker run --rm -it -v ~/settings/:/usr/share/logstash/config/  docker.elastic.co/logstash/logstash:8.8.1</span><br><span class=\"line\"></span><br><span class=\"line\"> docker run --rm -it -v ~/settings/logstash.conf:/usr/share/logstash/config/logstash.conf -v ~/settings/logstash.yml:/usr/share/logstash/config/logstash.yml  -v ~/settings/pipelines.yml:/usr/share/logstash/config/pipelines.yml docker.elastic.co/logstash/logstash:7.15.2</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> es api key</span><br><span class=\"line\"> </span><br><span class=\"line\"> S05XZ3VJZ0JzZzE5NWo1WGlhNC06dE05OEJMV0NTSjIzVkFNWkw3QXZVUQ==</span><br></pre></td></tr></table></figure>\n<p>zookeeper(92)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name dev-elk-zookeeper-01 --privileged -p 2181:2181  -d zookeeper:3.7.1</span><br></pre></td></tr></table></figure>\n<p>kafka</p>\n<ul>\n<li>部署参考官网：<a href=\"https://kafka.apache.org/quickstart\">Apache Kafka</a></li>\n</ul>\n<p>1、下载<code>kafka3.4.0</code></p>\n<ul>\n<li>Scala 2.13  - <a href=\"https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz\">kafka_2.13-3.4.0.tgz</a> (<a href=\"https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.asc\">asc</a>, <a href=\"https://downloads.apache.org/kafka/3.4.0/kafka_2.13-3.4.0.tgz.sha512\">sha512</a>)</li>\n</ul>\n<p>2、新建<code>/root/kafka</code>文件夹，解压安装包</p>\n<p>3、编辑server.properties，仅修改以下三行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">broker.id=1</span><br><span class=\"line\"></span><br><span class=\"line\">############################# Socket Server Settings #############################</span><br><span class=\"line\"></span><br><span class=\"line\"># The address the socket server listens on. If not configured, the host name will be equal to the value of</span><br><span class=\"line\"># java.net.InetAddress.getCanonicalHostName(), with PLAINTEXT listener name, and port 9092.</span><br><span class=\"line\">#   FORMAT:</span><br><span class=\"line\">#     listeners = listener_name://host_name:port</span><br><span class=\"line\">#   EXAMPLE:</span><br><span class=\"line\">#     listeners = PLAINTEXT://your.host.name:9092</span><br><span class=\"line\">listeners=PLAINTEXT://0.0.0.0:9092</span><br><span class=\"line\"></span><br><span class=\"line\"># Listener name, hostname and port the broker will advertise to clients.</span><br><span class=\"line\"># If not set, it uses the value for &quot;listeners&quot;.</span><br><span class=\"line\">advertised.listeners=PLAINTEXT://192.168.10.92:9092</span><br></pre></td></tr></table></figure>\n<p>4、后台启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup /root/kafka/kafka_2.13-3.4.0/bin/kafka-server-start.sh /root/kafka/kafka_2.13-3.4.0/bin/config/server.properties &amp; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-node92 kafka]# pwd</span><br><span class=\"line\">/root/kafka</span><br><span class=\"line\">[root@idszt-node92 kafka]# bin/kafka-server-start.sh config/server.properties</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>kafka manager(91)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 8080:8080 -e KAFKA_BROKERS=192.168.10.92:9092 docker.redpanda.com/redpandadata/console:latest</span><br></pre></td></tr></table></figure>\n<p>filebeat</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查找大于50M的日志</span><br><span class=\"line\">find / -type f -size +50240k -exec ls -lh &#123;&#125; \\;</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/infra/apache-zookeeper-3.7.1-bin/logs/version-2/log.200000001</span><br><span class=\"line\"></span><br><span class=\"line\">#运行</span><br><span class=\"line\">./filebeat -e -c filebeat.yml</span><br></pre></td></tr></table></figure>\n"},{"_content":"1、主机的位置信息确认（机房位置、机柜、机架），主机的机器信息（磁盘RAID模式，网卡型号和冗余带宽）。\n\n2、是否有堡垒机做集中接入？还是固定外部可访问IP做维护，远程接入方式。\n\n3、是否单独网段（比如10.10.10.0/26），考虑后期集群资源拓展。\n\n4、如何远程连接监控和维护？用于一般日常监控维护和应急处理。\n\n5、机房是否内网NTP服务提供，用于集群对时。\n\n\n\n\n\n\n\n\n\n```\n\necho \"--------------防火墙---------------------\">>info.txt\nfirewall-cmd --state >>info.txt\necho \"--------------网卡---------------------\">>info.txt\nifconfig -a >>info.txt\necho \"---------------运行中的程序--------------------\">>info.txt\nsystemctl list-units -t service --state=running >>info.txt\necho \"---------------磁盘情况--------------------\" >>info.txt \ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*' >>info.txt\necho \"---------------内存情况--------------------\">>info.txt\nfree -h >>info.txt\necho \"---------------处理器情况--------------------\">>info.txt\ncat /proc/cpuinfo >>info.txt\necho \"---------------硬盘--------------------\">>info.txt\nfdisk -l >>info.txt\necho \"---------------结束--------------------\">>info.txt\n```\n\n","source":"_posts/07中间件/9A.服务器部署前资料收集.md","raw":"1、主机的位置信息确认（机房位置、机柜、机架），主机的机器信息（磁盘RAID模式，网卡型号和冗余带宽）。\n\n2、是否有堡垒机做集中接入？还是固定外部可访问IP做维护，远程接入方式。\n\n3、是否单独网段（比如10.10.10.0/26），考虑后期集群资源拓展。\n\n4、如何远程连接监控和维护？用于一般日常监控维护和应急处理。\n\n5、机房是否内网NTP服务提供，用于集群对时。\n\n\n\n\n\n\n\n\n\n```\n\necho \"--------------防火墙---------------------\">>info.txt\nfirewall-cmd --state >>info.txt\necho \"--------------网卡---------------------\">>info.txt\nifconfig -a >>info.txt\necho \"---------------运行中的程序--------------------\">>info.txt\nsystemctl list-units -t service --state=running >>info.txt\necho \"---------------磁盘情况--------------------\" >>info.txt \ndf -Th | grep 'Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*' >>info.txt\necho \"---------------内存情况--------------------\">>info.txt\nfree -h >>info.txt\necho \"---------------处理器情况--------------------\">>info.txt\ncat /proc/cpuinfo >>info.txt\necho \"---------------硬盘--------------------\">>info.txt\nfdisk -l >>info.txt\necho \"---------------结束--------------------\">>info.txt\n```\n\n","slug":"07中间件/9A.服务器部署前资料收集","published":1,"date":"2023-09-01T13:06:37.620Z","updated":"2023-06-15T02:09:10.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o11000tzb8a89ed5qld","content":"<p>1、主机的位置信息确认（机房位置、机柜、机架），主机的机器信息（磁盘RAID模式，网卡型号和冗余带宽）。</p>\n<p>2、是否有堡垒机做集中接入？还是固定外部可访问IP做维护，远程接入方式。</p>\n<p>3、是否单独网段（比如10.10.10.0/26），考虑后期集群资源拓展。</p>\n<p>4、如何远程连接监控和维护？用于一般日常监控维护和应急处理。</p>\n<p>5、机房是否内网NTP服务提供，用于集群对时。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">echo &quot;--------------防火墙---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">firewall-cmd --state &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;--------------网卡---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">ifconfig -a &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------运行中的程序--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">systemctl list-units -t service --state=running &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------磁盘情况--------------------&quot; &gt;&gt;info.txt </span><br><span class=\"line\">df -Th | grep &#x27;Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*&#x27; &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------内存情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">free -h &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------处理器情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">cat /proc/cpuinfo &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------硬盘--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">fdisk -l &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------结束--------------------&quot;&gt;&gt;info.txt</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>1、主机的位置信息确认（机房位置、机柜、机架），主机的机器信息（磁盘RAID模式，网卡型号和冗余带宽）。</p>\n<p>2、是否有堡垒机做集中接入？还是固定外部可访问IP做维护，远程接入方式。</p>\n<p>3、是否单独网段（比如10.10.10.0/26），考虑后期集群资源拓展。</p>\n<p>4、如何远程连接监控和维护？用于一般日常监控维护和应急处理。</p>\n<p>5、机房是否内网NTP服务提供，用于集群对时。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">echo &quot;--------------防火墙---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">firewall-cmd --state &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;--------------网卡---------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">ifconfig -a &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------运行中的程序--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">systemctl list-units -t service --state=running &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------磁盘情况--------------------&quot; &gt;&gt;info.txt </span><br><span class=\"line\">df -Th | grep &#x27;Filesystem\\|^/dev/sd*\\|^/dev/vd*\\|^/dev/hd*\\|^/dev/mapper*\\|^/dev/md*&#x27; &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------内存情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">free -h &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------处理器情况--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">cat /proc/cpuinfo &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------硬盘--------------------&quot;&gt;&gt;info.txt</span><br><span class=\"line\">fdisk -l &gt;&gt;info.txt</span><br><span class=\"line\">echo &quot;---------------结束--------------------&quot;&gt;&gt;info.txt</span><br></pre></td></tr></table></figure>\n"},{"_content":"59.36.150.13\n\n\n192.168.0.32\n\n[root@tyy-manager ~]# cat /etc/redhat-release\nCentOS Linux release 7.5.1804 (Core)\n\n\n[root@gf-node001 ~]# cat /etc/redhat-release\nCentOS Linux release 8.2.2004 (Core)\n\n\n[root@gf-node002 ~]# cat /etc/redhat-release\nCentOS Linux release 8.2.2004 (Core)\n\n\nmkfs -t xfs /dev/vdb\n\n### 分区添加磁盘\n\n```shell\n[root@gf-node002 ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G     0  7.8G   0% /dev/shm\ntmpfs           7.8G  8.6M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\n/dev/vda2        36G  3.2G   31G  10% /\ntmpfs           1.6G     0  1.6G   0% /run/user/0\n[root@gf-node002 ~]# fdisk /dev/vdb\n\nWelcome to fdisk (util-linux 2.32.1).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\nDevice does not contain a recognized partition table.\nCreated a new DOS disklabel with disk identifier 0x30032b50.\n\nCommand (m for help): n\nPartition type\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended (container for logical partitions)\nSelect (default p): p\nPartition number (1-4, default 1): 1\nFirst sector (2048-419430399, default 2048):\nLast sector, +sectors or +size{K,M,G,T,P} (2048-419430399, default 419430399):\n\nCreated a new partition 1 of type 'Linux' and of size 200 GiB.\n\nCommand (m for help): p\nDisk /dev/vdb: 200 GiB, 214748364800 bytes, 419430400 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x30032b50\n\nDevice     Boot Start       End   Sectors  Size Id Type\n/dev/vdb1        2048 419430399 419428352  200G 83 Linux\n\nCommand (m for help): w\nThe partition table has been altered.\nCalling ioctl() to re-read partition table.\nSyncing disks.\n\n[root@gf-node002 ~]# mkfs -t ext4 /dev/vdb\nmke2fs 1.45.4 (23-Sep-2019)\nFound a dos partition table in /dev/vdb\nProceed anyway? (y,N) y\nCreating filesystem with 52428800 4k blocks and 13107200 inodes\nFilesystem UUID: 72705ecc-393a-48b0-8a44-d81d177645b4\nSuperblock backups stored on blocks:\n        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,\n        4096000, 7962624, 11239424, 20480000, 23887872\n\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (262144 blocks): done\nWriting superblocks and filesystem accounting information: done\n\n[root@gf-node002 ~]# mkdir /data\n[root@gf-node002 ~]# mount /dev/vdb /data\n[root@gf-node002 ~]# df -lh\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G     0  7.8G   0% /dev/shm\ntmpfs           7.8G  8.6M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\n/dev/vda2        36G  3.2G   31G  10% /\ntmpfs           1.6G     0  1.6G   0% /run/user/0\n/dev/vdb        196G   61M  186G   1% /data\n\n\n\n```\n\n\n### 安装nginx\n\n```shell\nyum -y install yum-utils --downloadonly --downloaddir=/root/software\n\nyum -y install nginx --downloadonly --downloaddir=/root/software\n\ncd /root/software\n\nyum localinstall *.rpm -y\n\nnginx -v\n\n\n[root@gf-node002 software]# nginx -v\nnginx version: nginx/1.24.0\n[root@gf-node002 software]# whereis nginx\nnginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz\n#启动nginx。\nsystemctl start nginx\n#开机启动nginx\nsystemctl enable nginx\n\n\n\n\n```","source":"_posts/07中间件/A.天翼云.md","raw":"59.36.150.13\n\n\n192.168.0.32\n\n[root@tyy-manager ~]# cat /etc/redhat-release\nCentOS Linux release 7.5.1804 (Core)\n\n\n[root@gf-node001 ~]# cat /etc/redhat-release\nCentOS Linux release 8.2.2004 (Core)\n\n\n[root@gf-node002 ~]# cat /etc/redhat-release\nCentOS Linux release 8.2.2004 (Core)\n\n\nmkfs -t xfs /dev/vdb\n\n### 分区添加磁盘\n\n```shell\n[root@gf-node002 ~]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G     0  7.8G   0% /dev/shm\ntmpfs           7.8G  8.6M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\n/dev/vda2        36G  3.2G   31G  10% /\ntmpfs           1.6G     0  1.6G   0% /run/user/0\n[root@gf-node002 ~]# fdisk /dev/vdb\n\nWelcome to fdisk (util-linux 2.32.1).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\nDevice does not contain a recognized partition table.\nCreated a new DOS disklabel with disk identifier 0x30032b50.\n\nCommand (m for help): n\nPartition type\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended (container for logical partitions)\nSelect (default p): p\nPartition number (1-4, default 1): 1\nFirst sector (2048-419430399, default 2048):\nLast sector, +sectors or +size{K,M,G,T,P} (2048-419430399, default 419430399):\n\nCreated a new partition 1 of type 'Linux' and of size 200 GiB.\n\nCommand (m for help): p\nDisk /dev/vdb: 200 GiB, 214748364800 bytes, 419430400 sectors\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x30032b50\n\nDevice     Boot Start       End   Sectors  Size Id Type\n/dev/vdb1        2048 419430399 419428352  200G 83 Linux\n\nCommand (m for help): w\nThe partition table has been altered.\nCalling ioctl() to re-read partition table.\nSyncing disks.\n\n[root@gf-node002 ~]# mkfs -t ext4 /dev/vdb\nmke2fs 1.45.4 (23-Sep-2019)\nFound a dos partition table in /dev/vdb\nProceed anyway? (y,N) y\nCreating filesystem with 52428800 4k blocks and 13107200 inodes\nFilesystem UUID: 72705ecc-393a-48b0-8a44-d81d177645b4\nSuperblock backups stored on blocks:\n        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,\n        4096000, 7962624, 11239424, 20480000, 23887872\n\nAllocating group tables: done\nWriting inode tables: done\nCreating journal (262144 blocks): done\nWriting superblocks and filesystem accounting information: done\n\n[root@gf-node002 ~]# mkdir /data\n[root@gf-node002 ~]# mount /dev/vdb /data\n[root@gf-node002 ~]# df -lh\nFilesystem      Size  Used Avail Use% Mounted on\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G     0  7.8G   0% /dev/shm\ntmpfs           7.8G  8.6M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\n/dev/vda2        36G  3.2G   31G  10% /\ntmpfs           1.6G     0  1.6G   0% /run/user/0\n/dev/vdb        196G   61M  186G   1% /data\n\n\n\n```\n\n\n### 安装nginx\n\n```shell\nyum -y install yum-utils --downloadonly --downloaddir=/root/software\n\nyum -y install nginx --downloadonly --downloaddir=/root/software\n\ncd /root/software\n\nyum localinstall *.rpm -y\n\nnginx -v\n\n\n[root@gf-node002 software]# nginx -v\nnginx version: nginx/1.24.0\n[root@gf-node002 software]# whereis nginx\nnginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz\n#启动nginx。\nsystemctl start nginx\n#开机启动nginx\nsystemctl enable nginx\n\n\n\n\n```","slug":"07中间件/A.天翼云","published":1,"date":"2023-09-01T13:06:37.630Z","updated":"2023-08-28T14:28:54.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o12000uzb8a1ap54466","content":"<p>59.36.150.13</p>\n<p>192.168.0.32</p>\n<p>[root@tyy-manager ~]# cat /etc/redhat-release<br>\nCentOS Linux release 7.5.1804 (Core)</p>\n<p>[root@gf-node001 ~]# cat /etc/redhat-release<br>\nCentOS Linux release 8.2.2004 (Core)</p>\n<p>[root@gf-node002 ~]# cat /etc/redhat-release<br>\nCentOS Linux release 8.2.2004 (Core)</p>\n<p>mkfs -t xfs /dev/vdb</p>\n<h3 id=\"分区添加磁盘\">分区添加磁盘</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@gf-node002 ~]# df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  8.6M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/vda2        36G  3.2G   31G  10% /</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">[root@gf-node002 ~]# fdisk /dev/vdb</span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to fdisk (util-linux 2.32.1).</span><br><span class=\"line\">Changes will remain in memory only, until you decide to write them.</span><br><span class=\"line\">Be careful before using the write command.</span><br><span class=\"line\"></span><br><span class=\"line\">Device does not contain a recognized partition table.</span><br><span class=\"line\">Created a new DOS disklabel with disk identifier 0x30032b50.</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m for help): n</span><br><span class=\"line\">Partition type</span><br><span class=\"line\">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">   e   extended (container for logical partitions)</span><br><span class=\"line\">Select (default p): p</span><br><span class=\"line\">Partition number (1-4, default 1): 1</span><br><span class=\"line\">First sector (2048-419430399, default 2048):</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-419430399, default 419430399):</span><br><span class=\"line\"></span><br><span class=\"line\">Created a new partition 1 of type &#x27;Linux&#x27; and of size 200 GiB.</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m for help): p</span><br><span class=\"line\">Disk /dev/vdb: 200 GiB, 214748364800 bytes, 419430400 sectors</span><br><span class=\"line\">Units: sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\">Disklabel type: dos</span><br><span class=\"line\">Disk identifier: 0x30032b50</span><br><span class=\"line\"></span><br><span class=\"line\">Device     Boot Start       End   Sectors  Size Id Type</span><br><span class=\"line\">/dev/vdb1        2048 419430399 419428352  200G 83 Linux</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m for help): w</span><br><span class=\"line\">The partition table has been altered.</span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">Syncing disks.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@gf-node002 ~]# mkfs -t ext4 /dev/vdb</span><br><span class=\"line\">mke2fs 1.45.4 (23-Sep-2019)</span><br><span class=\"line\">Found a dos partition table in /dev/vdb</span><br><span class=\"line\">Proceed anyway? (y,N) y</span><br><span class=\"line\">Creating filesystem with 52428800 4k blocks and 13107200 inodes</span><br><span class=\"line\">Filesystem UUID: 72705ecc-393a-48b0-8a44-d81d177645b4</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,</span><br><span class=\"line\">        4096000, 7962624, 11239424, 20480000, 23887872</span><br><span class=\"line\"></span><br><span class=\"line\">Allocating group tables: done</span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (262144 blocks): done</span><br><span class=\"line\">Writing superblocks and filesystem accounting information: done</span><br><span class=\"line\"></span><br><span class=\"line\">[root@gf-node002 ~]# mkdir /data</span><br><span class=\"line\">[root@gf-node002 ~]# mount /dev/vdb /data</span><br><span class=\"line\">[root@gf-node002 ~]# df -lh</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  8.6M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/vda2        36G  3.2G   31G  10% /</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">/dev/vdb        196G   61M  186G   1% /data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装nginx\">安装nginx</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install yum-utils --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install nginx --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"></span><br><span class=\"line\">cd /root/software</span><br><span class=\"line\"></span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"></span><br><span class=\"line\">nginx -v</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@gf-node002 software]# nginx -v</span><br><span class=\"line\">nginx version: nginx/1.24.0</span><br><span class=\"line\">[root@gf-node002 software]# whereis nginx</span><br><span class=\"line\">nginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动nginx。</span></span><br><span class=\"line\">systemctl start nginx</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">开机启动nginx</span></span><br><span class=\"line\">systemctl enable nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>59.36.150.13</p>\n<p>192.168.0.32</p>\n<p>[root@tyy-manager ~]# cat /etc/redhat-release<br>\nCentOS Linux release 7.5.1804 (Core)</p>\n<p>[root@gf-node001 ~]# cat /etc/redhat-release<br>\nCentOS Linux release 8.2.2004 (Core)</p>\n<p>[root@gf-node002 ~]# cat /etc/redhat-release<br>\nCentOS Linux release 8.2.2004 (Core)</p>\n<p>mkfs -t xfs /dev/vdb</p>\n<h3 id=\"分区添加磁盘\">分区添加磁盘</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@gf-node002 ~]# df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  8.6M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/vda2        36G  3.2G   31G  10% /</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">[root@gf-node002 ~]# fdisk /dev/vdb</span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to fdisk (util-linux 2.32.1).</span><br><span class=\"line\">Changes will remain in memory only, until you decide to write them.</span><br><span class=\"line\">Be careful before using the write command.</span><br><span class=\"line\"></span><br><span class=\"line\">Device does not contain a recognized partition table.</span><br><span class=\"line\">Created a new DOS disklabel with disk identifier 0x30032b50.</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m for help): n</span><br><span class=\"line\">Partition type</span><br><span class=\"line\">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">   e   extended (container for logical partitions)</span><br><span class=\"line\">Select (default p): p</span><br><span class=\"line\">Partition number (1-4, default 1): 1</span><br><span class=\"line\">First sector (2048-419430399, default 2048):</span><br><span class=\"line\">Last sector, +sectors or +size&#123;K,M,G,T,P&#125; (2048-419430399, default 419430399):</span><br><span class=\"line\"></span><br><span class=\"line\">Created a new partition 1 of type &#x27;Linux&#x27; and of size 200 GiB.</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m for help): p</span><br><span class=\"line\">Disk /dev/vdb: 200 GiB, 214748364800 bytes, 419430400 sectors</span><br><span class=\"line\">Units: sectors of 1 * 512 = 512 bytes</span><br><span class=\"line\">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class=\"line\">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class=\"line\">Disklabel type: dos</span><br><span class=\"line\">Disk identifier: 0x30032b50</span><br><span class=\"line\"></span><br><span class=\"line\">Device     Boot Start       End   Sectors  Size Id Type</span><br><span class=\"line\">/dev/vdb1        2048 419430399 419428352  200G 83 Linux</span><br><span class=\"line\"></span><br><span class=\"line\">Command (m for help): w</span><br><span class=\"line\">The partition table has been altered.</span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">Syncing disks.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@gf-node002 ~]# mkfs -t ext4 /dev/vdb</span><br><span class=\"line\">mke2fs 1.45.4 (23-Sep-2019)</span><br><span class=\"line\">Found a dos partition table in /dev/vdb</span><br><span class=\"line\">Proceed anyway? (y,N) y</span><br><span class=\"line\">Creating filesystem with 52428800 4k blocks and 13107200 inodes</span><br><span class=\"line\">Filesystem UUID: 72705ecc-393a-48b0-8a44-d81d177645b4</span><br><span class=\"line\">Superblock backups stored on blocks:</span><br><span class=\"line\">        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,</span><br><span class=\"line\">        4096000, 7962624, 11239424, 20480000, 23887872</span><br><span class=\"line\"></span><br><span class=\"line\">Allocating group tables: done</span><br><span class=\"line\">Writing inode tables: done</span><br><span class=\"line\">Creating journal (262144 blocks): done</span><br><span class=\"line\">Writing superblocks and filesystem accounting information: done</span><br><span class=\"line\"></span><br><span class=\"line\">[root@gf-node002 ~]# mkdir /data</span><br><span class=\"line\">[root@gf-node002 ~]# mount /dev/vdb /data</span><br><span class=\"line\">[root@gf-node002 ~]# df -lh</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  8.6M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/vda2        36G  3.2G   31G  10% /</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">/dev/vdb        196G   61M  186G   1% /data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装nginx\">安装nginx</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install yum-utils --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install nginx --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"></span><br><span class=\"line\">cd /root/software</span><br><span class=\"line\"></span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"></span><br><span class=\"line\">nginx -v</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@gf-node002 software]# nginx -v</span><br><span class=\"line\">nginx version: nginx/1.24.0</span><br><span class=\"line\">[root@gf-node002 software]# whereis nginx</span><br><span class=\"line\">nginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">启动nginx。</span></span><br><span class=\"line\">systemctl start nginx</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">开机启动nginx</span></span><br><span class=\"line\">systemctl enable nginx</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"SSH远程接入配置\n### 1.前置条件\n\nCentOS7.9系统安装结束。\n\n### 2.调整SSH默认端口\n\n配置文件调整/etc/ssh/sshd_config\n\n```\nvi /etc/ssh/sshd_config\n\n#port 22\n#改为\nport 21191\n```\n\n### 3.调整防火墙策略\n\n- 可手动图形化界面加入\n\n- 可用以下命令行加入\n\n  ```\n  #向防火墙中添加端口的命令为\n  firewall-cmd --zone=public --add-port=21191/tcp --permanent\n  \n  #reaload 防火墙规则\n  firewall-cmd --reload\n  \n  #查看端口是否添加成功\n  firewall-cmd --zone=public --query-port=21191/tcp\n  ```\n\n### 4.调整SELINUX内部端口策略\n\n\n\n### 5.重启SSH程序\n\n- 确认状态正常`active`，和端口`Server listening on 0.0.0.0 port 21191`\n\n```\n#重启服务\nsystemctl restart sshd\n\n#确认状态正常active，和端口`Server listening on 0.0.0.0 port 21191`\n[root@idszt-node008 ~]# systemctl status sshd\n● sshd.service - OpenSSH server daemon\n   Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)\n   Active: active (running) since 日 2023-06-04 16:16:25 CST; 8min ago\n     Docs: man:sshd(8)\n           man:sshd_config(5)\n Main PID: 2107 (sshd)\n    Tasks: 1\n   CGroup: /system.slice/sshd.service\n           └─2107 /usr/sbin/sshd -D\n\n6月 04 16:16:25 idszt-node008 systemd[1]: Starting OpenSSH server daemon...\n6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on 0.0.0.0 port 21191.\n6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on :: port 21191.\n6月 04 16:16:25 idszt-node008 systemd[1]: Started OpenSSH server daemon.\n6月 04 16:17:07 idszt-node008 sshd[3366]: Accepted password for root from 223.104.77.180 port 59879 ssh2\n6月 04 16:18:06 idszt-node008 sshd[3393]: Accepted password for root from 223.104.77.180 port 53327 ssh2\n6月 04 16:18:12 idszt-node008 sshd[3401]: Accepted password for root from 223.104.77.180 port 56479 ssh2\n```\n\n### 6.验证SSH接入\n\n远程客户端通过移动互联网，SSH访问公网IP接入，显示正常。\n\n\n\n修改端口\n\n/etc/ssh/sshd_config\n\n放开21191端口\n\n\n\nsystemctl restart sshd\n\n\n\n查询当前 ssh 服务端口: `semanage port -l | grep ssh`\n\n向 SELinux 中添加 ssh 端口: `semanage port -a -t ssh_port_t -p tcp 21191`\n\n\n\n\n\n3.向防火墙中添加修改的端口\n向防火墙中添加端口的命令为: firewall-cmd --zone=public --add-port=21191/tcp --permanent\n\nreaload 防火墙规则: firewall-cmd --reload\n\n查看端口是否添加成功: firewall-cmd --zone=public --query-port=21191/tcp\n","source":"_posts/07中间件/A.系统初始化.SSH配置.md","raw":"SSH远程接入配置\n### 1.前置条件\n\nCentOS7.9系统安装结束。\n\n### 2.调整SSH默认端口\n\n配置文件调整/etc/ssh/sshd_config\n\n```\nvi /etc/ssh/sshd_config\n\n#port 22\n#改为\nport 21191\n```\n\n### 3.调整防火墙策略\n\n- 可手动图形化界面加入\n\n- 可用以下命令行加入\n\n  ```\n  #向防火墙中添加端口的命令为\n  firewall-cmd --zone=public --add-port=21191/tcp --permanent\n  \n  #reaload 防火墙规则\n  firewall-cmd --reload\n  \n  #查看端口是否添加成功\n  firewall-cmd --zone=public --query-port=21191/tcp\n  ```\n\n### 4.调整SELINUX内部端口策略\n\n\n\n### 5.重启SSH程序\n\n- 确认状态正常`active`，和端口`Server listening on 0.0.0.0 port 21191`\n\n```\n#重启服务\nsystemctl restart sshd\n\n#确认状态正常active，和端口`Server listening on 0.0.0.0 port 21191`\n[root@idszt-node008 ~]# systemctl status sshd\n● sshd.service - OpenSSH server daemon\n   Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)\n   Active: active (running) since 日 2023-06-04 16:16:25 CST; 8min ago\n     Docs: man:sshd(8)\n           man:sshd_config(5)\n Main PID: 2107 (sshd)\n    Tasks: 1\n   CGroup: /system.slice/sshd.service\n           └─2107 /usr/sbin/sshd -D\n\n6月 04 16:16:25 idszt-node008 systemd[1]: Starting OpenSSH server daemon...\n6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on 0.0.0.0 port 21191.\n6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on :: port 21191.\n6月 04 16:16:25 idszt-node008 systemd[1]: Started OpenSSH server daemon.\n6月 04 16:17:07 idszt-node008 sshd[3366]: Accepted password for root from 223.104.77.180 port 59879 ssh2\n6月 04 16:18:06 idszt-node008 sshd[3393]: Accepted password for root from 223.104.77.180 port 53327 ssh2\n6月 04 16:18:12 idszt-node008 sshd[3401]: Accepted password for root from 223.104.77.180 port 56479 ssh2\n```\n\n### 6.验证SSH接入\n\n远程客户端通过移动互联网，SSH访问公网IP接入，显示正常。\n\n\n\n修改端口\n\n/etc/ssh/sshd_config\n\n放开21191端口\n\n\n\nsystemctl restart sshd\n\n\n\n查询当前 ssh 服务端口: `semanage port -l | grep ssh`\n\n向 SELinux 中添加 ssh 端口: `semanage port -a -t ssh_port_t -p tcp 21191`\n\n\n\n\n\n3.向防火墙中添加修改的端口\n向防火墙中添加端口的命令为: firewall-cmd --zone=public --add-port=21191/tcp --permanent\n\nreaload 防火墙规则: firewall-cmd --reload\n\n查看端口是否添加成功: firewall-cmd --zone=public --query-port=21191/tcp\n","slug":"07中间件/A.系统初始化.SSH配置","published":1,"date":"2023-09-01T13:06:37.640Z","updated":"2023-06-29T01:30:38.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o12000vzb8a0vafac75","content":"<p>SSH远程接入配置</p>\n<h3 id=\"1-前置条件\">1.前置条件</h3>\n<p>CentOS7.9系统安装结束。</p>\n<h3 id=\"2-调整SSH默认端口\">2.调整SSH默认端口</h3>\n<p>配置文件调整/etc/ssh/sshd_config</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/ssh/sshd_config</span><br><span class=\"line\"></span><br><span class=\"line\">#port 22</span><br><span class=\"line\">#改为</span><br><span class=\"line\">port 21191</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-调整防火墙策略\">3.调整防火墙策略</h3>\n<ul>\n<li>\n<p>可手动图形化界面加入</p>\n</li>\n<li>\n<p>可用以下命令行加入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#向防火墙中添加端口的命令为</span><br><span class=\"line\">firewall-cmd --zone=public --add-port=21191/tcp --permanent</span><br><span class=\"line\"></span><br><span class=\"line\">#reaload 防火墙规则</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">#查看端口是否添加成功</span><br><span class=\"line\">firewall-cmd --zone=public --query-port=21191/tcp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4-调整SELINUX内部端口策略\">4.调整SELINUX内部端口策略</h3>\n<h3 id=\"5-重启SSH程序\">5.重启SSH程序</h3>\n<ul>\n<li>确认状态正常<code>active</code>，和端口<code>Server listening on 0.0.0.0 port 21191</code></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#重启服务</span><br><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\"></span><br><span class=\"line\">#确认状态正常active，和端口`Server listening on 0.0.0.0 port 21191`</span><br><span class=\"line\">[root@idszt-node008 ~]# systemctl status sshd</span><br><span class=\"line\">● sshd.service - OpenSSH server daemon</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)</span><br><span class=\"line\">   Active: active (running) since 日 2023-06-04 16:16:25 CST; 8min ago</span><br><span class=\"line\">     Docs: man:sshd(8)</span><br><span class=\"line\">           man:sshd_config(5)</span><br><span class=\"line\"> Main PID: 2107 (sshd)</span><br><span class=\"line\">    Tasks: 1</span><br><span class=\"line\">   CGroup: /system.slice/sshd.service</span><br><span class=\"line\">           └─2107 /usr/sbin/sshd -D</span><br><span class=\"line\"></span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 systemd[1]: Starting OpenSSH server daemon...</span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on 0.0.0.0 port 21191.</span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on :: port 21191.</span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 systemd[1]: Started OpenSSH server daemon.</span><br><span class=\"line\">6月 04 16:17:07 idszt-node008 sshd[3366]: Accepted password for root from 223.104.77.180 port 59879 ssh2</span><br><span class=\"line\">6月 04 16:18:06 idszt-node008 sshd[3393]: Accepted password for root from 223.104.77.180 port 53327 ssh2</span><br><span class=\"line\">6月 04 16:18:12 idszt-node008 sshd[3401]: Accepted password for root from 223.104.77.180 port 56479 ssh2</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证SSH接入\">6.验证SSH接入</h3>\n<p>远程客户端通过移动互联网，SSH访问公网IP接入，显示正常。</p>\n<p>修改端口</p>\n<p>/etc/ssh/sshd_config</p>\n<p>放开21191端口</p>\n<p>systemctl restart sshd</p>\n<p>查询当前 ssh 服务端口: <code>semanage port -l | grep ssh</code></p>\n<p>向 SELinux 中添加 ssh 端口: <code>semanage port -a -t ssh_port_t -p tcp 21191</code></p>\n<p>3.向防火墙中添加修改的端口<br>\n向防火墙中添加端口的命令为: firewall-cmd --zone=public --add-port=21191/tcp --permanent</p>\n<p>reaload 防火墙规则: firewall-cmd --reload</p>\n<p>查看端口是否添加成功: firewall-cmd --zone=public --query-port=21191/tcp</p>\n","excerpt":"","more":"<p>SSH远程接入配置</p>\n<h3 id=\"1-前置条件\">1.前置条件</h3>\n<p>CentOS7.9系统安装结束。</p>\n<h3 id=\"2-调整SSH默认端口\">2.调整SSH默认端口</h3>\n<p>配置文件调整/etc/ssh/sshd_config</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/ssh/sshd_config</span><br><span class=\"line\"></span><br><span class=\"line\">#port 22</span><br><span class=\"line\">#改为</span><br><span class=\"line\">port 21191</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-调整防火墙策略\">3.调整防火墙策略</h3>\n<ul>\n<li>\n<p>可手动图形化界面加入</p>\n</li>\n<li>\n<p>可用以下命令行加入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#向防火墙中添加端口的命令为</span><br><span class=\"line\">firewall-cmd --zone=public --add-port=21191/tcp --permanent</span><br><span class=\"line\"></span><br><span class=\"line\">#reaload 防火墙规则</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">#查看端口是否添加成功</span><br><span class=\"line\">firewall-cmd --zone=public --query-port=21191/tcp</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"4-调整SELINUX内部端口策略\">4.调整SELINUX内部端口策略</h3>\n<h3 id=\"5-重启SSH程序\">5.重启SSH程序</h3>\n<ul>\n<li>确认状态正常<code>active</code>，和端口<code>Server listening on 0.0.0.0 port 21191</code></li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#重启服务</span><br><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\"></span><br><span class=\"line\">#确认状态正常active，和端口`Server listening on 0.0.0.0 port 21191`</span><br><span class=\"line\">[root@idszt-node008 ~]# systemctl status sshd</span><br><span class=\"line\">● sshd.service - OpenSSH server daemon</span><br><span class=\"line\">   Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)</span><br><span class=\"line\">   Active: active (running) since 日 2023-06-04 16:16:25 CST; 8min ago</span><br><span class=\"line\">     Docs: man:sshd(8)</span><br><span class=\"line\">           man:sshd_config(5)</span><br><span class=\"line\"> Main PID: 2107 (sshd)</span><br><span class=\"line\">    Tasks: 1</span><br><span class=\"line\">   CGroup: /system.slice/sshd.service</span><br><span class=\"line\">           └─2107 /usr/sbin/sshd -D</span><br><span class=\"line\"></span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 systemd[1]: Starting OpenSSH server daemon...</span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on 0.0.0.0 port 21191.</span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 sshd[2107]: Server listening on :: port 21191.</span><br><span class=\"line\">6月 04 16:16:25 idszt-node008 systemd[1]: Started OpenSSH server daemon.</span><br><span class=\"line\">6月 04 16:17:07 idszt-node008 sshd[3366]: Accepted password for root from 223.104.77.180 port 59879 ssh2</span><br><span class=\"line\">6月 04 16:18:06 idszt-node008 sshd[3393]: Accepted password for root from 223.104.77.180 port 53327 ssh2</span><br><span class=\"line\">6月 04 16:18:12 idszt-node008 sshd[3401]: Accepted password for root from 223.104.77.180 port 56479 ssh2</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证SSH接入\">6.验证SSH接入</h3>\n<p>远程客户端通过移动互联网，SSH访问公网IP接入，显示正常。</p>\n<p>修改端口</p>\n<p>/etc/ssh/sshd_config</p>\n<p>放开21191端口</p>\n<p>systemctl restart sshd</p>\n<p>查询当前 ssh 服务端口: <code>semanage port -l | grep ssh</code></p>\n<p>向 SELinux 中添加 ssh 端口: <code>semanage port -a -t ssh_port_t -p tcp 21191</code></p>\n<p>3.向防火墙中添加修改的端口<br>\n向防火墙中添加端口的命令为: firewall-cmd --zone=public --add-port=21191/tcp --permanent</p>\n<p>reaload 防火墙规则: firewall-cmd --reload</p>\n<p>查看端口是否添加成功: firewall-cmd --zone=public --query-port=21191/tcp</p>\n"},{"_content":"## Redis集群环境部署\n\n### 集群连接\n\n```shell\nRedis集群-测试库\nRedis连接：\n192.168.10.71:6379\n192.168.10.72:6379\n192.168.10.73:6379\n192.168.10.91:6379\n192.168.10.92:6379\n192.168.10.93:6379\n\nRedis密码：\n86a1b907d54bf7010394bf316e183e67\n```\n\n\n\n### 安装redis\n\n```\nyum install epel-release -y\nyum install redis -y\n\nsystemctl restart redis\nsystemctl enable redis\nsystemctl status redis\n\n\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n```\n\n\n\n### 修改配置文件\n\n路径：`/etc/redis.conf`，每个节点都需修改，bind ip以实际为准。\n\n```\nbind 192.168.10.71\ncluster-enabled yes\nmasterauth 'redis@szt2023nomeaning'\nrequirepass 'redis@szt2023nomeaning'\n```\n\nsystemctl restart redis\n\n\n\n### 配置集群\n\n```\nredis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\n\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\nab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected\n\n[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n>>> Performing hash slots allocation on 6 nodes...\nMaster[0] -> Slots 0 - 5460\nMaster[1] -> Slots 5461 - 10922\nMaster[2] -> Slots 10923 - 16383\nAdding replica 192.168.10.92:6379 to 192.168.10.71:6379\nAdding replica 192.168.10.93:6379 to 192.168.10.72:6379\nAdding replica 192.168.10.91:6379 to 192.168.10.73:6379\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\nCan I set the above configuration? (type 'yes' to accept): yes\n>>> Nodes configuration updated\n>>> Assign a different config epoch to each node\n>>> Sending CLUSTER MEET messages to join the cluster\nWaiting for the cluster to join\n.....\n>>> Performing Cluster Check (using node 192.168.10.71:6379)\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\n   1 additional replica(s)\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   slots: (0 slots) slave\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\n   1 additional replica(s)\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   slots: (0 slots) slave\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\n   1 additional replica(s)\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   slots: (0 slots) slave\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n```\n\n\n\n### 查看节点\n\n```\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.71:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:6\ncluster_size:3\ncluster_current_epoch:6\ncluster_my_epoch:1\ncluster_stats_messages_sent:1753\ncluster_stats_messages_received:1753\n\n192.168.10.71:6379> cluster nodes\n781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected\nd9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922\n00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected\ncf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383\nab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460\nc53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected\n192.168.10.71:6379> exit\n\n```\n\n","source":"_posts/07中间件/4.1.Redis集群环境部署-yum.md","raw":"## Redis集群环境部署\n\n### 集群连接\n\n```shell\nRedis集群-测试库\nRedis连接：\n192.168.10.71:6379\n192.168.10.72:6379\n192.168.10.73:6379\n192.168.10.91:6379\n192.168.10.92:6379\n192.168.10.93:6379\n\nRedis密码：\n86a1b907d54bf7010394bf316e183e67\n```\n\n\n\n### 安装redis\n\n```\nyum install epel-release -y\nyum install redis -y\n\nsystemctl restart redis\nsystemctl enable redis\nsystemctl status redis\n\n\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n```\n\n\n\n### 修改配置文件\n\n路径：`/etc/redis.conf`，每个节点都需修改，bind ip以实际为准。\n\n```\nbind 192.168.10.71\ncluster-enabled yes\nmasterauth 'redis@szt2023nomeaning'\nrequirepass 'redis@szt2023nomeaning'\n```\n\nsystemctl restart redis\n\n\n\n### 配置集群\n\n```\nredis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\n\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\nab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected\n\n[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n>>> Performing hash slots allocation on 6 nodes...\nMaster[0] -> Slots 0 - 5460\nMaster[1] -> Slots 5461 - 10922\nMaster[2] -> Slots 10923 - 16383\nAdding replica 192.168.10.92:6379 to 192.168.10.71:6379\nAdding replica 192.168.10.93:6379 to 192.168.10.72:6379\nAdding replica 192.168.10.91:6379 to 192.168.10.73:6379\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\nCan I set the above configuration? (type 'yes' to accept): yes\n>>> Nodes configuration updated\n>>> Assign a different config epoch to each node\n>>> Sending CLUSTER MEET messages to join the cluster\nWaiting for the cluster to join\n.....\n>>> Performing Cluster Check (using node 192.168.10.71:6379)\nM: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379\n   slots:[0-5460] (5461 slots) master\n   1 additional replica(s)\nS: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379\n   slots: (0 slots) slave\n   replicates ab5b9040aa84704aa44e977b410ecd9f86227987\nM: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379\n   slots:[5461-10922] (5462 slots) master\n   1 additional replica(s)\nS: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379\n   slots: (0 slots) slave\n   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb\nM: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379\n   slots:[10923-16383] (5461 slots) master\n   1 additional replica(s)\nS: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379\n   slots: (0 slots) slave\n   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n```\n\n\n\n### 查看节点\n\n```\n[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.71:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\ncluster_slots_ok:16384\ncluster_slots_pfail:0\ncluster_slots_fail:0\ncluster_known_nodes:6\ncluster_size:3\ncluster_current_epoch:6\ncluster_my_epoch:1\ncluster_stats_messages_sent:1753\ncluster_stats_messages_received:1753\n\n192.168.10.71:6379> cluster nodes\n781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected\nd9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922\n00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected\ncf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383\nab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460\nc53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected\n192.168.10.71:6379> exit\n\n```\n\n","slug":"07中间件/4.1.Redis集群环境部署-yum","published":1,"date":"2023-09-01T13:06:37.580Z","updated":"2023-06-17T07:16:36.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o13000wzb8a5k4q9co3","content":"<h2 id=\"Redis集群环境部署\">Redis集群环境部署</h2>\n<h3 id=\"集群连接\">集群连接</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis集群-测试库</span><br><span class=\"line\">Redis连接：</span><br><span class=\"line\">192.168.10.71:6379</span><br><span class=\"line\">192.168.10.72:6379</span><br><span class=\"line\">192.168.10.73:6379</span><br><span class=\"line\">192.168.10.91:6379</span><br><span class=\"line\">192.168.10.92:6379</span><br><span class=\"line\">192.168.10.93:6379</span><br><span class=\"line\"></span><br><span class=\"line\">Redis密码：</span><br><span class=\"line\">86a1b907d54bf7010394bf316e183e67</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装redis\">安装redis</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release -y</span><br><span class=\"line\">yum install redis -y</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart redis</span><br><span class=\"line\">systemctl enable redis</span><br><span class=\"line\">systemctl status redis</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\">修改配置文件</h3>\n<p>路径：<code>/etc/redis.conf</code>，每个节点都需修改，bind ip以实际为准。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 192.168.10.71</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">masterauth &#x27;redis@szt2023nomeaning&#x27;</span><br><span class=\"line\">requirepass &#x27;redis@szt2023nomeaning&#x27;</span><br></pre></td></tr></table></figure>\n<p>systemctl restart redis</p>\n<h3 id=\"配置集群\">配置集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class=\"line\">Master[0] -&gt; Slots 0 - 5460</span><br><span class=\"line\">Master[1] -&gt; Slots 5461 - 10922</span><br><span class=\"line\">Master[2] -&gt; Slots 10923 - 16383</span><br><span class=\"line\">Adding replica 192.168.10.92:6379 to 192.168.10.71:6379</span><br><span class=\"line\">Adding replica 192.168.10.93:6379 to 192.168.10.72:6379</span><br><span class=\"line\">Adding replica 192.168.10.91:6379 to 192.168.10.73:6379</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class=\"line\">&gt;&gt;&gt; Nodes configuration updated</span><br><span class=\"line\">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class=\"line\">Waiting for the cluster to join</span><br><span class=\"line\">.....</span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.10.71:6379)</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check for open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看节点\">查看节点</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.71:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\">cluster_slots_ok:16384</span><br><span class=\"line\">cluster_slots_pfail:0</span><br><span class=\"line\">cluster_slots_fail:0</span><br><span class=\"line\">cluster_known_nodes:6</span><br><span class=\"line\">cluster_size:3</span><br><span class=\"line\">cluster_current_epoch:6</span><br><span class=\"line\">cluster_my_epoch:1</span><br><span class=\"line\">cluster_stats_messages_sent:1753</span><br><span class=\"line\">cluster_stats_messages_received:1753</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.71:6379&gt; cluster nodes</span><br><span class=\"line\">781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected</span><br><span class=\"line\">d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922</span><br><span class=\"line\">00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected</span><br><span class=\"line\">cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460</span><br><span class=\"line\">c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected</span><br><span class=\"line\">192.168.10.71:6379&gt; exit</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Redis集群环境部署\">Redis集群环境部署</h2>\n<h3 id=\"集群连接\">集群连接</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Redis集群-测试库</span><br><span class=\"line\">Redis连接：</span><br><span class=\"line\">192.168.10.71:6379</span><br><span class=\"line\">192.168.10.72:6379</span><br><span class=\"line\">192.168.10.73:6379</span><br><span class=\"line\">192.168.10.91:6379</span><br><span class=\"line\">192.168.10.92:6379</span><br><span class=\"line\">192.168.10.93:6379</span><br><span class=\"line\"></span><br><span class=\"line\">Redis密码：</span><br><span class=\"line\">86a1b907d54bf7010394bf316e183e67</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装redis\">安装redis</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release -y</span><br><span class=\"line\">yum install redis -y</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart redis</span><br><span class=\"line\">systemctl enable redis</span><br><span class=\"line\">systemctl status redis</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改配置文件\">修改配置文件</h3>\n<p>路径：<code>/etc/redis.conf</code>，每个节点都需修改，bind ip以实际为准。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 192.168.10.71</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">masterauth &#x27;redis@szt2023nomeaning&#x27;</span><br><span class=\"line\">requirepass &#x27;redis@szt2023nomeaning&#x27;</span><br></pre></td></tr></table></figure>\n<p>systemctl restart redis</p>\n<h3 id=\"配置集群\">配置集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 cluster nodes</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 :6379 myself,master - 0 0 0 connected</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli --cluster create 192.168.10.71:6379 192.168.10.72:6379 192.168.10.73:6379 192.168.10.91:6379 192.168.10.92:6379 192.168.10.93:6379 --cluster-replicas 1 -a 86a1b907d54bf7010394bf316e183e67</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class=\"line\">Master[0] -&gt; Slots 0 - 5460</span><br><span class=\"line\">Master[1] -&gt; Slots 5461 - 10922</span><br><span class=\"line\">Master[2] -&gt; Slots 10923 - 16383</span><br><span class=\"line\">Adding replica 192.168.10.92:6379 to 192.168.10.71:6379</span><br><span class=\"line\">Adding replica 192.168.10.93:6379 to 192.168.10.72:6379</span><br><span class=\"line\">Adding replica 192.168.10.91:6379 to 192.168.10.73:6379</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">Can I set the above configuration? (type &#x27;yes&#x27; to accept): yes</span><br><span class=\"line\">&gt;&gt;&gt; Nodes configuration updated</span><br><span class=\"line\">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class=\"line\">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class=\"line\">Waiting for the cluster to join</span><br><span class=\"line\">.....</span><br><span class=\"line\">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.10.71:6379)</span><br><span class=\"line\">M: ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379</span><br><span class=\"line\">   slots:[0-5460] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates ab5b9040aa84704aa44e977b410ecd9f86227987</span><br><span class=\"line\">M: d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379</span><br><span class=\"line\">   slots:[5461-10922] (5462 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: 00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb</span><br><span class=\"line\">M: cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379</span><br><span class=\"line\">   slots:[10923-16383] (5461 slots) master</span><br><span class=\"line\">   1 additional replica(s)</span><br><span class=\"line\">S: c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379</span><br><span class=\"line\">   slots: (0 slots) slave</span><br><span class=\"line\">   replicates d9a7b832cb43346df9406b640dc1590cbce35dbb</span><br><span class=\"line\">[OK] All nodes agree about slots configuration.</span><br><span class=\"line\">&gt;&gt;&gt; Check for open slots...</span><br><span class=\"line\">&gt;&gt;&gt; Check slots coverage...</span><br><span class=\"line\">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看节点\">查看节点</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node71 mysqld_exporter]# redis-cli -h 192.168.10.71 -p 6379 -a 86a1b907d54bf7010394bf316e183e67 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.71:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\">cluster_slots_ok:16384</span><br><span class=\"line\">cluster_slots_pfail:0</span><br><span class=\"line\">cluster_slots_fail:0</span><br><span class=\"line\">cluster_known_nodes:6</span><br><span class=\"line\">cluster_size:3</span><br><span class=\"line\">cluster_current_epoch:6</span><br><span class=\"line\">cluster_my_epoch:1</span><br><span class=\"line\">cluster_stats_messages_sent:1753</span><br><span class=\"line\">cluster_stats_messages_received:1753</span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.71:6379&gt; cluster nodes</span><br><span class=\"line\">781262f783c114a27b12db5fb563ea4a2e74d4e2 192.168.10.92:6379 slave ab5b9040aa84704aa44e977b410ecd9f86227987 0 1686623763541 5 connected</span><br><span class=\"line\">d9a7b832cb43346df9406b640dc1590cbce35dbb 192.168.10.72:6379 master - 0 1686623765546 2 connected 5461-10922</span><br><span class=\"line\">00d82af292410901b8afda616188c5d706cf7aa1 192.168.10.91:6379 slave cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 0 1686623759523 4 connected</span><br><span class=\"line\">cf991d4a6fb1ed70764fa9d46c25b3f07e070bdb 192.168.10.73:6379 master - 0 1686623760526 3 connected 10923-16383</span><br><span class=\"line\">ab5b9040aa84704aa44e977b410ecd9f86227987 192.168.10.71:6379 myself,master - 0 0 1 connected 0-5460</span><br><span class=\"line\">c53e8ac7858b8892f6e8aafc7d4334ef3f451f94 192.168.10.93:6379 slave d9a7b832cb43346df9406b640dc1590cbce35dbb 0 1686623764546 6 connected</span><br><span class=\"line\">192.168.10.71:6379&gt; exit</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"### 配置HOST\n默认配置`inventory = /etc/ansible/hosts`\n```shell\n[local-node001]\n192.168.139.11 hostname=local-node001 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node002]\n192.168.139.12 hostname=local-node002 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node003]\n192.168.139.13 hostname=local-node003 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node004]\n192.168.139.14 hostname=local-node004 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node005]\n192.168.139.15 hostname=local-node005 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node006]\n192.168.139.16 hostname=local-node006 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node007]\n192.168.139.17 hostname=local-node007 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node008]\n192.168.139.18 hostname=local-node008 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[localcluser:children]\nlocal-node001\nlocal-node002\nlocal-node003\nlocal-node004\nlocal-node005\nlocal-node006\nlocal-node007\nlocal-node008\n```\n\n### 主机命名\n创建文件：`set_hostname.yaml`\n```shell\n- hosts: localcluser\n  become: yes\n  become_user: root\n  become_method: sudo\n  tasks:\n  - name: set hostname\n    shell: hostnamectl set-hostname {{hostname}}\n\n# 执行\nansible-playbook set_hostname.yaml\n[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details\nPLAY [localcluser] *****************\nTASK [Gathering Facts] *************\nok: [192.168.10.182]\nok: [192.168.10.183]\nok: [192.168.10.185]\nTASK [set hostname] ****************\nchanged: [192.168.10.182]\nchanged: [192.168.10.183]\nchanged: [192.168.10.181]\nPLAY RECAP *************************\n192.168.10.181 : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n \n\n\n### 文件下发\n","source":"_posts/07中间件/A.集群自动化管理.Ansible.md","raw":"### 配置HOST\n默认配置`inventory = /etc/ansible/hosts`\n```shell\n[local-node001]\n192.168.139.11 hostname=local-node001 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node002]\n192.168.139.12 hostname=local-node002 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node003]\n192.168.139.13 hostname=local-node003 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node004]\n192.168.139.14 hostname=local-node004 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node005]\n192.168.139.15 hostname=local-node005 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node006]\n192.168.139.16 hostname=local-node006 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node007]\n192.168.139.17 hostname=local-node007 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[local-node008]\n192.168.139.18 hostname=local-node008 ansible_ssh_user=idszt ansible_ssh_pass='idszt' ansible_become_pass=\"idszt\"\n[localcluser:children]\nlocal-node001\nlocal-node002\nlocal-node003\nlocal-node004\nlocal-node005\nlocal-node006\nlocal-node007\nlocal-node008\n```\n\n### 主机命名\n创建文件：`set_hostname.yaml`\n```shell\n- hosts: localcluser\n  become: yes\n  become_user: root\n  become_method: sudo\n  tasks:\n  - name: set hostname\n    shell: hostnamectl set-hostname {{hostname}}\n\n# 执行\nansible-playbook set_hostname.yaml\n[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details\nPLAY [localcluser] *****************\nTASK [Gathering Facts] *************\nok: [192.168.10.182]\nok: [192.168.10.183]\nok: [192.168.10.185]\nTASK [set hostname] ****************\nchanged: [192.168.10.182]\nchanged: [192.168.10.183]\nchanged: [192.168.10.181]\nPLAY RECAP *************************\n192.168.10.181 : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n \n\n\n### 文件下发\n","slug":"07中间件/A.集群自动化管理.Ansible","published":1,"date":"2023-09-01T13:06:37.640Z","updated":"2023-07-11T02:48:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o13000xzb8aca4q8gpu","content":"<h3 id=\"配置HOST\">配置HOST</h3>\n<p>默认配置<code>inventory = /etc/ansible/hosts</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[local-node001]</span><br><span class=\"line\">192.168.139.11 hostname=local-node001 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node002]</span><br><span class=\"line\">192.168.139.12 hostname=local-node002 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node003]</span><br><span class=\"line\">192.168.139.13 hostname=local-node003 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node004]</span><br><span class=\"line\">192.168.139.14 hostname=local-node004 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node005]</span><br><span class=\"line\">192.168.139.15 hostname=local-node005 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node006]</span><br><span class=\"line\">192.168.139.16 hostname=local-node006 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node007]</span><br><span class=\"line\">192.168.139.17 hostname=local-node007 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node008]</span><br><span class=\"line\">192.168.139.18 hostname=local-node008 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[localcluser:children]</span><br><span class=\"line\">local-node001</span><br><span class=\"line\">local-node002</span><br><span class=\"line\">local-node003</span><br><span class=\"line\">local-node004</span><br><span class=\"line\">local-node005</span><br><span class=\"line\">local-node006</span><br><span class=\"line\">local-node007</span><br><span class=\"line\">local-node008</span><br></pre></td></tr></table></figure>\n<h3 id=\"主机命名\">主机命名</h3>\n<p>创建文件：<code>set_hostname.yaml</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: localcluser</span><br><span class=\"line\">  become: yes</span><br><span class=\"line\">  become_user: root</span><br><span class=\"line\">  become_method: sudo</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: set hostname</span><br><span class=\"line\">    shell: hostnamectl set-hostname &#123;&#123;hostname&#125;&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">执行</span></span><br><span class=\"line\">ansible-playbook set_hostname.yaml</span><br><span class=\"line\">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class=\"line\">PLAY [localcluser] *****************</span><br><span class=\"line\">TASK [Gathering Facts] *************</span><br><span class=\"line\">ok: [192.168.10.182]</span><br><span class=\"line\">ok: [192.168.10.183]</span><br><span class=\"line\">ok: [192.168.10.185]</span><br><span class=\"line\">TASK [set hostname] ****************</span><br><span class=\"line\">changed: [192.168.10.182]</span><br><span class=\"line\">changed: [192.168.10.183]</span><br><span class=\"line\">changed: [192.168.10.181]</span><br><span class=\"line\">PLAY RECAP *************************</span><br><span class=\"line\">192.168.10.181 : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"文件下发\">文件下发</h3>\n","excerpt":"","more":"<h3 id=\"配置HOST\">配置HOST</h3>\n<p>默认配置<code>inventory = /etc/ansible/hosts</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[local-node001]</span><br><span class=\"line\">192.168.139.11 hostname=local-node001 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node002]</span><br><span class=\"line\">192.168.139.12 hostname=local-node002 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node003]</span><br><span class=\"line\">192.168.139.13 hostname=local-node003 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node004]</span><br><span class=\"line\">192.168.139.14 hostname=local-node004 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node005]</span><br><span class=\"line\">192.168.139.15 hostname=local-node005 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node006]</span><br><span class=\"line\">192.168.139.16 hostname=local-node006 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node007]</span><br><span class=\"line\">192.168.139.17 hostname=local-node007 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[local-node008]</span><br><span class=\"line\">192.168.139.18 hostname=local-node008 ansible_ssh_user=idszt ansible_ssh_pass=&#x27;idszt&#x27; ansible_become_pass=&quot;idszt&quot;</span><br><span class=\"line\">[localcluser:children]</span><br><span class=\"line\">local-node001</span><br><span class=\"line\">local-node002</span><br><span class=\"line\">local-node003</span><br><span class=\"line\">local-node004</span><br><span class=\"line\">local-node005</span><br><span class=\"line\">local-node006</span><br><span class=\"line\">local-node007</span><br><span class=\"line\">local-node008</span><br></pre></td></tr></table></figure>\n<h3 id=\"主机命名\">主机命名</h3>\n<p>创建文件：<code>set_hostname.yaml</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: localcluser</span><br><span class=\"line\">  become: yes</span><br><span class=\"line\">  become_user: root</span><br><span class=\"line\">  become_method: sudo</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: set hostname</span><br><span class=\"line\">    shell: hostnamectl set-hostname &#123;&#123;hostname&#125;&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">执行</span></span><br><span class=\"line\">ansible-playbook set_hostname.yaml</span><br><span class=\"line\">[WARNING]: Invalid characters were found in group names but not replaced, use -vvvv to see details</span><br><span class=\"line\">PLAY [localcluser] *****************</span><br><span class=\"line\">TASK [Gathering Facts] *************</span><br><span class=\"line\">ok: [192.168.10.182]</span><br><span class=\"line\">ok: [192.168.10.183]</span><br><span class=\"line\">ok: [192.168.10.185]</span><br><span class=\"line\">TASK [set hostname] ****************</span><br><span class=\"line\">changed: [192.168.10.182]</span><br><span class=\"line\">changed: [192.168.10.183]</span><br><span class=\"line\">changed: [192.168.10.181]</span><br><span class=\"line\">PLAY RECAP *************************</span><br><span class=\"line\">192.168.10.181 : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"文件下发\">文件下发</h3>\n"},{"_content":"### 安装docker\n```shell\ncd /data/program/docker_install\nyum localinstall *.rpm -y\n\n已安装:\n  container-selinux.noarch 2:2.119.2-1.911c772.el7_8\n  containerd.io.x86_64 0:1.6.21-3.1.el7\n  docker-buildx-plugin.x86_64 0:0.10.5-1.el7\n  docker-ce.x86_64 3:24.0.2-1.el7\n  docker-ce-cli.x86_64 1:24.0.2-1.el7\n  docker-ce-rootless-extras.x86_64 0:24.0.2-1.el7\n  docker-compose-plugin.x86_64 0:2.18.1-1.el7\n  fuse-overlayfs.x86_64 0:0.7.2-6.el7_8\n  fuse3-libs.x86_64 0:3.6.1-4.el7\n  slirp4netns.x86_64 0:0.4.3-4.el7_8\n完毕！\n# 确认版本\n[root@idszt-node102 docker_install]# docker --version\nDocker version 24.0.2, build cb74dfc\n# 设置启动\nsystemctl enable docker.service\nsystemctl start docker.service\n```\n\n### 导入镜像\n\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\n\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\ndocker save 412b8cc72e4a > /root/docker_image/mysql-8.0.32.tar\n\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd:3.0\n\ndocker load < mysql-8.0.32.tar\ndocker tag 412b8cc72e4a mysql:8.0.32\n\n\nip route add default via 113.98.244.161\nroute add default gw 113.98.244.161\n","source":"_posts/07中间件/A.新机配置.md","raw":"### 安装docker\n```shell\ncd /data/program/docker_install\nyum localinstall *.rpm -y\n\n已安装:\n  container-selinux.noarch 2:2.119.2-1.911c772.el7_8\n  containerd.io.x86_64 0:1.6.21-3.1.el7\n  docker-buildx-plugin.x86_64 0:0.10.5-1.el7\n  docker-ce.x86_64 3:24.0.2-1.el7\n  docker-ce-cli.x86_64 1:24.0.2-1.el7\n  docker-ce-rootless-extras.x86_64 0:24.0.2-1.el7\n  docker-compose-plugin.x86_64 0:2.18.1-1.el7\n  fuse-overlayfs.x86_64 0:0.7.2-6.el7_8\n  fuse3-libs.x86_64 0:3.6.1-4.el7\n  slirp4netns.x86_64 0:0.4.3-4.el7_8\n完毕！\n# 确认版本\n[root@idszt-node102 docker_install]# docker --version\nDocker version 24.0.2, build cb74dfc\n# 设置启动\nsystemctl enable docker.service\nsystemctl start docker.service\n```\n\n### 导入镜像\n\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\n\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\ndocker save 412b8cc72e4a > /root/docker_image/mysql-8.0.32.tar\n\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd:3.0\n\ndocker load < mysql-8.0.32.tar\ndocker tag 412b8cc72e4a mysql:8.0.32\n\n\nip route add default via 113.98.244.161\nroute add default gw 113.98.244.161\n","slug":"07中间件/A.新机配置","published":1,"date":"2023-09-01T13:06:37.640Z","updated":"2023-08-02T06:26:24.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o14000yzb8aczb170xl","content":"<h3 id=\"安装docker\">安装docker</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /data/program/docker_install</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"></span><br><span class=\"line\">已安装:</span><br><span class=\"line\">  container-selinux.noarch 2:2.119.2-1.911c772.el7_8</span><br><span class=\"line\">  containerd.io.x86_64 0:1.6.21-3.1.el7</span><br><span class=\"line\">  docker-buildx-plugin.x86_64 0:0.10.5-1.el7</span><br><span class=\"line\">  docker-ce.x86_64 3:24.0.2-1.el7</span><br><span class=\"line\">  docker-ce-cli.x86_64 1:24.0.2-1.el7</span><br><span class=\"line\">  docker-ce-rootless-extras.x86_64 0:24.0.2-1.el7</span><br><span class=\"line\">  docker-compose-plugin.x86_64 0:2.18.1-1.el7</span><br><span class=\"line\">  fuse-overlayfs.x86_64 0:0.7.2-6.el7_8</span><br><span class=\"line\">  fuse3-libs.x86_64 0:3.6.1-4.el7</span><br><span class=\"line\">  slirp4netns.x86_64 0:0.4.3-4.el7_8</span><br><span class=\"line\">完毕！</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">确认版本</span></span><br><span class=\"line\">[root@idszt-node102 docker_install]# docker --version</span><br><span class=\"line\">Docker version 24.0.2, build cb74dfc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置启动</span></span><br><span class=\"line\">systemctl enable docker.service</span><br><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"导入镜像\">导入镜像</h3>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25</p>\n<p>docker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar<br>\ndocker save 412b8cc72e4a &gt; /root/docker_image/mysql-8.0.32.tar</p>\n<p>docker load &lt; nginx-1.25.tar<br>\ndocker tag 021283c8eb95 nginx:1.25</p>\n<p>docker load &lt; vsftpd-3.0.tar<br>\ndocker tag 9bfb39139661 fauria/vsftpd:3.0</p>\n<p>docker load &lt; mysql-8.0.32.tar<br>\ndocker tag 412b8cc72e4a mysql:8.0.32</p>\n<p>ip route add default via 113.98.244.161<br>\nroute add default gw 113.98.244.161</p>\n","excerpt":"","more":"<h3 id=\"安装docker\">安装docker</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /data/program/docker_install</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"></span><br><span class=\"line\">已安装:</span><br><span class=\"line\">  container-selinux.noarch 2:2.119.2-1.911c772.el7_8</span><br><span class=\"line\">  containerd.io.x86_64 0:1.6.21-3.1.el7</span><br><span class=\"line\">  docker-buildx-plugin.x86_64 0:0.10.5-1.el7</span><br><span class=\"line\">  docker-ce.x86_64 3:24.0.2-1.el7</span><br><span class=\"line\">  docker-ce-cli.x86_64 1:24.0.2-1.el7</span><br><span class=\"line\">  docker-ce-rootless-extras.x86_64 0:24.0.2-1.el7</span><br><span class=\"line\">  docker-compose-plugin.x86_64 0:2.18.1-1.el7</span><br><span class=\"line\">  fuse-overlayfs.x86_64 0:0.7.2-6.el7_8</span><br><span class=\"line\">  fuse3-libs.x86_64 0:3.6.1-4.el7</span><br><span class=\"line\">  slirp4netns.x86_64 0:0.4.3-4.el7_8</span><br><span class=\"line\">完毕！</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">确认版本</span></span><br><span class=\"line\">[root@idszt-node102 docker_install]# docker --version</span><br><span class=\"line\">Docker version 24.0.2, build cb74dfc</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置启动</span></span><br><span class=\"line\">systemctl enable docker.service</span><br><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n<h3 id=\"导入镜像\">导入镜像</h3>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25</p>\n<p>docker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar<br>\ndocker save 412b8cc72e4a &gt; /root/docker_image/mysql-8.0.32.tar</p>\n<p>docker load &lt; nginx-1.25.tar<br>\ndocker tag 021283c8eb95 nginx:1.25</p>\n<p>docker load &lt; vsftpd-3.0.tar<br>\ndocker tag 9bfb39139661 fauria/vsftpd:3.0</p>\n<p>docker load &lt; mysql-8.0.32.tar<br>\ndocker tag 412b8cc72e4a mysql:8.0.32</p>\n<p>ip route add default via 113.98.244.161<br>\nroute add default gw 113.98.244.161</p>\n"},{"_content":"## Docker\n\nLinux离线下载包\n\n```shell\nyum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software\n\n## 安装docker-compose\nyum install -y epel-release && yum install -y docker-compose --downloadonly --downloaddir=/root/software\n[root@idszt-node002 software]# docker-compose --version\ndocker-compose version 1.18.0, build 8dd22a9\n\n\n\n[root@localhost ~]# cd software/\n[root@localhost software]# yum localinstall *.rpm -y\n[root@localhost software]# docker --version\nDocker version 24.0.2, build cb74dfc\n\nsystemctl enable docker.service\nsystemctl start docker.service\n```\n\n## 微服务中间件\n部署之前请核对开发环境版本\n```\nredis               7.0.11     0ec8ab59a35f       117MB\nzookeeper           3.7.1      2665a3b2800b       273MB\nwurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB\nnacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB\nminio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB\n```\n\n### tag标签\ndocker save d4cdde7ce77b > /root/docker_image/grafana-10.0.2.tar\ndocker save e1fbd49323c6 > /root/docker_image/prometheus-v2.45.0.tar\ndocker save c8568f914cd2 > /root/docker_image/alertmanager-v0.25.0.tar\n\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\n\n```\ndocker load < redis-7.0.11.tar\ndocker tag 0ec8ab59a35f redis:7.0.11\n\ndocker load < zookeeper-3.7.1.tar\ndocker tag 2665a3b2800b zookeeper:3.7.1\n\n\ndocker load < kafka-2.13_2.8.1.tar\ndocker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1\n\ndocker load < nacos-server-v2.1.1.tar\ndocker tag 7c38e05f6228 nacos/nacos-server:v2.1.1\n\ndocker load < minio-RELEASE.2023-05-04T21-44-30Z.tar\ndocker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z\n\ndocker load < elasticsearch-7.15.2.tar\ndocker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2\n\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd\n\n\n\n\n```\n\n\n\ndocker images\n\n[root@idszt-node007 docker_mirror]# docker images\nREPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE\nredis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB\nminio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB\nnacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB\nzookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB\nwurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2                         9cd5b752c86e   20 months ago   791MB\n\n\n\n\n\n\n","source":"_posts/07中间件/B.集群容器部署.Docker.md","raw":"## Docker\n\nLinux离线下载包\n\n```shell\nyum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software\n\n## 安装docker-compose\nyum install -y epel-release && yum install -y docker-compose --downloadonly --downloaddir=/root/software\n[root@idszt-node002 software]# docker-compose --version\ndocker-compose version 1.18.0, build 8dd22a9\n\n\n\n[root@localhost ~]# cd software/\n[root@localhost software]# yum localinstall *.rpm -y\n[root@localhost software]# docker --version\nDocker version 24.0.2, build cb74dfc\n\nsystemctl enable docker.service\nsystemctl start docker.service\n```\n\n## 微服务中间件\n部署之前请核对开发环境版本\n```\nredis               7.0.11     0ec8ab59a35f       117MB\nzookeeper           3.7.1      2665a3b2800b       273MB\nwurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB\nnacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB\nminio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB\n```\n\n### tag标签\ndocker save d4cdde7ce77b > /root/docker_image/grafana-10.0.2.tar\ndocker save e1fbd49323c6 > /root/docker_image/prometheus-v2.45.0.tar\ndocker save c8568f914cd2 > /root/docker_image/alertmanager-v0.25.0.tar\n\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\n\n```\ndocker load < redis-7.0.11.tar\ndocker tag 0ec8ab59a35f redis:7.0.11\n\ndocker load < zookeeper-3.7.1.tar\ndocker tag 2665a3b2800b zookeeper:3.7.1\n\n\ndocker load < kafka-2.13_2.8.1.tar\ndocker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1\n\ndocker load < nacos-server-v2.1.1.tar\ndocker tag 7c38e05f6228 nacos/nacos-server:v2.1.1\n\ndocker load < minio-RELEASE.2023-05-04T21-44-30Z.tar\ndocker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z\n\ndocker load < elasticsearch-7.15.2.tar\ndocker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2\n\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd\n\n\n\n\n```\n\n\n\ndocker images\n\n[root@idszt-node007 docker_mirror]# docker images\nREPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE\nredis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB\nminio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB\nnacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB\nzookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB\nwurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2                         9cd5b752c86e   20 months ago   791MB\n\n\n\n\n\n\n","slug":"07中间件/B.集群容器部署.Docker","published":1,"date":"2023-09-01T13:06:37.650Z","updated":"2023-07-31T06:21:10.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o15000zzb8acs3sg8yt","content":"<h2 id=\"Docker\">Docker</h2>\n<p>Linux离线下载包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 安装docker-compose</span></span></span><br><span class=\"line\">yum install -y epel-release &amp;&amp; yum install -y docker-compose --downloadonly --downloaddir=/root/software</span><br><span class=\"line\">[root@idszt-node002 software]# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.18.0, build 8dd22a9</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# cd software/</span><br><span class=\"line\">[root@localhost software]# yum localinstall *.rpm -y</span><br><span class=\"line\">[root@localhost software]# docker --version</span><br><span class=\"line\">Docker version 24.0.2, build cb74dfc</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable docker.service</span><br><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"微服务中间件\">微服务中间件</h2>\n<p>部署之前请核对开发环境版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis               7.0.11     0ec8ab59a35f       117MB</span><br><span class=\"line\">zookeeper           3.7.1      2665a3b2800b       273MB</span><br><span class=\"line\">wurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB</span><br><span class=\"line\">nacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB</span><br><span class=\"line\">minio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB</span><br></pre></td></tr></table></figure>\n<h3 id=\"tag标签\">tag标签</h3>\n<p>docker save d4cdde7ce77b &gt; /root/docker_image/grafana-10.0.2.tar<br>\ndocker save e1fbd49323c6 &gt; /root/docker_image/prometheus-v2.45.0.tar<br>\ndocker save c8568f914cd2 &gt; /root/docker_image/alertmanager-v0.25.0.tar</p>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25<br>\ndocker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load &lt; redis-7.0.11.tar</span><br><span class=\"line\">docker tag 0ec8ab59a35f redis:7.0.11</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; zookeeper-3.7.1.tar</span><br><span class=\"line\">docker tag 2665a3b2800b zookeeper:3.7.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; kafka-2.13_2.8.1.tar</span><br><span class=\"line\">docker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nacos-server-v2.1.1.tar</span><br><span class=\"line\">docker tag 7c38e05f6228 nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; minio-RELEASE.2023-05-04T21-44-30Z.tar</span><br><span class=\"line\">docker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; elasticsearch-7.15.2.tar</span><br><span class=\"line\">docker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nginx-1.25.tar</span><br><span class=\"line\">docker tag 021283c8eb95 nginx:1.25</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; vsftpd-3.0.tar</span><br><span class=\"line\">docker tag 9bfb39139661 fauria/vsftpd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>docker images</p>\n<p>[root@idszt-node007 docker_mirror]# docker images<br>\nREPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE<br>\nredis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB<br>\nminio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB<br>\nnacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB<br>\nzookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB<br>\nwurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB<br>\n<a href=\"http://docker.elastic.co/elasticsearch/elasticsearch\">docker.elastic.co/elasticsearch/elasticsearch</a>   7.15.2                         9cd5b752c86e   20 months ago   791MB</p>\n","excerpt":"","more":"<h2 id=\"Docker\">Docker</h2>\n<p>Linux离线下载包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 安装docker-compose</span></span></span><br><span class=\"line\">yum install -y epel-release &amp;&amp; yum install -y docker-compose --downloadonly --downloaddir=/root/software</span><br><span class=\"line\">[root@idszt-node002 software]# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.18.0, build 8dd22a9</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# cd software/</span><br><span class=\"line\">[root@localhost software]# yum localinstall *.rpm -y</span><br><span class=\"line\">[root@localhost software]# docker --version</span><br><span class=\"line\">Docker version 24.0.2, build cb74dfc</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable docker.service</span><br><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"微服务中间件\">微服务中间件</h2>\n<p>部署之前请核对开发环境版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis               7.0.11     0ec8ab59a35f       117MB</span><br><span class=\"line\">zookeeper           3.7.1      2665a3b2800b       273MB</span><br><span class=\"line\">wurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB</span><br><span class=\"line\">nacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB</span><br><span class=\"line\">minio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB</span><br></pre></td></tr></table></figure>\n<h3 id=\"tag标签\">tag标签</h3>\n<p>docker save d4cdde7ce77b &gt; /root/docker_image/grafana-10.0.2.tar<br>\ndocker save e1fbd49323c6 &gt; /root/docker_image/prometheus-v2.45.0.tar<br>\ndocker save c8568f914cd2 &gt; /root/docker_image/alertmanager-v0.25.0.tar</p>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25<br>\ndocker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load &lt; redis-7.0.11.tar</span><br><span class=\"line\">docker tag 0ec8ab59a35f redis:7.0.11</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; zookeeper-3.7.1.tar</span><br><span class=\"line\">docker tag 2665a3b2800b zookeeper:3.7.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; kafka-2.13_2.8.1.tar</span><br><span class=\"line\">docker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nacos-server-v2.1.1.tar</span><br><span class=\"line\">docker tag 7c38e05f6228 nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; minio-RELEASE.2023-05-04T21-44-30Z.tar</span><br><span class=\"line\">docker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; elasticsearch-7.15.2.tar</span><br><span class=\"line\">docker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nginx-1.25.tar</span><br><span class=\"line\">docker tag 021283c8eb95 nginx:1.25</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; vsftpd-3.0.tar</span><br><span class=\"line\">docker tag 9bfb39139661 fauria/vsftpd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>docker images</p>\n<p>[root@idszt-node007 docker_mirror]# docker images<br>\nREPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE<br>\nredis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB<br>\nminio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB<br>\nnacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB<br>\nzookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB<br>\nwurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB<br>\n<a href=\"http://docker.elastic.co/elasticsearch/elasticsearch\">docker.elastic.co/elasticsearch/elasticsearch</a>   7.15.2                         9cd5b752c86e   20 months ago   791MB</p>\n"},{"_content":"docker swarm init --advertise-addr 192.168.10.187\n\n\nSwarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n\n\ndocker node ls\n\ndocker network create -d overlay --attachable swarm-net\n\n\ndocker-compose exec prod_cluster_zookeeper_02 bash\n\n\n\n\n\n\n\n安装docker-compose\n\nyum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose","source":"_posts/07中间件/B.集群容器部署.Docker-compose.md","raw":"docker swarm init --advertise-addr 192.168.10.187\n\n\nSwarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n\n\ndocker node ls\n\ndocker network create -d overlay --attachable swarm-net\n\n\ndocker-compose exec prod_cluster_zookeeper_02 bash\n\n\n\n\n\n\n\n安装docker-compose\n\nyum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose","slug":"07中间件/B.集群容器部署.Docker-compose","published":1,"date":"2023-09-01T13:06:37.650Z","updated":"2023-07-31T06:21:10.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o150010zb8a3zgye45a","content":"<p>docker swarm init --advertise-addr 192.168.10.187</p>\n<p>Swarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.</p>\n<p>To add a worker to this swarm, run the following command:</p>\n<pre><code>docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n</code></pre>\n<p>To add a manager to this swarm, run ‘docker swarm join-token manager’ and follow the instructions.</p>\n<p>docker node ls</p>\n<p>docker network create -d overlay --attachable swarm-net</p>\n<p>docker-compose exec prod_cluster_zookeeper_02 bash</p>\n<p>安装docker-compose</p>\n<p>yum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose</p>\n","excerpt":"","more":"<p>docker swarm init --advertise-addr 192.168.10.187</p>\n<p>Swarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.</p>\n<p>To add a worker to this swarm, run the following command:</p>\n<pre><code>docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n</code></pre>\n<p>To add a manager to this swarm, run ‘docker swarm join-token manager’ and follow the instructions.</p>\n<p>docker node ls</p>\n<p>docker network create -d overlay --attachable swarm-net</p>\n<p>docker-compose exec prod_cluster_zookeeper_02 bash</p>\n<p>安装docker-compose</p>\n<p>yum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose</p>\n"},{"_content":"\n\n## 2、端口说明\n\n- 探针：\n- Nacos:8848/9848/9849\n\n\n\n## 3、防火墙设置\n\n```shell\n# 查看规则\nfirewall-cmd --list-all\nfirewall-cmd --reload\nsystemctl restart firewalld.service\nsystemctl stop firewalld.service\nsystemctl start firewalld.service\nsystemctl status firewalld.service\n# 删除规则\nfirewall-cmd --permanent --remove-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.10.66\" port protocol=\"tcp\" port=\"80\" accept\"\nfirewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.0/24\" port port=\"22\" protocol=\"tcp\" accept'\n\n\n# 添加规则（主机）\nfirewall-cmd --permanent --add-source=192.168.140.12\nfirewall-cmd --reload\nfirewall-cmd --permanent --add-source=192.168.240.222\nfirewall-cmd --reload\nfirewall-cmd --permanent --remove-port=21191/tcp\nfirewall-cmd --reload\nfirewall-cmd --permanent --remove-source=192.168.240.218\n\n# Elasticsearch\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.10.66\" port protocol=\"tcp\" port=\"80\" accept\"\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"59.36.150.13\" port protocol=\"tcp\" port=\"18848\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.223\" port protocol=\"tcp\" port=\"16379\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.222\" port protocol=\"tcp\" port=\"8195\" accept'\nfirewall-cmd --reload\n\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.225\" port protocol=\"tcp\" port=\"3309\" accept'\nfirewall-cmd --reload\n\n# Kafka\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.222\" port protocol=\"tcp\" port=\"10021\" accept'\nfirewall-cmd --reload\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.218\" port port=\"50000-55000\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.223\" port port=\"2011-2012\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-port=21191/tcp\nfirewall-cmd --reload\n\n\n\nfirewall-cmd --remove-rich-rule  '' --permanent\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.218\" port port=\"3309\" protocol=\"tcp\" accept'\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.223\" port port=\"3000\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\n## 添加ip有效\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.216\"   accept\" \nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.212\" accept\"\nfirewall-cmd --reload\n# Minio\ncat /etc/firewalld/zones/public.xml\n\n\n# Nacos\n# Redis\n\n\n# Zookeeper\n## node001\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.212\" port protocol=\"tcp\" port=\"12181\" accept'\n\n\n\n\n\n# MySQL\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.220\" port protocol=\"tcp\" port=\"18848\" accept'\nfirewall-cmd --reload && firewall-cmd --list-all\n\n\n```\nfirewall-cmd --list-all && firewall-cmd --reload\n\n\nnetstat -lnpt \n\nnetstat -nat | grep -i :22\n\ntcpkill -i any -9 host 49.7.40.205\n\nsudo tcpkill -i any 'port 22'\n\nnetstat -antp|grep tcp[^6]\n\n\nroute add -host 192.168.140.11 gw 192.168.240.1\nroute del -host 192.168.140.0 gw 192.168.240.1\n\n#添加一条路由(发往192.168.140.0这个网段的全部要经过网关192.168.240.1)\nroute add -net 192.168.140.0 netmask 255.255.255.0 gw 192.168.240.1\n1、第一点：机房暂未提供堡垒机（外部原因）\n2、第三点：nacos不打算升级,因当前版本是官方建议的稳定版本。该组件不对集群主机外提供服务，已发现的漏洞存在于对安全不产生影响。\n3、第四点：大部分已修改（暂无法完全使用加密字符串）\n\n\nansible-playbook /etc/ansible/script/commom/op\n\n\nfirewall-cmd --list-all|grep '240.22[0-9]'\n\n\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.212\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.220\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.222\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.223\" accept\"\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.211\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.220\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.222\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.223\" accept\"\nfirewall-cmd --reload","source":"_posts/07中间件/E.集群防火墙配置.md","raw":"\n\n## 2、端口说明\n\n- 探针：\n- Nacos:8848/9848/9849\n\n\n\n## 3、防火墙设置\n\n```shell\n# 查看规则\nfirewall-cmd --list-all\nfirewall-cmd --reload\nsystemctl restart firewalld.service\nsystemctl stop firewalld.service\nsystemctl start firewalld.service\nsystemctl status firewalld.service\n# 删除规则\nfirewall-cmd --permanent --remove-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.10.66\" port protocol=\"tcp\" port=\"80\" accept\"\nfirewall-cmd --permanent --remove-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.0/24\" port port=\"22\" protocol=\"tcp\" accept'\n\n\n# 添加规则（主机）\nfirewall-cmd --permanent --add-source=192.168.140.12\nfirewall-cmd --reload\nfirewall-cmd --permanent --add-source=192.168.240.222\nfirewall-cmd --reload\nfirewall-cmd --permanent --remove-port=21191/tcp\nfirewall-cmd --reload\nfirewall-cmd --permanent --remove-source=192.168.240.218\n\n# Elasticsearch\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.10.66\" port protocol=\"tcp\" port=\"80\" accept\"\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"59.36.150.13\" port protocol=\"tcp\" port=\"18848\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.223\" port protocol=\"tcp\" port=\"16379\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.222\" port protocol=\"tcp\" port=\"8195\" accept'\nfirewall-cmd --reload\n\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.225\" port protocol=\"tcp\" port=\"3309\" accept'\nfirewall-cmd --reload\n\n# Kafka\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.222\" port protocol=\"tcp\" port=\"10021\" accept'\nfirewall-cmd --reload\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.218\" port port=\"50000-55000\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.223\" port port=\"2011-2012\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-port=21191/tcp\nfirewall-cmd --reload\n\n\n\nfirewall-cmd --remove-rich-rule  '' --permanent\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.218\" port port=\"3309\" protocol=\"tcp\" accept'\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.223\" port port=\"3000\" protocol=\"tcp\" accept'\nfirewall-cmd --reload\n\n## 添加ip有效\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.216\"   accept\" \nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.212\" accept\"\nfirewall-cmd --reload\n# Minio\ncat /etc/firewalld/zones/public.xml\n\n\n# Nacos\n# Redis\n\n\n# Zookeeper\n## node001\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.212\" port protocol=\"tcp\" port=\"12181\" accept'\n\n\n\n\n\n# MySQL\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.220\" port protocol=\"tcp\" port=\"18848\" accept'\nfirewall-cmd --reload && firewall-cmd --list-all\n\n\n```\nfirewall-cmd --list-all && firewall-cmd --reload\n\n\nnetstat -lnpt \n\nnetstat -nat | grep -i :22\n\ntcpkill -i any -9 host 49.7.40.205\n\nsudo tcpkill -i any 'port 22'\n\nnetstat -antp|grep tcp[^6]\n\n\nroute add -host 192.168.140.11 gw 192.168.240.1\nroute del -host 192.168.140.0 gw 192.168.240.1\n\n#添加一条路由(发往192.168.140.0这个网段的全部要经过网关192.168.240.1)\nroute add -net 192.168.140.0 netmask 255.255.255.0 gw 192.168.240.1\n1、第一点：机房暂未提供堡垒机（外部原因）\n2、第三点：nacos不打算升级,因当前版本是官方建议的稳定版本。该组件不对集群主机外提供服务，已发现的漏洞存在于对安全不产生影响。\n3、第四点：大部分已修改（暂无法完全使用加密字符串）\n\n\nansible-playbook /etc/ansible/script/commom/op\n\n\nfirewall-cmd --list-all|grep '240.22[0-9]'\n\n\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.212\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.220\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.222\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.223\" accept\"\nfirewall-cmd --reload\n\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.211\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.220\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.222\" accept\"\nfirewall-cmd --permanent --add-rich-rule=\"rule family=\"ipv4\" source address=\"192.168.240.223\" accept\"\nfirewall-cmd --reload","slug":"07中间件/E.集群防火墙配置","published":1,"date":"2023-09-01T13:06:37.670Z","updated":"2023-08-30T10:06:48.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o160011zb8aenm68ouc","content":"<h2 id=\"2、端口说明\">2、端口说明</h2>\n<ul>\n<li>探针：</li>\n<li>Nacos:8848/9848/9849</li>\n</ul>\n<h2 id=\"3、防火墙设置\">3、防火墙设置</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看规则</span></span><br><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">systemctl restart firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除规则</span></span><br><span class=\"line\">firewall-cmd --permanent --remove-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.66&quot; port protocol=&quot;tcp&quot; port=&quot;80&quot; accept&quot;</span><br><span class=\"line\">firewall-cmd --permanent --remove-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加规则（主机）</span></span><br><span class=\"line\">firewall-cmd --permanent --add-source=192.168.140.12</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --add-source=192.168.240.222</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --remove-port=21191/tcp</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --remove-source=192.168.240.218</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Elasticsearch</span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.66&quot; port protocol=&quot;tcp&quot; port=&quot;80&quot; accept&quot;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;59.36.150.13&quot; port protocol=&quot;tcp&quot; port=&quot;18848&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.223&quot; port protocol=&quot;tcp&quot; port=&quot;16379&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.222&quot; port protocol=&quot;tcp&quot; port=&quot;8195&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.225&quot; port protocol=&quot;tcp&quot; port=&quot;3309&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Kafka</span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.222&quot; port protocol=&quot;tcp&quot; port=&quot;10021&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.218&quot; port port=&quot;50000-55000&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.223&quot; port port=&quot;2011-2012&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-port=21191/tcp</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --remove-rich-rule  &#x27;&#x27; --permanent</span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.218&quot; port port=&quot;3309&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.223&quot; port port=&quot;3000&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 添加ip有效</span></span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.216&quot;   accept&quot; </span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.212&quot; accept&quot;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Minio</span></span><br><span class=\"line\">cat /etc/firewalld/zones/public.xml</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Nacos</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Redis</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Zookeeper</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># node001</span></span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.212&quot; port protocol=&quot;tcp&quot; port=&quot;12181&quot; accept&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MySQL</span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.220&quot; port protocol=&quot;tcp&quot; port=&quot;18848&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload &amp;&amp; firewall-cmd --list-all</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>firewall-cmd --list-all &amp;&amp; firewall-cmd --reload</p>\n<p>netstat -lnpt</p>\n<p>netstat -nat | grep -i :22</p>\n<p>tcpkill -i any -9 host 49.7.40.205</p>\n<p>sudo tcpkill -i any ‘port 22’</p>\n<p>netstat -antp|grep tcp[^6]</p>\n<p>route add -host 192.168.140.11 gw 192.168.240.1<br>\nroute del -host 192.168.140.0 gw 192.168.240.1</p>\n<p>#添加一条路由(发往192.168.140.0这个网段的全部要经过网关192.168.240.1)<br>\nroute add -net 192.168.140.0 netmask 255.255.255.0 gw 192.168.240.1<br>\n1、第一点：机房暂未提供堡垒机（外部原因）<br>\n2、第三点：nacos不打算升级,因当前版本是官方建议的稳定版本。该组件不对集群主机外提供服务，已发现的漏洞存在于对安全不产生影响。<br>\n3、第四点：大部分已修改（暂无法完全使用加密字符串）</p>\n<p>ansible-playbook /etc/ansible/script/commom/op</p>\n<p>firewall-cmd --list-all|grep ‘240.22[0-9]’</p>\n<p>firewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.212” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.220” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.222” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.223” accept”<br>\nfirewall-cmd --reload</p>\n<p>firewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.211” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.220” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.222” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.223” accept”<br>\nfirewall-cmd --reload</p>\n","excerpt":"","more":"<h2 id=\"2、端口说明\">2、端口说明</h2>\n<ul>\n<li>探针：</li>\n<li>Nacos:8848/9848/9849</li>\n</ul>\n<h2 id=\"3、防火墙设置\">3、防火墙设置</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看规则</span></span><br><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">systemctl restart firewalld.service</span><br><span class=\"line\">systemctl stop firewalld.service</span><br><span class=\"line\">systemctl start firewalld.service</span><br><span class=\"line\">systemctl status firewalld.service</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">删除规则</span></span><br><span class=\"line\">firewall-cmd --permanent --remove-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.66&quot; port protocol=&quot;tcp&quot; port=&quot;80&quot; accept&quot;</span><br><span class=\"line\">firewall-cmd --permanent --remove-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.0/24&quot; port port=&quot;22&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">添加规则（主机）</span></span><br><span class=\"line\">firewall-cmd --permanent --add-source=192.168.140.12</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --add-source=192.168.240.222</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --remove-port=21191/tcp</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --remove-source=192.168.240.218</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Elasticsearch</span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.66&quot; port protocol=&quot;tcp&quot; port=&quot;80&quot; accept&quot;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;59.36.150.13&quot; port protocol=&quot;tcp&quot; port=&quot;18848&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.223&quot; port protocol=&quot;tcp&quot; port=&quot;16379&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.222&quot; port protocol=&quot;tcp&quot; port=&quot;8195&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.225&quot; port protocol=&quot;tcp&quot; port=&quot;3309&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Kafka</span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.222&quot; port protocol=&quot;tcp&quot; port=&quot;10021&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.218&quot; port port=&quot;50000-55000&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.223&quot; port port=&quot;2011-2012&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --permanent --add-port=21191/tcp</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">firewall-cmd --remove-rich-rule  &#x27;&#x27; --permanent</span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.218&quot; port port=&quot;3309&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.223&quot; port port=&quot;3000&quot; protocol=&quot;tcp&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 添加ip有效</span></span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.216&quot;   accept&quot; </span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.212&quot; accept&quot;</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Minio</span></span><br><span class=\"line\">cat /etc/firewalld/zones/public.xml</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Nacos</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Redis</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Zookeeper</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># node001</span></span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.212&quot; port protocol=&quot;tcp&quot; port=&quot;12181&quot; accept&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MySQL</span></span><br><span class=\"line\">firewall-cmd --permanent --add-rich-rule=&#x27;rule family=&quot;ipv4&quot; source address=&quot;192.168.240.220&quot; port protocol=&quot;tcp&quot; port=&quot;18848&quot; accept&#x27;</span><br><span class=\"line\">firewall-cmd --reload &amp;&amp; firewall-cmd --list-all</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>firewall-cmd --list-all &amp;&amp; firewall-cmd --reload</p>\n<p>netstat -lnpt</p>\n<p>netstat -nat | grep -i :22</p>\n<p>tcpkill -i any -9 host 49.7.40.205</p>\n<p>sudo tcpkill -i any ‘port 22’</p>\n<p>netstat -antp|grep tcp[^6]</p>\n<p>route add -host 192.168.140.11 gw 192.168.240.1<br>\nroute del -host 192.168.140.0 gw 192.168.240.1</p>\n<p>#添加一条路由(发往192.168.140.0这个网段的全部要经过网关192.168.240.1)<br>\nroute add -net 192.168.140.0 netmask 255.255.255.0 gw 192.168.240.1<br>\n1、第一点：机房暂未提供堡垒机（外部原因）<br>\n2、第三点：nacos不打算升级,因当前版本是官方建议的稳定版本。该组件不对集群主机外提供服务，已发现的漏洞存在于对安全不产生影响。<br>\n3、第四点：大部分已修改（暂无法完全使用加密字符串）</p>\n<p>ansible-playbook /etc/ansible/script/commom/op</p>\n<p>firewall-cmd --list-all|grep ‘240.22[0-9]’</p>\n<p>firewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.212” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.220” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.222” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.223” accept”<br>\nfirewall-cmd --reload</p>\n<p>firewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.211” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.220” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.222” accept”<br>\nfirewall-cmd --permanent --add-rich-rule=“rule family=“ipv4” source address=“192.168.240.223” accept”<br>\nfirewall-cmd --reload</p>\n"},{"_content":"\n\n\n\n### 运行\n```shell\n\ndocker-compose start\n\ndocker-compose down\n# kafka运行\ncd /home/idszt/docker-compose/middleware/kafka && docker-compose start\n\n\n# 启动顺序MySQL、zookeeper\ncd /home/idszt/docker-compose/middleware/zookeeper && docker-compose start\n\n## 次级启动项\ncd /home/idszt/docker-compose/middleware/elasticsearch && docker-compose up\ncd /home/idszt/docker-compose/middleware/kafka && docker-compose start\n\n\n\n\n```","source":"_posts/07中间件/F.维护命令.运行.md","raw":"\n\n\n\n### 运行\n```shell\n\ndocker-compose start\n\ndocker-compose down\n# kafka运行\ncd /home/idszt/docker-compose/middleware/kafka && docker-compose start\n\n\n# 启动顺序MySQL、zookeeper\ncd /home/idszt/docker-compose/middleware/zookeeper && docker-compose start\n\n## 次级启动项\ncd /home/idszt/docker-compose/middleware/elasticsearch && docker-compose up\ncd /home/idszt/docker-compose/middleware/kafka && docker-compose start\n\n\n\n\n```","slug":"07中间件/F.维护命令.运行","published":1,"date":"2023-09-01T13:06:37.670Z","updated":"2023-07-21T08:48:56.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o160012zb8aclk0ahht","content":"<h3 id=\"运行\">运行</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">docker-compose start</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">kafka运行</span></span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/kafka &amp;&amp; docker-compose start</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动顺序MySQL、zookeeper</span></span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/zookeeper &amp;&amp; docker-compose start</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 次级启动项</span></span></span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/elasticsearch &amp;&amp; docker-compose up</span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/kafka &amp;&amp; docker-compose start</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"运行\">运行</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">docker-compose start</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">kafka运行</span></span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/kafka &amp;&amp; docker-compose start</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动顺序MySQL、zookeeper</span></span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/zookeeper &amp;&amp; docker-compose start</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 次级启动项</span></span></span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/elasticsearch &amp;&amp; docker-compose up</span><br><span class=\"line\">cd /home/idszt/docker-compose/middleware/kafka &amp;&amp; docker-compose start</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"\nfirewall-cmd --list-all\ndocker-compose down\ndocker-compose down && docker-compose up\n\nsystemctl restart firewalld.service\nsystemctl stop firewalld.service\nsystemctl start firewalld.service\n\n### es\ncd /data/docker-compose/middleware/elasticsearch\ndocker-compose up\ndocker-compose down\ndocker-compose start\ndocker-compose exec prod_middleware_es_04 bash\n\n粘贴：elastic#SZT5764\nelastic#SZT5764\nhttp://192.168.240.212:19200/_cat/nodes?pretty\n\n### zookeeper\ncd /data/docker-compose/middleware/zookeeper\n\ndocker-compose up\ndocker-compose exec prod_middleware_zookeeper_01 bash\n\nprod_middleware_zookeeper_01_1  | /docker-entrypoint.sh: line 43: /conf/zoo.cfg: Permission denied\n\n\n### minio\n\ncd /data/docker-compose/middleware/minio\n\n\n\n### nacos\ncd /data/docker-compose/middleware/nacos\n\n\n### kafka\ncd /data/docker-compose/middleware/kafka\n\n\n\n```shell\n#测试\n\ndocker exec -it prod_middleware_kafka_02 /bin/bash\ncd /opt/kafka_2.13-2.8.1/bin\n\n\n#生产消息，总数200W，吞吐量200000，每条消息1000字节\n./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092\n\n#消费消息，16线程，200W消息，1MB一次请求\n./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000\n\n```\n\n## 测试记录\n\n```shell\nbash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.240.211:19092\n\n99989 records sent, 19993.8 records/sec (19.07 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.\n100020 records sent, 20000.0 records/sec (19.07 MB/sec), 0.5 ms avg latency, 13.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 8.0 ms avg latency, 239.0 ms max latency.\n100012 records sent, 20002.4 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.\n100008 records sent, 19997.6 records/sec (19.07 MB/sec), 0.5 ms avg latency, 10.0 ms max latency.\n# 生产\nbash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092\nlog4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].\nlog4j:WARN No appenders could be found for logger (org.apache.kafka.clients.producer.ProducerConfig).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\n447585 records sent, 89517.0 records/sec (85.37 MB/sec), 304.9 ms avg latency, 571.0 ms max latency.\n563120 records sent, 112624.0 records/sec (107.41 MB/sec), 292.3 ms avg latency, 315.0 ms max latency.\n566016 records sent, 113203.2 records/sec (107.96 MB/sec), 289.3 ms avg latency, 313.0 ms max latency.\n2000000 records sent, 104942.806171 records/sec (100.08 MB/sec), 298.59 ms avg latency, 579.00 ms max latency, 290 ms 50th, 323 ms 95th, 565 ms 99th, 576 ms 99.9th.\n\n# 消费\nbash-5.1# ./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000\nWARNING: option [threads] and [num-fetch-threads] have been deprecated and will be ignored by the test\nlog4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].\njava.io.FileNotFoundException: /opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties (No such file or directory)\n        at java.io.FileInputStream.open0(Native Method)\n        at java.io.FileInputStream.open(FileInputStream.java:195)\n        at java.io.FileInputStream.<init>(FileInputStream.java:138)\n        at java.io.FileInputStream.<init>(FileInputStream.java:93)\n        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)\n        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)\n        at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:557)\n        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)\n        at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)\n        at org.slf4j.impl.Log4jLoggerFactory.<init>(Log4jLoggerFactory.java:66)\n        at org.slf4j.impl.StaticLoggerBinder.<init>(StaticLoggerBinder.java:72)\n        at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:45)\n        at org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)\n        at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)\n        at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:417)\n        at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:362)\n        at com.typesafe.scalalogging.Logger$.apply(Logger.scala:48)\n        at kafka.utils.Log4jControllerRegistration$.<clinit>(Logging.scala:25)\n        at kafka.utils.CommandLineUtils$.<clinit>(CommandLineUtils.scala:28)\n        at kafka.tools.ConsumerPerformance$ConsumerPerfConfig.<init>(ConsumerPerformance.scala:269)\n        at kafka.tools.ConsumerPerformance$.main(ConsumerPerformance.scala:44)\n        at kafka.tools.ConsumerPerformance.main(ConsumerPerformance.scala)\nlog4j:ERROR Ignoring configuration file [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].\nlog4j:WARN No appenders could be found for logger (kafka.utils.Log4jControllerRegistration$).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\nstart.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec\n2023-07-25 15:21:05:705, 2023-07-25 15:21:29:111, 1907.5508, 81.4984, 2000212, 85457.2332, 3692, 19714, 96.7612, 101461.4994\n\n\n\n\n```\n\n\nprod_cluster_kafka_01_1  | [Configuring] 'default.replication.factor' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'advertised.listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'port' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'log.dirs' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'zookeeper.connect' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'broker.id' in '/opt/kafka/config/server.properties'\n\n\n\n### redis\ncd /data/docker-compose/middleware/redis\n\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Redis version=7.0.11, bits=64, commit=00000000, modified=0, pid=1, just started\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Configuration loaded\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.875 * monotonic clock: POSIX clock_gettime\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.876 * No cluster configuration found, I'm 69023301118e3f09059f74c38ad261294b0a6d93\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 * Running mode=cluster, port=16379.\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # Server initialized\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF base file appendonly.aof.1.base.rdb on server start\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF incr file appendonly.aof.1.incr.aof on server start\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Ready to accept connections\n\n\necho \"net.core.somaxconn = 1024\" >> /etc/sysctl.conf\necho \"vm.overcommit_memory = 1\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n\ndocker exec -it redis_prod_middleware_redis_01_1 /bin/bash\n\n\nredis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes\n\n\nredis-cli --cluster create 192.168.240.211:16379 192.168.240.212:16379 192.168.240.213:16379 192.168.240.214:16379 192.168.240.215:16379 192.168.240.216:16379 --cluster-replicas 1 -a redis#SZT7658\n","source":"_posts/07中间件/战训部署0724.md","raw":"\nfirewall-cmd --list-all\ndocker-compose down\ndocker-compose down && docker-compose up\n\nsystemctl restart firewalld.service\nsystemctl stop firewalld.service\nsystemctl start firewalld.service\n\n### es\ncd /data/docker-compose/middleware/elasticsearch\ndocker-compose up\ndocker-compose down\ndocker-compose start\ndocker-compose exec prod_middleware_es_04 bash\n\n粘贴：elastic#SZT5764\nelastic#SZT5764\nhttp://192.168.240.212:19200/_cat/nodes?pretty\n\n### zookeeper\ncd /data/docker-compose/middleware/zookeeper\n\ndocker-compose up\ndocker-compose exec prod_middleware_zookeeper_01 bash\n\nprod_middleware_zookeeper_01_1  | /docker-entrypoint.sh: line 43: /conf/zoo.cfg: Permission denied\n\n\n### minio\n\ncd /data/docker-compose/middleware/minio\n\n\n\n### nacos\ncd /data/docker-compose/middleware/nacos\n\n\n### kafka\ncd /data/docker-compose/middleware/kafka\n\n\n\n```shell\n#测试\n\ndocker exec -it prod_middleware_kafka_02 /bin/bash\ncd /opt/kafka_2.13-2.8.1/bin\n\n\n#生产消息，总数200W，吞吐量200000，每条消息1000字节\n./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092\n\n#消费消息，16线程，200W消息，1MB一次请求\n./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000\n\n```\n\n## 测试记录\n\n```shell\nbash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.240.211:19092\n\n99989 records sent, 19993.8 records/sec (19.07 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.\n100020 records sent, 20000.0 records/sec (19.07 MB/sec), 0.5 ms avg latency, 13.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 8.0 ms avg latency, 239.0 ms max latency.\n100012 records sent, 20002.4 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.\n100008 records sent, 19997.6 records/sec (19.07 MB/sec), 0.5 ms avg latency, 10.0 ms max latency.\n# 生产\nbash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092\nlog4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].\nlog4j:WARN No appenders could be found for logger (org.apache.kafka.clients.producer.ProducerConfig).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\n447585 records sent, 89517.0 records/sec (85.37 MB/sec), 304.9 ms avg latency, 571.0 ms max latency.\n563120 records sent, 112624.0 records/sec (107.41 MB/sec), 292.3 ms avg latency, 315.0 ms max latency.\n566016 records sent, 113203.2 records/sec (107.96 MB/sec), 289.3 ms avg latency, 313.0 ms max latency.\n2000000 records sent, 104942.806171 records/sec (100.08 MB/sec), 298.59 ms avg latency, 579.00 ms max latency, 290 ms 50th, 323 ms 95th, 565 ms 99th, 576 ms 99.9th.\n\n# 消费\nbash-5.1# ./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000\nWARNING: option [threads] and [num-fetch-threads] have been deprecated and will be ignored by the test\nlog4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].\njava.io.FileNotFoundException: /opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties (No such file or directory)\n        at java.io.FileInputStream.open0(Native Method)\n        at java.io.FileInputStream.open(FileInputStream.java:195)\n        at java.io.FileInputStream.<init>(FileInputStream.java:138)\n        at java.io.FileInputStream.<init>(FileInputStream.java:93)\n        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)\n        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)\n        at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:557)\n        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)\n        at org.apache.log4j.LogManager.<clinit>(LogManager.java:127)\n        at org.slf4j.impl.Log4jLoggerFactory.<init>(Log4jLoggerFactory.java:66)\n        at org.slf4j.impl.StaticLoggerBinder.<init>(StaticLoggerBinder.java:72)\n        at org.slf4j.impl.StaticLoggerBinder.<clinit>(StaticLoggerBinder.java:45)\n        at org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)\n        at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)\n        at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:417)\n        at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:362)\n        at com.typesafe.scalalogging.Logger$.apply(Logger.scala:48)\n        at kafka.utils.Log4jControllerRegistration$.<clinit>(Logging.scala:25)\n        at kafka.utils.CommandLineUtils$.<clinit>(CommandLineUtils.scala:28)\n        at kafka.tools.ConsumerPerformance$ConsumerPerfConfig.<init>(ConsumerPerformance.scala:269)\n        at kafka.tools.ConsumerPerformance$.main(ConsumerPerformance.scala:44)\n        at kafka.tools.ConsumerPerformance.main(ConsumerPerformance.scala)\nlog4j:ERROR Ignoring configuration file [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].\nlog4j:WARN No appenders could be found for logger (kafka.utils.Log4jControllerRegistration$).\nlog4j:WARN Please initialize the log4j system properly.\nlog4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.\nstart.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec\n2023-07-25 15:21:05:705, 2023-07-25 15:21:29:111, 1907.5508, 81.4984, 2000212, 85457.2332, 3692, 19714, 96.7612, 101461.4994\n\n\n\n\n```\n\n\nprod_cluster_kafka_01_1  | [Configuring] 'default.replication.factor' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'advertised.listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'port' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'log.dirs' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'zookeeper.connect' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'broker.id' in '/opt/kafka/config/server.properties'\n\n\n\n### redis\ncd /data/docker-compose/middleware/redis\n\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Redis version=7.0.11, bits=64, commit=00000000, modified=0, pid=1, just started\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Configuration loaded\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.875 * monotonic clock: POSIX clock_gettime\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.876 * No cluster configuration found, I'm 69023301118e3f09059f74c38ad261294b0a6d93\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 * Running mode=cluster, port=16379.\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # Server initialized\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF base file appendonly.aof.1.base.rdb on server start\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF incr file appendonly.aof.1.incr.aof on server start\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Ready to accept connections\n\n\necho \"net.core.somaxconn = 1024\" >> /etc/sysctl.conf\necho \"vm.overcommit_memory = 1\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n\ndocker exec -it redis_prod_middleware_redis_01_1 /bin/bash\n\n\nredis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes\n\n\nredis-cli --cluster create 192.168.240.211:16379 192.168.240.212:16379 192.168.240.213:16379 192.168.240.214:16379 192.168.240.215:16379 192.168.240.216:16379 --cluster-replicas 1 -a redis#SZT7658\n","slug":"07中间件/战训部署0724","published":1,"date":"2023-09-01T13:06:37.680Z","updated":"2023-07-27T08:16:52.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o170013zb8a6txfbmvs","content":"<p>firewall-cmd --list-all<br>\ndocker-compose down<br>\ndocker-compose down &amp;&amp; docker-compose up</p>\n<p>systemctl restart firewalld.service<br>\nsystemctl stop firewalld.service<br>\nsystemctl start firewalld.service</p>\n<h3 id=\"es\">es</h3>\n<p>cd /data/docker-compose/middleware/elasticsearch<br>\ndocker-compose up<br>\ndocker-compose down<br>\ndocker-compose start<br>\ndocker-compose exec prod_middleware_es_04 bash</p>\n<p>粘贴：elastic#SZT5764<br>\nelastic#SZT5764<br>\n<a href=\"http://192.168.240.212:19200/_cat/nodes?pretty\">http://192.168.240.212:19200/_cat/nodes?pretty</a></p>\n<h3 id=\"zookeeper\">zookeeper</h3>\n<p>cd /data/docker-compose/middleware/zookeeper</p>\n<p>docker-compose up<br>\ndocker-compose exec prod_middleware_zookeeper_01 bash</p>\n<p>prod_middleware_zookeeper_01_1  | /docker-entrypoint.sh: line 43: /conf/zoo.cfg: Permission denied</p>\n<h3 id=\"minio\">minio</h3>\n<p>cd /data/docker-compose/middleware/minio</p>\n<h3 id=\"nacos\">nacos</h3>\n<p>cd /data/docker-compose/middleware/nacos</p>\n<h3 id=\"kafka\">kafka</h3>\n<p>cd /data/docker-compose/middleware/kafka</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">测试</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it prod_middleware_kafka_02 /bin/bash</span><br><span class=\"line\">cd /opt/kafka_2.13-2.8.1/bin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">生产消息，总数200W，吞吐量200000，每条消息1000字节</span></span><br><span class=\"line\">./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">消费消息，16线程，200W消息，1MB一次请求</span></span><br><span class=\"line\">./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"测试记录\">测试记录</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.240.211:19092</span><br><span class=\"line\"></span><br><span class=\"line\">99989 records sent, 19993.8 records/sec (19.07 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20000.0 records/sec (19.07 MB/sec), 0.5 ms avg latency, 13.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 8.0 ms avg latency, 239.0 ms max latency.</span><br><span class=\"line\">100012 records sent, 20002.4 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.</span><br><span class=\"line\">100008 records sent, 19997.6 records/sec (19.07 MB/sec), 0.5 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">生产</span></span><br><span class=\"line\">bash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092</span><br><span class=\"line\">log4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].</span><br><span class=\"line\">log4j:WARN No appenders could be found for logger (org.apache.kafka.clients.producer.ProducerConfig).</span><br><span class=\"line\">log4j:WARN Please initialize the log4j system properly.</span><br><span class=\"line\">log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</span><br><span class=\"line\">447585 records sent, 89517.0 records/sec (85.37 MB/sec), 304.9 ms avg latency, 571.0 ms max latency.</span><br><span class=\"line\">563120 records sent, 112624.0 records/sec (107.41 MB/sec), 292.3 ms avg latency, 315.0 ms max latency.</span><br><span class=\"line\">566016 records sent, 113203.2 records/sec (107.96 MB/sec), 289.3 ms avg latency, 313.0 ms max latency.</span><br><span class=\"line\">2000000 records sent, 104942.806171 records/sec (100.08 MB/sec), 298.59 ms avg latency, 579.00 ms max latency, 290 ms 50th, 323 ms 95th, 565 ms 99th, 576 ms 99.9th.</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">消费</span></span><br><span class=\"line\">bash-5.1# ./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000</span><br><span class=\"line\">WARNING: option [threads] and [num-fetch-threads] have been deprecated and will be ignored by the test</span><br><span class=\"line\">log4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].</span><br><span class=\"line\">java.io.FileNotFoundException: /opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties (No such file or directory)</span><br><span class=\"line\">        at java.io.FileInputStream.open0(Native Method)</span><br><span class=\"line\">        at java.io.FileInputStream.open(FileInputStream.java:195)</span><br><span class=\"line\">        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:138)</span><br><span class=\"line\">        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:93)</span><br><span class=\"line\">        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)</span><br><span class=\"line\">        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)</span><br><span class=\"line\">        at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:557)</span><br><span class=\"line\">        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)</span><br><span class=\"line\">        at org.apache.log4j.LogManager.&lt;clinit&gt;(LogManager.java:127)</span><br><span class=\"line\">        at org.slf4j.impl.Log4jLoggerFactory.&lt;init&gt;(Log4jLoggerFactory.java:66)</span><br><span class=\"line\">        at org.slf4j.impl.StaticLoggerBinder.&lt;init&gt;(StaticLoggerBinder.java:72)</span><br><span class=\"line\">        at org.slf4j.impl.StaticLoggerBinder.&lt;clinit&gt;(StaticLoggerBinder.java:45)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:417)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:362)</span><br><span class=\"line\">        at com.typesafe.scalalogging.Logger$.apply(Logger.scala:48)</span><br><span class=\"line\">        at kafka.utils.Log4jControllerRegistration$.&lt;clinit&gt;(Logging.scala:25)</span><br><span class=\"line\">        at kafka.utils.CommandLineUtils$.&lt;clinit&gt;(CommandLineUtils.scala:28)</span><br><span class=\"line\">        at kafka.tools.ConsumerPerformance$ConsumerPerfConfig.&lt;init&gt;(ConsumerPerformance.scala:269)</span><br><span class=\"line\">        at kafka.tools.ConsumerPerformance$.main(ConsumerPerformance.scala:44)</span><br><span class=\"line\">        at kafka.tools.ConsumerPerformance.main(ConsumerPerformance.scala)</span><br><span class=\"line\">log4j:ERROR Ignoring configuration file [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].</span><br><span class=\"line\">log4j:WARN No appenders could be found for logger (kafka.utils.Log4jControllerRegistration$).</span><br><span class=\"line\">log4j:WARN Please initialize the log4j system properly.</span><br><span class=\"line\">log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</span><br><span class=\"line\">start.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec</span><br><span class=\"line\">2023-07-25 15:21:05:705, 2023-07-25 15:21:29:111, 1907.5508, 81.4984, 2000212, 85457.2332, 3692, 19714, 96.7612, 101461.4994</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>prod_cluster_kafka_01_1  | [Configuring] ‘default.replication.factor’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘advertised.listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘port’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘log.dirs’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘zookeeper.connect’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘<a href=\"http://broker.id\">broker.id</a>’ in ‘/opt/kafka/config/server.properties’</p>\n<h3 id=\"redis\">redis</h3>\n<p>cd /data/docker-compose/middleware/redis</p>\n<p>prod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo<br>\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Redis version=7.0.11, bits=64, commit=00000000, modified=0, pid=1, just started<br>\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Configuration loaded<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.875 * monotonic clock: POSIX clock_gettime<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.876 * No cluster configuration found, I’m 69023301118e3f09059f74c38ad261294b0a6d93<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 * Running mode=cluster, port=16379.<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # Server initialized<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see <a href=\"https://github.com/jemalloc/jemalloc/issues/1328\">https://github.com/jemalloc/jemalloc/issues/1328</a>. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect.<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF base file appendonly.aof.1.base.rdb on server start<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF incr file appendonly.aof.1.incr.aof on server start<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Ready to accept connections</p>\n<p>echo “net.core.somaxconn = 1024” &gt;&gt; /etc/sysctl.conf<br>\necho “vm.overcommit_memory = 1” &gt;&gt; /etc/sysctl.conf<br>\ncat /etc/sysctl.conf<br>\nsysctl -p</p>\n<p>docker exec -it redis_prod_middleware_redis_01_1 /bin/bash</p>\n<p>redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes</p>\n<p>redis-cli --cluster create 192.168.240.211:16379 192.168.240.212:16379 192.168.240.213:16379 192.168.240.214:16379 192.168.240.215:16379 192.168.240.216:16379 --cluster-replicas 1 -a redis#SZT7658</p>\n","excerpt":"","more":"<p>firewall-cmd --list-all<br>\ndocker-compose down<br>\ndocker-compose down &amp;&amp; docker-compose up</p>\n<p>systemctl restart firewalld.service<br>\nsystemctl stop firewalld.service<br>\nsystemctl start firewalld.service</p>\n<h3 id=\"es\">es</h3>\n<p>cd /data/docker-compose/middleware/elasticsearch<br>\ndocker-compose up<br>\ndocker-compose down<br>\ndocker-compose start<br>\ndocker-compose exec prod_middleware_es_04 bash</p>\n<p>粘贴：elastic#SZT5764<br>\nelastic#SZT5764<br>\n<a href=\"http://192.168.240.212:19200/_cat/nodes?pretty\">http://192.168.240.212:19200/_cat/nodes?pretty</a></p>\n<h3 id=\"zookeeper\">zookeeper</h3>\n<p>cd /data/docker-compose/middleware/zookeeper</p>\n<p>docker-compose up<br>\ndocker-compose exec prod_middleware_zookeeper_01 bash</p>\n<p>prod_middleware_zookeeper_01_1  | /docker-entrypoint.sh: line 43: /conf/zoo.cfg: Permission denied</p>\n<h3 id=\"minio\">minio</h3>\n<p>cd /data/docker-compose/middleware/minio</p>\n<h3 id=\"nacos\">nacos</h3>\n<p>cd /data/docker-compose/middleware/nacos</p>\n<h3 id=\"kafka\">kafka</h3>\n<p>cd /data/docker-compose/middleware/kafka</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">测试</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it prod_middleware_kafka_02 /bin/bash</span><br><span class=\"line\">cd /opt/kafka_2.13-2.8.1/bin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">生产消息，总数200W，吞吐量200000，每条消息1000字节</span></span><br><span class=\"line\">./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">消费消息，16线程，200W消息，1MB一次请求</span></span><br><span class=\"line\">./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"测试记录\">测试记录</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.240.211:19092</span><br><span class=\"line\"></span><br><span class=\"line\">99989 records sent, 19993.8 records/sec (19.07 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20000.0 records/sec (19.07 MB/sec), 0.5 ms avg latency, 13.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 1.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 8.0 ms avg latency, 239.0 ms max latency.</span><br><span class=\"line\">100012 records sent, 20002.4 records/sec (19.08 MB/sec), 0.5 ms avg latency, 14.0 ms max latency.</span><br><span class=\"line\">100008 records sent, 19997.6 records/sec (19.07 MB/sec), 0.5 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">生产</span></span><br><span class=\"line\">bash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 2000000 --record-size 1000  --throughput 200000 --producer-props bootstrap.servers=192.168.240.211:19092</span><br><span class=\"line\">log4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].</span><br><span class=\"line\">log4j:WARN No appenders could be found for logger (org.apache.kafka.clients.producer.ProducerConfig).</span><br><span class=\"line\">log4j:WARN Please initialize the log4j system properly.</span><br><span class=\"line\">log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</span><br><span class=\"line\">447585 records sent, 89517.0 records/sec (85.37 MB/sec), 304.9 ms avg latency, 571.0 ms max latency.</span><br><span class=\"line\">563120 records sent, 112624.0 records/sec (107.41 MB/sec), 292.3 ms avg latency, 315.0 ms max latency.</span><br><span class=\"line\">566016 records sent, 113203.2 records/sec (107.96 MB/sec), 289.3 ms avg latency, 313.0 ms max latency.</span><br><span class=\"line\">2000000 records sent, 104942.806171 records/sec (100.08 MB/sec), 298.59 ms avg latency, 579.00 ms max latency, 290 ms 50th, 323 ms 95th, 565 ms 99th, 576 ms 99.9th.</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">消费</span></span><br><span class=\"line\">bash-5.1# ./kafka-consumer-perf-test.sh --broker-list 192.168.240.211:19092 --topic test_of_kongkong --fetch-size 1048576 --messages 2000000 --threads 16 --reporting-interval 2000 --timeout 10000</span><br><span class=\"line\">WARNING: option [threads] and [num-fetch-threads] have been deprecated and will be ignored by the test</span><br><span class=\"line\">log4j:ERROR Could not read configuration file from URL [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].</span><br><span class=\"line\">java.io.FileNotFoundException: /opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties (No such file or directory)</span><br><span class=\"line\">        at java.io.FileInputStream.open0(Native Method)</span><br><span class=\"line\">        at java.io.FileInputStream.open(FileInputStream.java:195)</span><br><span class=\"line\">        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:138)</span><br><span class=\"line\">        at java.io.FileInputStream.&lt;init&gt;(FileInputStream.java:93)</span><br><span class=\"line\">        at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)</span><br><span class=\"line\">        at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)</span><br><span class=\"line\">        at org.apache.log4j.PropertyConfigurator.doConfigure(PropertyConfigurator.java:557)</span><br><span class=\"line\">        at org.apache.log4j.helpers.OptionConverter.selectAndConfigure(OptionConverter.java:526)</span><br><span class=\"line\">        at org.apache.log4j.LogManager.&lt;clinit&gt;(LogManager.java:127)</span><br><span class=\"line\">        at org.slf4j.impl.Log4jLoggerFactory.&lt;init&gt;(Log4jLoggerFactory.java:66)</span><br><span class=\"line\">        at org.slf4j.impl.StaticLoggerBinder.&lt;init&gt;(StaticLoggerBinder.java:72)</span><br><span class=\"line\">        at org.slf4j.impl.StaticLoggerBinder.&lt;clinit&gt;(StaticLoggerBinder.java:45)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.bind(LoggerFactory.java:150)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:124)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:417)</span><br><span class=\"line\">        at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:362)</span><br><span class=\"line\">        at com.typesafe.scalalogging.Logger$.apply(Logger.scala:48)</span><br><span class=\"line\">        at kafka.utils.Log4jControllerRegistration$.&lt;clinit&gt;(Logging.scala:25)</span><br><span class=\"line\">        at kafka.utils.CommandLineUtils$.&lt;clinit&gt;(CommandLineUtils.scala:28)</span><br><span class=\"line\">        at kafka.tools.ConsumerPerformance$ConsumerPerfConfig.&lt;init&gt;(ConsumerPerformance.scala:269)</span><br><span class=\"line\">        at kafka.tools.ConsumerPerformance$.main(ConsumerPerformance.scala:44)</span><br><span class=\"line\">        at kafka.tools.ConsumerPerformance.main(ConsumerPerformance.scala)</span><br><span class=\"line\">log4j:ERROR Ignoring configuration file [file:/opt/kafka_2.13-2.8.1/bin/../config/tools-log4j.properties].</span><br><span class=\"line\">log4j:WARN No appenders could be found for logger (kafka.utils.Log4jControllerRegistration$).</span><br><span class=\"line\">log4j:WARN Please initialize the log4j system properly.</span><br><span class=\"line\">log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.</span><br><span class=\"line\">start.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec</span><br><span class=\"line\">2023-07-25 15:21:05:705, 2023-07-25 15:21:29:111, 1907.5508, 81.4984, 2000212, 85457.2332, 3692, 19714, 96.7612, 101461.4994</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>prod_cluster_kafka_01_1  | [Configuring] ‘default.replication.factor’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘advertised.listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘port’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘log.dirs’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘zookeeper.connect’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘<a href=\"http://broker.id\">broker.id</a>’ in ‘/opt/kafka/config/server.properties’</p>\n<h3 id=\"redis\">redis</h3>\n<p>cd /data/docker-compose/middleware/redis</p>\n<p>prod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo<br>\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Redis version=7.0.11, bits=64, commit=00000000, modified=0, pid=1, just started<br>\nprod_middleware_redis_01_1  | 1:C 25 Jul 2023 07:24:39.875 # Configuration loaded<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.875 * monotonic clock: POSIX clock_gettime<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.876 * No cluster configuration found, I’m 69023301118e3f09059f74c38ad261294b0a6d93<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 * Running mode=cluster, port=16379.<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # Server initialized<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.877 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see <a href=\"https://github.com/jemalloc/jemalloc/issues/1328\">https://github.com/jemalloc/jemalloc/issues/1328</a>. To fix this issue add ‘vm.overcommit_memory = 1’ to /etc/sysctl.conf and then reboot or run the command ‘sysctl vm.overcommit_memory=1’ for this to take effect.<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF base file appendonly.aof.1.base.rdb on server start<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Creating AOF incr file appendonly.aof.1.incr.aof on server start<br>\nprod_middleware_redis_01_1  | 1:M 25 Jul 2023 07:24:39.879 * Ready to accept connections</p>\n<p>echo “net.core.somaxconn = 1024” &gt;&gt; /etc/sysctl.conf<br>\necho “vm.overcommit_memory = 1” &gt;&gt; /etc/sysctl.conf<br>\ncat /etc/sysctl.conf<br>\nsysctl -p</p>\n<p>docker exec -it redis_prod_middleware_redis_01_1 /bin/bash</p>\n<p>redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes</p>\n<p>redis-cli --cluster create 192.168.240.211:16379 192.168.240.212:16379 192.168.240.213:16379 192.168.240.214:16379 192.168.240.215:16379 192.168.240.216:16379 --cluster-replicas 1 -a redis#SZT7658</p>\n"},{"_content":"### 数据文件夹\ndata\n  middleware\n    elasticsearch\n      config\n      data\n      plugins\n      logs\n    kafka\n    minio\n      data\n      config\n    nacos\n    redis\n      config/redis.conf\n      data\n    zookeeper\n      conf\n      data\n      datalog\n  loganalysis\n    filebeat\n    grafana\n    kafka\n    kibana\n    logstash\n    elasticsearch\n  mhprogram（开发程序）\n  monitor\n    exporter\n    prometheus\n    grafana\n    alertmanager\n\nhome/idszt\n  docker-compose\n    node001\n    node002\n    node003\n    node004\n    node005\n    node006\n    node007\n    node008\n  system-maintain\n    ansible\n\nmkdir  node001 \\\n    node002 \\\n    node003\\\n    node004\\\n    node005\\\n    node006\\\n    node007\\\n    node008\\\n    node009\n\n\n磁盘分区\n```shell\ncat /etc/fstab\n/dev/sdb1 /data                                  xfs     defaults        0 0\n\necho '/dev/sdb1 /data                                  xfs     defaults        0 0' >> /etc/fstab\n\n\n\n[root@local-node002 docker-compose]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda               8:0    0  100G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   99G  0 part\n  ├─centos-root 253:0    0   50G  0 lvm  /\n  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]\n  └─centos-home 253:2    0 41.1G  0 lvm  /home\nsdb               8:16   0  120G  0 disk\nsr0              11:0    1  9.6G  0 rom\n[root@local-node002 docker-compose]# fdisk -l\n\n磁盘 /dev/sdb：128.8 GB, 128849018880 字节，251658240 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n\n磁盘 /dev/sda：107.4 GB, 107374182400 字节，209715200 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n磁盘标签类型：dos\n磁盘标识符：0x000a7729\n\n   设备 Boot      Start         End      Blocks   Id  System\n/dev/sda1   *        2048     2099199     1048576   83  Linux\n/dev/sda2         2099200   209715199   103808000   8e  Linux LVM\n\n磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n\n磁盘 /dev/mapper/centos-swap：8455 MB, 8455716864 字节，16515072 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n\n磁盘 /dev/mapper/centos-home：44.1 GB, 44149243904 字节，86228992 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n[root@local-node002 docker-compose]# fdisk /dev/sdb\n欢迎使用 fdisk (util-linux 2.23.2)。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\nDevice does not contain a recognized partition table\n使用磁盘标识符 0xb67d57e8 创建新的 DOS 磁盘标签。\n\n命令(输入 m 获取帮助)：n\nPartition type:\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended\nSelect (default p): p\n分区号 (1-4，默认 1)：\n起始 扇区 (2048-251658239，默认为 2048)：\n将使用默认值 2048\nLast 扇区, +扇区 or +size{K,M,G} (2048-251658239，默认为 251658239)：\n将使用默认值 251658239\n分区 1 已设置为 Linux 类型，大小设为 120 GiB\n\n命令(输入 m 获取帮助)：wq\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n正在同步磁盘。\n[root@local-node002 docker-compose]# mkfs -t xfs /dev/sdb1\nmeta-data=/dev/sdb1              isize=512    agcount=4, agsize=7864256 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=0, sparse=0\ndata     =                       bsize=4096   blocks=31457024, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\nlog      =internal log           bsize=4096   blocks=15359, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\n[root@local-node002 docker-compose]# mount /dev/sdb1 /data\n[root@local-node002 docker-compose]# df -lh\n文件系统                 容量  已用  可用 已用% 挂载点\ndevtmpfs                 2.9G     0  2.9G    0% /dev\ntmpfs                    2.9G     0  2.9G    0% /dev/shm\ntmpfs                    2.9G  282M  2.6G   10% /run\ntmpfs                    2.9G     0  2.9G    0% /sys/fs/cgroup\n/dev/mapper/centos-root   50G   15G   36G   29% /\n/dev/mapper/centos-home   42G   37M   42G    1% /home\n/dev/sda1               1014M  187M  828M   19% /boot\ntmpfs                    579M   12K  579M    1% /run/user/42\ntmpfs                    579M     0  579M    0% /run/user/0\n/dev/sdb1                120G   33M  120G    1% /data\n[root@local-node002 docker-compose]# echo '/dev/sdb1 /data                                  xfs     defaults        0 0' >> /etc/fstab\n\n```\n\n\nifconfig ens33:0 192.168.139.18 netmask 255.255.255.0 up\n\n\n### 时间同步\nntpdate 119.23.155.163\n\n\ntime dd if=/dev/zero-iotest of=test.file bs=8G count=4 oflag=direct\n\n\n### 系统配置\nvi /etc/sysctl.conf\n\n```shell\n# redis配置\nvm.max_map_count=262144\nnet.core.somaxconn = 1024\n\n```\n\n\n### 添加变量短路径(后期配)\n/etc/profile\n```shell\nexport kafka_docker-compose_path=/home/idszt/docker-compose/middleware/kafka\n\n\n```\n\n### 关闭交换空间\n# 注释 swap 行\nvim /etc/fstab\n```shell\n\nsed -i \"s/^[^#].*centos-swap*/#&/g\" /etc/fstab\n#： s:替换\n#:  ^:开头匹配\n#： [^#]:匹配非#含centos-swap的行\n#： #&:中的&代表匹配整行，整个意思就是行前面加上#号\n#： g:全部（只匹配特定行不加）\n```\n\n```shell\nsed -i \"s/^[^#].*centos-swap*/#&/g\" /etc/fstab && cat /etc/fstab\n[root@idszt-node001 kafka]# cat /etc/fstab\n\n#\n# /etc/fstab\n# Created by anaconda on Sun Jun  4 15:21:48 2023\n#\n# Accessible filesystems, by reference, are maintained under '/dev/disk'\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n#\n/dev/mapper/centos-root /                       xfs     defaults        0 0\nUUID=36bd4756-1521-4eea-93cb-9c8125b81e74 /boot                   xfs     defaults        0 0\nUUID=B8B9-3229          /boot/efi               vfat    umask=0077,shortname=winnt 0 0\n/dev/mapper/centos-home /home                   xfs     defaults        0 0\n#/dev/mapper/centos-swap swap                    swap    defaults        0 0\n/dev/sdb1 /data                                 ext4    defaults        0 0\n\n```\n\napm_system\nkibana_system\nlogstash_system\nbeats_system\n\n113.98.244.167\n113.98.244.169\n113.98.244.170\n113.98.244.181\n113.98.244.183\n113.98.244.184\n113.98.244.185\n113.98.244.187\n","source":"_posts/07中间件/A.系统初始化.md","raw":"### 数据文件夹\ndata\n  middleware\n    elasticsearch\n      config\n      data\n      plugins\n      logs\n    kafka\n    minio\n      data\n      config\n    nacos\n    redis\n      config/redis.conf\n      data\n    zookeeper\n      conf\n      data\n      datalog\n  loganalysis\n    filebeat\n    grafana\n    kafka\n    kibana\n    logstash\n    elasticsearch\n  mhprogram（开发程序）\n  monitor\n    exporter\n    prometheus\n    grafana\n    alertmanager\n\nhome/idszt\n  docker-compose\n    node001\n    node002\n    node003\n    node004\n    node005\n    node006\n    node007\n    node008\n  system-maintain\n    ansible\n\nmkdir  node001 \\\n    node002 \\\n    node003\\\n    node004\\\n    node005\\\n    node006\\\n    node007\\\n    node008\\\n    node009\n\n\n磁盘分区\n```shell\ncat /etc/fstab\n/dev/sdb1 /data                                  xfs     defaults        0 0\n\necho '/dev/sdb1 /data                                  xfs     defaults        0 0' >> /etc/fstab\n\n\n\n[root@local-node002 docker-compose]# lsblk\nNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT\nsda               8:0    0  100G  0 disk\n├─sda1            8:1    0    1G  0 part /boot\n└─sda2            8:2    0   99G  0 part\n  ├─centos-root 253:0    0   50G  0 lvm  /\n  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]\n  └─centos-home 253:2    0 41.1G  0 lvm  /home\nsdb               8:16   0  120G  0 disk\nsr0              11:0    1  9.6G  0 rom\n[root@local-node002 docker-compose]# fdisk -l\n\n磁盘 /dev/sdb：128.8 GB, 128849018880 字节，251658240 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n\n磁盘 /dev/sda：107.4 GB, 107374182400 字节，209715200 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n磁盘标签类型：dos\n磁盘标识符：0x000a7729\n\n   设备 Boot      Start         End      Blocks   Id  System\n/dev/sda1   *        2048     2099199     1048576   83  Linux\n/dev/sda2         2099200   209715199   103808000   8e  Linux LVM\n\n磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n\n磁盘 /dev/mapper/centos-swap：8455 MB, 8455716864 字节，16515072 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n\n磁盘 /dev/mapper/centos-home：44.1 GB, 44149243904 字节，86228992 个扇区\nUnits = 扇区 of 1 * 512 = 512 bytes\n扇区大小(逻辑/物理)：512 字节 / 512 字节\nI/O 大小(最小/最佳)：512 字节 / 512 字节\n\n[root@local-node002 docker-compose]# fdisk /dev/sdb\n欢迎使用 fdisk (util-linux 2.23.2)。\n\n更改将停留在内存中，直到您决定将更改写入磁盘。\n使用写入命令前请三思。\n\nDevice does not contain a recognized partition table\n使用磁盘标识符 0xb67d57e8 创建新的 DOS 磁盘标签。\n\n命令(输入 m 获取帮助)：n\nPartition type:\n   p   primary (0 primary, 0 extended, 4 free)\n   e   extended\nSelect (default p): p\n分区号 (1-4，默认 1)：\n起始 扇区 (2048-251658239，默认为 2048)：\n将使用默认值 2048\nLast 扇区, +扇区 or +size{K,M,G} (2048-251658239，默认为 251658239)：\n将使用默认值 251658239\n分区 1 已设置为 Linux 类型，大小设为 120 GiB\n\n命令(输入 m 获取帮助)：wq\nThe partition table has been altered!\n\nCalling ioctl() to re-read partition table.\n正在同步磁盘。\n[root@local-node002 docker-compose]# mkfs -t xfs /dev/sdb1\nmeta-data=/dev/sdb1              isize=512    agcount=4, agsize=7864256 blks\n         =                       sectsz=512   attr=2, projid32bit=1\n         =                       crc=1        finobt=0, sparse=0\ndata     =                       bsize=4096   blocks=31457024, imaxpct=25\n         =                       sunit=0      swidth=0 blks\nnaming   =version 2              bsize=4096   ascii-ci=0 ftype=1\nlog      =internal log           bsize=4096   blocks=15359, version=2\n         =                       sectsz=512   sunit=0 blks, lazy-count=1\nrealtime =none                   extsz=4096   blocks=0, rtextents=0\n[root@local-node002 docker-compose]# mount /dev/sdb1 /data\n[root@local-node002 docker-compose]# df -lh\n文件系统                 容量  已用  可用 已用% 挂载点\ndevtmpfs                 2.9G     0  2.9G    0% /dev\ntmpfs                    2.9G     0  2.9G    0% /dev/shm\ntmpfs                    2.9G  282M  2.6G   10% /run\ntmpfs                    2.9G     0  2.9G    0% /sys/fs/cgroup\n/dev/mapper/centos-root   50G   15G   36G   29% /\n/dev/mapper/centos-home   42G   37M   42G    1% /home\n/dev/sda1               1014M  187M  828M   19% /boot\ntmpfs                    579M   12K  579M    1% /run/user/42\ntmpfs                    579M     0  579M    0% /run/user/0\n/dev/sdb1                120G   33M  120G    1% /data\n[root@local-node002 docker-compose]# echo '/dev/sdb1 /data                                  xfs     defaults        0 0' >> /etc/fstab\n\n```\n\n\nifconfig ens33:0 192.168.139.18 netmask 255.255.255.0 up\n\n\n### 时间同步\nntpdate 119.23.155.163\n\n\ntime dd if=/dev/zero-iotest of=test.file bs=8G count=4 oflag=direct\n\n\n### 系统配置\nvi /etc/sysctl.conf\n\n```shell\n# redis配置\nvm.max_map_count=262144\nnet.core.somaxconn = 1024\n\n```\n\n\n### 添加变量短路径(后期配)\n/etc/profile\n```shell\nexport kafka_docker-compose_path=/home/idszt/docker-compose/middleware/kafka\n\n\n```\n\n### 关闭交换空间\n# 注释 swap 行\nvim /etc/fstab\n```shell\n\nsed -i \"s/^[^#].*centos-swap*/#&/g\" /etc/fstab\n#： s:替换\n#:  ^:开头匹配\n#： [^#]:匹配非#含centos-swap的行\n#： #&:中的&代表匹配整行，整个意思就是行前面加上#号\n#： g:全部（只匹配特定行不加）\n```\n\n```shell\nsed -i \"s/^[^#].*centos-swap*/#&/g\" /etc/fstab && cat /etc/fstab\n[root@idszt-node001 kafka]# cat /etc/fstab\n\n#\n# /etc/fstab\n# Created by anaconda on Sun Jun  4 15:21:48 2023\n#\n# Accessible filesystems, by reference, are maintained under '/dev/disk'\n# See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info\n#\n/dev/mapper/centos-root /                       xfs     defaults        0 0\nUUID=36bd4756-1521-4eea-93cb-9c8125b81e74 /boot                   xfs     defaults        0 0\nUUID=B8B9-3229          /boot/efi               vfat    umask=0077,shortname=winnt 0 0\n/dev/mapper/centos-home /home                   xfs     defaults        0 0\n#/dev/mapper/centos-swap swap                    swap    defaults        0 0\n/dev/sdb1 /data                                 ext4    defaults        0 0\n\n```\n\napm_system\nkibana_system\nlogstash_system\nbeats_system\n\n113.98.244.167\n113.98.244.169\n113.98.244.170\n113.98.244.181\n113.98.244.183\n113.98.244.184\n113.98.244.185\n113.98.244.187\n","slug":"07中间件/A.系统初始化","published":1,"date":"2023-09-01T13:06:37.640Z","updated":"2023-08-26T07:48:48.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o170014zb8a39l32rqr","content":"<h3 id=\"数据文件夹\">数据文件夹</h3>\n<p>data<br>\nmiddleware<br>\nelasticsearch<br>\nconfig<br>\ndata<br>\nplugins<br>\nlogs<br>\nkafka<br>\nminio<br>\ndata<br>\nconfig<br>\nnacos<br>\nredis<br>\nconfig/redis.conf<br>\ndata<br>\nzookeeper<br>\nconf<br>\ndata<br>\ndatalog<br>\nloganalysis<br>\nfilebeat<br>\ngrafana<br>\nkafka<br>\nkibana<br>\nlogstash<br>\nelasticsearch<br>\nmhprogram（开发程序）<br>\nmonitor<br>\nexporter<br>\nprometheus<br>\ngrafana<br>\nalertmanager</p>\n<p>home/idszt<br>\ndocker-compose<br>\nnode001<br>\nnode002<br>\nnode003<br>\nnode004<br>\nnode005<br>\nnode006<br>\nnode007<br>\nnode008<br>\nsystem-maintain<br>\nansible</p>\n<p>mkdir  node001 <br>\nnode002 <br>\nnode003<br>\nnode004<br>\nnode005<br>\nnode006<br>\nnode007<br>\nnode008<br>\nnode009</p>\n<p>磁盘分区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/fstab</span><br><span class=\"line\">/dev/sdb1 /data                                  xfs     defaults        0 0</span><br><span class=\"line\"></span><br><span class=\"line\">echo &#x27;/dev/sdb1 /data                                  xfs     defaults        0 0&#x27; &gt;&gt; /etc/fstab</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@local-node002 docker-compose]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0 41.1G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0  120G  0 disk</span><br><span class=\"line\">sr0              11:0    1  9.6G  0 rom</span><br><span class=\"line\">[root@local-node002 docker-compose]# fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/sdb：128.8 GB, 128849018880 字节，251658240 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/sda：107.4 GB, 107374182400 字节，209715200 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\">磁盘标签类型：dos</span><br><span class=\"line\">磁盘标识符：0x000a7729</span><br><span class=\"line\"></span><br><span class=\"line\">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class=\"line\">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class=\"line\">/dev/sda2         2099200   209715199   103808000   8e  Linux LVM</span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/mapper/centos-swap：8455 MB, 8455716864 字节，16515072 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/mapper/centos-home：44.1 GB, 44149243904 字节，86228992 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\">[root@local-node002 docker-compose]# fdisk /dev/sdb</span><br><span class=\"line\">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class=\"line\"></span><br><span class=\"line\">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class=\"line\">使用写入命令前请三思。</span><br><span class=\"line\"></span><br><span class=\"line\">Device does not contain a recognized partition table</span><br><span class=\"line\">使用磁盘标识符 0xb67d57e8 创建新的 DOS 磁盘标签。</span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">Partition type:</span><br><span class=\"line\">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">   e   extended</span><br><span class=\"line\">Select (default p): p</span><br><span class=\"line\">分区号 (1-4，默认 1)：</span><br><span class=\"line\">起始 扇区 (2048-251658239，默认为 2048)：</span><br><span class=\"line\">将使用默认值 2048</span><br><span class=\"line\">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-251658239，默认为 251658239)：</span><br><span class=\"line\">将使用默认值 251658239</span><br><span class=\"line\">分区 1 已设置为 Linux 类型，大小设为 120 GiB</span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：wq</span><br><span class=\"line\">The partition table has been altered!</span><br><span class=\"line\"></span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">正在同步磁盘。</span><br><span class=\"line\">[root@local-node002 docker-compose]# mkfs -t xfs /dev/sdb1</span><br><span class=\"line\">meta-data=/dev/sdb1              isize=512    agcount=4, agsize=7864256 blks</span><br><span class=\"line\">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class=\"line\">         =                       crc=1        finobt=0, sparse=0</span><br><span class=\"line\">data     =                       bsize=4096   blocks=31457024, imaxpct=25</span><br><span class=\"line\">         =                       sunit=0      swidth=0 blks</span><br><span class=\"line\">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class=\"line\">log      =internal log           bsize=4096   blocks=15359, version=2</span><br><span class=\"line\">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class=\"line\">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class=\"line\">[root@local-node002 docker-compose]# mount /dev/sdb1 /data</span><br><span class=\"line\">[root@local-node002 docker-compose]# df -lh</span><br><span class=\"line\">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">devtmpfs                 2.9G     0  2.9G    0% /dev</span><br><span class=\"line\">tmpfs                    2.9G     0  2.9G    0% /dev/shm</span><br><span class=\"line\">tmpfs                    2.9G  282M  2.6G   10% /run</span><br><span class=\"line\">tmpfs                    2.9G     0  2.9G    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/mapper/centos-root   50G   15G   36G   29% /</span><br><span class=\"line\">/dev/mapper/centos-home   42G   37M   42G    1% /home</span><br><span class=\"line\">/dev/sda1               1014M  187M  828M   19% /boot</span><br><span class=\"line\">tmpfs                    579M   12K  579M    1% /run/user/42</span><br><span class=\"line\">tmpfs                    579M     0  579M    0% /run/user/0</span><br><span class=\"line\">/dev/sdb1                120G   33M  120G    1% /data</span><br><span class=\"line\">[root@local-node002 docker-compose]# echo &#x27;/dev/sdb1 /data                                  xfs     defaults        0 0&#x27; &gt;&gt; /etc/fstab</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>ifconfig ens33:0 192.168.139.18 netmask 255.255.255.0 up</p>\n<h3 id=\"时间同步\">时间同步</h3>\n<p>ntpdate 119.23.155.163</p>\n<p>time dd if=/dev/zero-iotest of=test.file bs=8G count=4 oflag=direct</p>\n<h3 id=\"系统配置\">系统配置</h3>\n<p>vi /etc/sysctl.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">redis配置</span></span><br><span class=\"line\">vm.max_map_count=262144</span><br><span class=\"line\">net.core.somaxconn = 1024</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加变量短路径-后期配\">添加变量短路径(后期配)</h3>\n<p>/etc/profile</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export kafka_docker-compose_path=/home/idszt/docker-compose/middleware/kafka</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭交换空间\">关闭交换空间</h3>\n<h1>注释 swap 行</h1>\n<p>vim /etc/fstab</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s/^[^#].*centos-swap*/#&amp;/g&quot; /etc/fstab</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： s:替换</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">:  ^:开头匹配</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： [^#]:匹配非#含centos-swap的行</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： <span class=\"comment\">#&amp;:中的&amp;代表匹配整行，整个意思就是行前面加上#号</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： g:全部（只匹配特定行不加）</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &quot;s/^[^#].*centos-swap*/#&amp;/g&quot; /etc/fstab &amp;&amp; cat /etc/fstab</span><br><span class=\"line\">[root@idszt-node001 kafka]# cat /etc/fstab</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># /etc/fstab</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Created by anaconda on Sun Jun  4 15:21:48 2023</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) <span class=\"keyword\">for</span> more info</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">/dev/mapper/centos-root /                       xfs     defaults        0 0</span></span><br><span class=\"line\">UUID=36bd4756-1521-4eea-93cb-9c8125b81e74 /boot                   xfs     defaults        0 0</span><br><span class=\"line\">UUID=B8B9-3229          /boot/efi               vfat    umask=0077,shortname=winnt 0 0</span><br><span class=\"line\">/dev/mapper/centos-home /home                   xfs     defaults        0 0</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span></span><br><span class=\"line\">/dev/sdb1 /data                                 ext4    defaults        0 0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>apm_system<br>\nkibana_system<br>\nlogstash_system<br>\nbeats_system</p>\n<p>113.98.244.167<br>\n113.98.244.169<br>\n113.98.244.170<br>\n113.98.244.181<br>\n113.98.244.183<br>\n113.98.244.184<br>\n113.98.244.185<br>\n113.98.244.187</p>\n","excerpt":"","more":"<h3 id=\"数据文件夹\">数据文件夹</h3>\n<p>data<br>\nmiddleware<br>\nelasticsearch<br>\nconfig<br>\ndata<br>\nplugins<br>\nlogs<br>\nkafka<br>\nminio<br>\ndata<br>\nconfig<br>\nnacos<br>\nredis<br>\nconfig/redis.conf<br>\ndata<br>\nzookeeper<br>\nconf<br>\ndata<br>\ndatalog<br>\nloganalysis<br>\nfilebeat<br>\ngrafana<br>\nkafka<br>\nkibana<br>\nlogstash<br>\nelasticsearch<br>\nmhprogram（开发程序）<br>\nmonitor<br>\nexporter<br>\nprometheus<br>\ngrafana<br>\nalertmanager</p>\n<p>home/idszt<br>\ndocker-compose<br>\nnode001<br>\nnode002<br>\nnode003<br>\nnode004<br>\nnode005<br>\nnode006<br>\nnode007<br>\nnode008<br>\nsystem-maintain<br>\nansible</p>\n<p>mkdir  node001 <br>\nnode002 <br>\nnode003<br>\nnode004<br>\nnode005<br>\nnode006<br>\nnode007<br>\nnode008<br>\nnode009</p>\n<p>磁盘分区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/fstab</span><br><span class=\"line\">/dev/sdb1 /data                                  xfs     defaults        0 0</span><br><span class=\"line\"></span><br><span class=\"line\">echo &#x27;/dev/sdb1 /data                                  xfs     defaults        0 0&#x27; &gt;&gt; /etc/fstab</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@local-node002 docker-compose]# lsblk</span><br><span class=\"line\">NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT</span><br><span class=\"line\">sda               8:0    0  100G  0 disk</span><br><span class=\"line\">├─sda1            8:1    0    1G  0 part /boot</span><br><span class=\"line\">└─sda2            8:2    0   99G  0 part</span><br><span class=\"line\">  ├─centos-root 253:0    0   50G  0 lvm  /</span><br><span class=\"line\">  ├─centos-swap 253:1    0  7.9G  0 lvm  [SWAP]</span><br><span class=\"line\">  └─centos-home 253:2    0 41.1G  0 lvm  /home</span><br><span class=\"line\">sdb               8:16   0  120G  0 disk</span><br><span class=\"line\">sr0              11:0    1  9.6G  0 rom</span><br><span class=\"line\">[root@local-node002 docker-compose]# fdisk -l</span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/sdb：128.8 GB, 128849018880 字节，251658240 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/sda：107.4 GB, 107374182400 字节，209715200 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\">磁盘标签类型：dos</span><br><span class=\"line\">磁盘标识符：0x000a7729</span><br><span class=\"line\"></span><br><span class=\"line\">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class=\"line\">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class=\"line\">/dev/sda2         2099200   209715199   103808000   8e  Linux LVM</span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/mapper/centos-swap：8455 MB, 8455716864 字节，16515072 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">磁盘 /dev/mapper/centos-home：44.1 GB, 44149243904 字节，86228992 个扇区</span><br><span class=\"line\">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class=\"line\">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class=\"line\">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class=\"line\"></span><br><span class=\"line\">[root@local-node002 docker-compose]# fdisk /dev/sdb</span><br><span class=\"line\">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class=\"line\"></span><br><span class=\"line\">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class=\"line\">使用写入命令前请三思。</span><br><span class=\"line\"></span><br><span class=\"line\">Device does not contain a recognized partition table</span><br><span class=\"line\">使用磁盘标识符 0xb67d57e8 创建新的 DOS 磁盘标签。</span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：n</span><br><span class=\"line\">Partition type:</span><br><span class=\"line\">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class=\"line\">   e   extended</span><br><span class=\"line\">Select (default p): p</span><br><span class=\"line\">分区号 (1-4，默认 1)：</span><br><span class=\"line\">起始 扇区 (2048-251658239，默认为 2048)：</span><br><span class=\"line\">将使用默认值 2048</span><br><span class=\"line\">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-251658239，默认为 251658239)：</span><br><span class=\"line\">将使用默认值 251658239</span><br><span class=\"line\">分区 1 已设置为 Linux 类型，大小设为 120 GiB</span><br><span class=\"line\"></span><br><span class=\"line\">命令(输入 m 获取帮助)：wq</span><br><span class=\"line\">The partition table has been altered!</span><br><span class=\"line\"></span><br><span class=\"line\">Calling ioctl() to re-read partition table.</span><br><span class=\"line\">正在同步磁盘。</span><br><span class=\"line\">[root@local-node002 docker-compose]# mkfs -t xfs /dev/sdb1</span><br><span class=\"line\">meta-data=/dev/sdb1              isize=512    agcount=4, agsize=7864256 blks</span><br><span class=\"line\">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class=\"line\">         =                       crc=1        finobt=0, sparse=0</span><br><span class=\"line\">data     =                       bsize=4096   blocks=31457024, imaxpct=25</span><br><span class=\"line\">         =                       sunit=0      swidth=0 blks</span><br><span class=\"line\">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class=\"line\">log      =internal log           bsize=4096   blocks=15359, version=2</span><br><span class=\"line\">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class=\"line\">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class=\"line\">[root@local-node002 docker-compose]# mount /dev/sdb1 /data</span><br><span class=\"line\">[root@local-node002 docker-compose]# df -lh</span><br><span class=\"line\">文件系统                 容量  已用  可用 已用% 挂载点</span><br><span class=\"line\">devtmpfs                 2.9G     0  2.9G    0% /dev</span><br><span class=\"line\">tmpfs                    2.9G     0  2.9G    0% /dev/shm</span><br><span class=\"line\">tmpfs                    2.9G  282M  2.6G   10% /run</span><br><span class=\"line\">tmpfs                    2.9G     0  2.9G    0% /sys/fs/cgroup</span><br><span class=\"line\">/dev/mapper/centos-root   50G   15G   36G   29% /</span><br><span class=\"line\">/dev/mapper/centos-home   42G   37M   42G    1% /home</span><br><span class=\"line\">/dev/sda1               1014M  187M  828M   19% /boot</span><br><span class=\"line\">tmpfs                    579M   12K  579M    1% /run/user/42</span><br><span class=\"line\">tmpfs                    579M     0  579M    0% /run/user/0</span><br><span class=\"line\">/dev/sdb1                120G   33M  120G    1% /data</span><br><span class=\"line\">[root@local-node002 docker-compose]# echo &#x27;/dev/sdb1 /data                                  xfs     defaults        0 0&#x27; &gt;&gt; /etc/fstab</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>ifconfig ens33:0 192.168.139.18 netmask 255.255.255.0 up</p>\n<h3 id=\"时间同步\">时间同步</h3>\n<p>ntpdate 119.23.155.163</p>\n<p>time dd if=/dev/zero-iotest of=test.file bs=8G count=4 oflag=direct</p>\n<h3 id=\"系统配置\">系统配置</h3>\n<p>vi /etc/sysctl.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">redis配置</span></span><br><span class=\"line\">vm.max_map_count=262144</span><br><span class=\"line\">net.core.somaxconn = 1024</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"添加变量短路径-后期配\">添加变量短路径(后期配)</h3>\n<p>/etc/profile</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export kafka_docker-compose_path=/home/idszt/docker-compose/middleware/kafka</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"关闭交换空间\">关闭交换空间</h3>\n<h1>注释 swap 行</h1>\n<p>vim /etc/fstab</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">sed -i &quot;s/^[^#].*centos-swap*/#&amp;/g&quot; /etc/fstab</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： s:替换</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">:  ^:开头匹配</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： [^#]:匹配非#含centos-swap的行</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： <span class=\"comment\">#&amp;:中的&amp;代表匹配整行，整个意思就是行前面加上#号</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">： g:全部（只匹配特定行不加）</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sed -i &quot;s/^[^#].*centos-swap*/#&amp;/g&quot; /etc/fstab &amp;&amp; cat /etc/fstab</span><br><span class=\"line\">[root@idszt-node001 kafka]# cat /etc/fstab</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># /etc/fstab</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Created by anaconda on Sun Jun  4 15:21:48 2023</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) <span class=\"keyword\">for</span> more info</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">/dev/mapper/centos-root /                       xfs     defaults        0 0</span></span><br><span class=\"line\">UUID=36bd4756-1521-4eea-93cb-9c8125b81e74 /boot                   xfs     defaults        0 0</span><br><span class=\"line\">UUID=B8B9-3229          /boot/efi               vfat    umask=0077,shortname=winnt 0 0</span><br><span class=\"line\">/dev/mapper/centos-home /home                   xfs     defaults        0 0</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span></span><br><span class=\"line\">/dev/sdb1 /data                                 ext4    defaults        0 0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>apm_system<br>\nkibana_system<br>\nlogstash_system<br>\nbeats_system</p>\n<p>113.98.244.167<br>\n113.98.244.169<br>\n113.98.244.170<br>\n113.98.244.181<br>\n113.98.244.183<br>\n113.98.244.184<br>\n113.98.244.185<br>\n113.98.244.187</p>\n"},{"title":"docker提示磁盘空间不足","author":"空空","_content":"\n## 简述\n1. docker启动异常，发现磁盘空间不足，`/var/lib/docker`目录的使用率过高。\n2. 进一步检查后，发现inode已经用尽，这是问题的根本。\n3. 通过统计根目录下每个目录的文件数量，确认/data目录中的文件数量异常,\n4. 溯源到开发端的一个调度监控插件，频繁写入大量日志记录。\n5. 与开发端沟通后，设置定期清理/data目录中的文件，释放了大量inode。\n6. 重新启动之前无法启动的Docker容器，恢复正常。\n\n\n\n## 1. 尝试启动Docker容器，报错显示磁盘空间不足\n```shell\n[root@dahouzi-dev ~]# docker start 03fc94c2b9d5\nError response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device\nError: failed to start containers: 03fc94c2b9d5\n```\n\n## 2. 查看磁盘使用情况，发现/var/lib/docker的使用率很高\n```shell\n[root@dahouzi-dev overlay2]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        99G   72G   23G  76% /\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G  4.0K  7.8G   1% /dev/shm\ntmpfs           7.8G  1.7M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\ntmpfs           1.6G     0  1.6G   0% /run/user/0\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n\n```\n\n## 3. 查看inode使用情况，发现inode已满\n已达到系统默认最大值6553600\n```shell\n[root@dahouzi-dev overlay2]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 6553600       0  100% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     784 2032506    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n\n```\n\n## 4. 查看所有Docker容器的状态\n```shell\n[root@dahouzi-dev containers]# docker ps -a\nCONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES\n196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               \"/usr/bin/docker-ent…\"   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04\n03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          \"start-kafka.sh\"         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01\n499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   \"/bin/tini -- /usr/l…\"   2 days ago     Up 47 hours                     0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp         dev-es-standalone-01\nc4639ca30b87   nacos/nacos-server:v2.1.1                              \"bin/docker-startup.…\"   2 days ago     Up 2 days                       0.0.0.0:8848->8848/tcp                                 dev-nacos-standalone-01\n859f688f4f88   mysql:8.0.32                                           \"docker-entrypoint.s…\"   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01\nf73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 \"/bin/tini -- /usr/l…\"   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01\nedabda1c3642   zookeeper:3.7.1                                        \"/docker-entrypoint.…\"   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp   dev-zookeeper-standalone-01\n2269262cd40b   redis:7.0.11                                           \"docker-entrypoint.s…\"   7 weeks ago    Up 2 days                       0.0.0.0:6379->6379/tcp                                 dev-redis-standalone-01\nc2c59fff741c   portainer/portainer                                    \"/portainer\"             5 months ago   Up 2 days                       0.0.0.0:9999->9000/tcp                                 portainer\n```\n\n## 5. 统计根目录下每个目录的文件数量\n关注`/data 5956444`是容器挂载出来的文件夹，进一步统计或进入查看即可发现原因\n```shell\n[root@dahouzi-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done\n/bin\n1\n/boot\n332\n--------/data 5956444-------\n/dev\n369\n/etc\n2469\n/ftpdir\n146\n/ftpdir1\n12\n/ftpoffline\n1\n/home\n28211\n/lib\n1\n/lib64\n1\n/lost+found\n1\n/media\n1\n/mnt\n1\n/opt\n263923\n/proc\n294447\n/root\n3651\n/run\n649\n/sbin\n1\n/srv\n1\n/sys\n245\n/tmp\n1\n/usr\n475924\n/var\n147674\n```\n\n## 6. 重启之前无法启动的容器\n```shell\n[root@dahouzi-dev ~]# docker start 03fc94c2b9d5\n03fc94c2b9d5\n```\n\n## 7. 验证容器成功启动\n```\n[root@dahouzi-dev ~]# docker ps\nCONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS              PORTS                                                  NAMES\n196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               \"/usr/bin/docker-ent…\"   42 hours ago   Up About a minute                                                          dev-minio-standalone-04\n03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          \"start-kafka.sh\"         2 days ago     Up 2 seconds                                                                dev-kafka-standalone-01\n499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   \"/bin/tini -- /usr/l…\"   2 days ago     Up 47 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp         dev-es-standalone-01\nc4639ca30b87   nacos/nacos-server:v2.1.1                              \"bin/docker-startup.…\"   2 days ago     Up 2 days           0.0.0.0:8848->8848/tcp                                 dev-nacos-standalone-01\n859f688f4f88   mysql:8.0.32                                           \"docker-entrypoint.s…\"   2 days ago     Up 1 second                                                                 dev-mysql-standalone-01\nf73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 \"/bin/tini -- /usr/l…\"   7 weeks ago    Up About a minute                                                          dev-kibana-standalone-01\nedabda1c3642   zookeeper:3.7.1                                        \"/docker-entrypoint.…\"   7 weeks ago    Up 2 days           2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp   dev-zookeeper-standalone-01\n2269262cd40b   redis:7.0.11                                           \"docker-entrypoint.s…\"   7 weeks ago    Up 2 days           0.0.0.0:6379->6379/tcp                                 dev-redis-standalone-01\nc2c59fff741c   portainer/portainer                                    \"/portainer\"             5 months ago   Up 2 days           0.0.0.0:9999->9000/tcp                                 portainer\n```\n\n","source":"_posts/09异常处理/docker提示磁盘空间不足.md","raw":"\n---\ntitle: docker提示磁盘空间不足\nauthor: 空空\n---\n\n## 简述\n1. docker启动异常，发现磁盘空间不足，`/var/lib/docker`目录的使用率过高。\n2. 进一步检查后，发现inode已经用尽，这是问题的根本。\n3. 通过统计根目录下每个目录的文件数量，确认/data目录中的文件数量异常,\n4. 溯源到开发端的一个调度监控插件，频繁写入大量日志记录。\n5. 与开发端沟通后，设置定期清理/data目录中的文件，释放了大量inode。\n6. 重新启动之前无法启动的Docker容器，恢复正常。\n\n\n\n## 1. 尝试启动Docker容器，报错显示磁盘空间不足\n```shell\n[root@dahouzi-dev ~]# docker start 03fc94c2b9d5\nError response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device\nError: failed to start containers: 03fc94c2b9d5\n```\n\n## 2. 查看磁盘使用情况，发现/var/lib/docker的使用率很高\n```shell\n[root@dahouzi-dev overlay2]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        99G   72G   23G  76% /\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G  4.0K  7.8G   1% /dev/shm\ntmpfs           7.8G  1.7M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\ntmpfs           1.6G     0  1.6G   0% /run/user/0\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n\n```\n\n## 3. 查看inode使用情况，发现inode已满\n已达到系统默认最大值6553600\n```shell\n[root@dahouzi-dev overlay2]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 6553600       0  100% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     784 2032506    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n\n```\n\n## 4. 查看所有Docker容器的状态\n```shell\n[root@dahouzi-dev containers]# docker ps -a\nCONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES\n196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               \"/usr/bin/docker-ent…\"   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04\n03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          \"start-kafka.sh\"         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01\n499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   \"/bin/tini -- /usr/l…\"   2 days ago     Up 47 hours                     0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp         dev-es-standalone-01\nc4639ca30b87   nacos/nacos-server:v2.1.1                              \"bin/docker-startup.…\"   2 days ago     Up 2 days                       0.0.0.0:8848->8848/tcp                                 dev-nacos-standalone-01\n859f688f4f88   mysql:8.0.32                                           \"docker-entrypoint.s…\"   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01\nf73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 \"/bin/tini -- /usr/l…\"   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01\nedabda1c3642   zookeeper:3.7.1                                        \"/docker-entrypoint.…\"   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp   dev-zookeeper-standalone-01\n2269262cd40b   redis:7.0.11                                           \"docker-entrypoint.s…\"   7 weeks ago    Up 2 days                       0.0.0.0:6379->6379/tcp                                 dev-redis-standalone-01\nc2c59fff741c   portainer/portainer                                    \"/portainer\"             5 months ago   Up 2 days                       0.0.0.0:9999->9000/tcp                                 portainer\n```\n\n## 5. 统计根目录下每个目录的文件数量\n关注`/data 5956444`是容器挂载出来的文件夹，进一步统计或进入查看即可发现原因\n```shell\n[root@dahouzi-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done\n/bin\n1\n/boot\n332\n--------/data 5956444-------\n/dev\n369\n/etc\n2469\n/ftpdir\n146\n/ftpdir1\n12\n/ftpoffline\n1\n/home\n28211\n/lib\n1\n/lib64\n1\n/lost+found\n1\n/media\n1\n/mnt\n1\n/opt\n263923\n/proc\n294447\n/root\n3651\n/run\n649\n/sbin\n1\n/srv\n1\n/sys\n245\n/tmp\n1\n/usr\n475924\n/var\n147674\n```\n\n## 6. 重启之前无法启动的容器\n```shell\n[root@dahouzi-dev ~]# docker start 03fc94c2b9d5\n03fc94c2b9d5\n```\n\n## 7. 验证容器成功启动\n```\n[root@dahouzi-dev ~]# docker ps\nCONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS              PORTS                                                  NAMES\n196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               \"/usr/bin/docker-ent…\"   42 hours ago   Up About a minute                                                          dev-minio-standalone-04\n03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          \"start-kafka.sh\"         2 days ago     Up 2 seconds                                                                dev-kafka-standalone-01\n499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   \"/bin/tini -- /usr/l…\"   2 days ago     Up 47 hours         0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp         dev-es-standalone-01\nc4639ca30b87   nacos/nacos-server:v2.1.1                              \"bin/docker-startup.…\"   2 days ago     Up 2 days           0.0.0.0:8848->8848/tcp                                 dev-nacos-standalone-01\n859f688f4f88   mysql:8.0.32                                           \"docker-entrypoint.s…\"   2 days ago     Up 1 second                                                                 dev-mysql-standalone-01\nf73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 \"/bin/tini -- /usr/l…\"   7 weeks ago    Up About a minute                                                          dev-kibana-standalone-01\nedabda1c3642   zookeeper:3.7.1                                        \"/docker-entrypoint.…\"   7 weeks ago    Up 2 days           2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp   dev-zookeeper-standalone-01\n2269262cd40b   redis:7.0.11                                           \"docker-entrypoint.s…\"   7 weeks ago    Up 2 days           0.0.0.0:6379->6379/tcp                                 dev-redis-standalone-01\nc2c59fff741c   portainer/portainer                                    \"/portainer\"             5 months ago   Up 2 days           0.0.0.0:9999->9000/tcp                                 portainer\n```\n\n","slug":"09异常处理/docker提示磁盘空间不足","published":1,"date":"2024-07-18T04:50:27.016Z","updated":"2024-07-18T05:59:56.565Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o180015zb8a00aq1h28","content":"<h2 id=\"简述\">简述</h2>\n<ol>\n<li>docker启动异常，发现磁盘空间不足，<code>/var/lib/docker</code>目录的使用率过高。</li>\n<li>进一步检查后，发现inode已经用尽，这是问题的根本。</li>\n<li>通过统计根目录下每个目录的文件数量，确认/data目录中的文件数量异常,</li>\n<li>溯源到开发端的一个调度监控插件，频繁写入大量日志记录。</li>\n<li>与开发端沟通后，设置定期清理/data目录中的文件，释放了大量inode。</li>\n<li>重新启动之前无法启动的Docker容器，恢复正常。</li>\n</ol>\n<h2 id=\"1-尝试启动Docker容器，报错显示磁盘空间不足\">1. 尝试启动Docker容器，报错显示磁盘空间不足</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev ~]# docker start 03fc94c2b9d5</span><br><span class=\"line\">Error response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device</span><br><span class=\"line\">Error: failed to start containers: 03fc94c2b9d5</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-查看磁盘使用情况，发现-var-lib-docker的使用率很高\">2. 查看磁盘使用情况，发现/var/lib/docker的使用率很高</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev overlay2]# df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/vda1        99G   72G   23G  76% /</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G  4.0K  7.8G   1% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  1.7M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查看inode使用情况，发现inode已满\">3. 查看inode使用情况，发现inode已满</h2>\n<p>已达到系统默认最大值6553600</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev overlay2]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 6553600       0  100% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     784 2032506    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-查看所有Docker容器的状态\">4. 查看所有Docker容器的状态</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev containers]# docker ps -a</span><br><span class=\"line\">CONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES</span><br><span class=\"line\">196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               &quot;/usr/bin/docker-ent…&quot;   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04</span><br><span class=\"line\">03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          &quot;start-kafka.sh&quot;         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01</span><br><span class=\"line\">499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   &quot;/bin/tini -- /usr/l…&quot;   2 days ago     Up 47 hours                     0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp         dev-es-standalone-01</span><br><span class=\"line\">c4639ca30b87   nacos/nacos-server:v2.1.1                              &quot;bin/docker-startup.…&quot;   2 days ago     Up 2 days                       0.0.0.0:8848-&gt;8848/tcp                                 dev-nacos-standalone-01</span><br><span class=\"line\">859f688f4f88   mysql:8.0.32                                           &quot;docker-entrypoint.s…&quot;   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01</span><br><span class=\"line\">f73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 &quot;/bin/tini -- /usr/l…&quot;   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01</span><br><span class=\"line\">edabda1c3642   zookeeper:3.7.1                                        &quot;/docker-entrypoint.…&quot;   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 8080/tcp   dev-zookeeper-standalone-01</span><br><span class=\"line\">2269262cd40b   redis:7.0.11                                           &quot;docker-entrypoint.s…&quot;   7 weeks ago    Up 2 days                       0.0.0.0:6379-&gt;6379/tcp                                 dev-redis-standalone-01</span><br><span class=\"line\">c2c59fff741c   portainer/portainer                                    &quot;/portainer&quot;             5 months ago   Up 2 days                       0.0.0.0:9999-&gt;9000/tcp                                 portainer</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-统计根目录下每个目录的文件数量\">5. 统计根目录下每个目录的文件数量</h2>\n<p>关注<code>/data 5956444</code>是容器挂载出来的文件夹，进一步统计或进入查看即可发现原因</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done</span><br><span class=\"line\">/bin</span><br><span class=\"line\">1</span><br><span class=\"line\">/boot</span><br><span class=\"line\">332</span><br><span class=\"line\">--------/data 5956444-------</span><br><span class=\"line\">/dev</span><br><span class=\"line\">369</span><br><span class=\"line\">/etc</span><br><span class=\"line\">2469</span><br><span class=\"line\">/ftpdir</span><br><span class=\"line\">146</span><br><span class=\"line\">/ftpdir1</span><br><span class=\"line\">12</span><br><span class=\"line\">/ftpoffline</span><br><span class=\"line\">1</span><br><span class=\"line\">/home</span><br><span class=\"line\">28211</span><br><span class=\"line\">/lib</span><br><span class=\"line\">1</span><br><span class=\"line\">/lib64</span><br><span class=\"line\">1</span><br><span class=\"line\">/lost+found</span><br><span class=\"line\">1</span><br><span class=\"line\">/media</span><br><span class=\"line\">1</span><br><span class=\"line\">/mnt</span><br><span class=\"line\">1</span><br><span class=\"line\">/opt</span><br><span class=\"line\">263923</span><br><span class=\"line\">/proc</span><br><span class=\"line\">294447</span><br><span class=\"line\">/root</span><br><span class=\"line\">3651</span><br><span class=\"line\">/run</span><br><span class=\"line\">649</span><br><span class=\"line\">/sbin</span><br><span class=\"line\">1</span><br><span class=\"line\">/srv</span><br><span class=\"line\">1</span><br><span class=\"line\">/sys</span><br><span class=\"line\">245</span><br><span class=\"line\">/tmp</span><br><span class=\"line\">1</span><br><span class=\"line\">/usr</span><br><span class=\"line\">475924</span><br><span class=\"line\">/var</span><br><span class=\"line\">147674</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-重启之前无法启动的容器\">6. 重启之前无法启动的容器</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev ~]# docker start 03fc94c2b9d5</span><br><span class=\"line\">03fc94c2b9d5</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-验证容器成功启动\">7. 验证容器成功启动</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev ~]# docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS              PORTS                                                  NAMES</span><br><span class=\"line\">196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               &quot;/usr/bin/docker-ent…&quot;   42 hours ago   Up About a minute                                                          dev-minio-standalone-04</span><br><span class=\"line\">03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          &quot;start-kafka.sh&quot;         2 days ago     Up 2 seconds                                                                dev-kafka-standalone-01</span><br><span class=\"line\">499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   &quot;/bin/tini -- /usr/l…&quot;   2 days ago     Up 47 hours         0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp         dev-es-standalone-01</span><br><span class=\"line\">c4639ca30b87   nacos/nacos-server:v2.1.1                              &quot;bin/docker-startup.…&quot;   2 days ago     Up 2 days           0.0.0.0:8848-&gt;8848/tcp                                 dev-nacos-standalone-01</span><br><span class=\"line\">859f688f4f88   mysql:8.0.32                                           &quot;docker-entrypoint.s…&quot;   2 days ago     Up 1 second                                                                 dev-mysql-standalone-01</span><br><span class=\"line\">f73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 &quot;/bin/tini -- /usr/l…&quot;   7 weeks ago    Up About a minute                                                          dev-kibana-standalone-01</span><br><span class=\"line\">edabda1c3642   zookeeper:3.7.1                                        &quot;/docker-entrypoint.…&quot;   7 weeks ago    Up 2 days           2888/tcp, 3888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 8080/tcp   dev-zookeeper-standalone-01</span><br><span class=\"line\">2269262cd40b   redis:7.0.11                                           &quot;docker-entrypoint.s…&quot;   7 weeks ago    Up 2 days           0.0.0.0:6379-&gt;6379/tcp                                 dev-redis-standalone-01</span><br><span class=\"line\">c2c59fff741c   portainer/portainer                                    &quot;/portainer&quot;             5 months ago   Up 2 days           0.0.0.0:9999-&gt;9000/tcp                                 portainer</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"简述\">简述</h2>\n<ol>\n<li>docker启动异常，发现磁盘空间不足，<code>/var/lib/docker</code>目录的使用率过高。</li>\n<li>进一步检查后，发现inode已经用尽，这是问题的根本。</li>\n<li>通过统计根目录下每个目录的文件数量，确认/data目录中的文件数量异常,</li>\n<li>溯源到开发端的一个调度监控插件，频繁写入大量日志记录。</li>\n<li>与开发端沟通后，设置定期清理/data目录中的文件，释放了大量inode。</li>\n<li>重新启动之前无法启动的Docker容器，恢复正常。</li>\n</ol>\n<h2 id=\"1-尝试启动Docker容器，报错显示磁盘空间不足\">1. 尝试启动Docker容器，报错显示磁盘空间不足</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev ~]# docker start 03fc94c2b9d5</span><br><span class=\"line\">Error response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device</span><br><span class=\"line\">Error: failed to start containers: 03fc94c2b9d5</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-查看磁盘使用情况，发现-var-lib-docker的使用率很高\">2. 查看磁盘使用情况，发现/var/lib/docker的使用率很高</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev overlay2]# df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/vda1        99G   72G   23G  76% /</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G  4.0K  7.8G   1% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  1.7M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查看inode使用情况，发现inode已满\">3. 查看inode使用情况，发现inode已满</h2>\n<p>已达到系统默认最大值6553600</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev overlay2]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 6553600       0  100% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     784 2032506    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-查看所有Docker容器的状态\">4. 查看所有Docker容器的状态</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev containers]# docker ps -a</span><br><span class=\"line\">CONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES</span><br><span class=\"line\">196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               &quot;/usr/bin/docker-ent…&quot;   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04</span><br><span class=\"line\">03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          &quot;start-kafka.sh&quot;         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01</span><br><span class=\"line\">499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   &quot;/bin/tini -- /usr/l…&quot;   2 days ago     Up 47 hours                     0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp         dev-es-standalone-01</span><br><span class=\"line\">c4639ca30b87   nacos/nacos-server:v2.1.1                              &quot;bin/docker-startup.…&quot;   2 days ago     Up 2 days                       0.0.0.0:8848-&gt;8848/tcp                                 dev-nacos-standalone-01</span><br><span class=\"line\">859f688f4f88   mysql:8.0.32                                           &quot;docker-entrypoint.s…&quot;   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01</span><br><span class=\"line\">f73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 &quot;/bin/tini -- /usr/l…&quot;   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01</span><br><span class=\"line\">edabda1c3642   zookeeper:3.7.1                                        &quot;/docker-entrypoint.…&quot;   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 8080/tcp   dev-zookeeper-standalone-01</span><br><span class=\"line\">2269262cd40b   redis:7.0.11                                           &quot;docker-entrypoint.s…&quot;   7 weeks ago    Up 2 days                       0.0.0.0:6379-&gt;6379/tcp                                 dev-redis-standalone-01</span><br><span class=\"line\">c2c59fff741c   portainer/portainer                                    &quot;/portainer&quot;             5 months ago   Up 2 days                       0.0.0.0:9999-&gt;9000/tcp                                 portainer</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-统计根目录下每个目录的文件数量\">5. 统计根目录下每个目录的文件数量</h2>\n<p>关注<code>/data 5956444</code>是容器挂载出来的文件夹，进一步统计或进入查看即可发现原因</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done</span><br><span class=\"line\">/bin</span><br><span class=\"line\">1</span><br><span class=\"line\">/boot</span><br><span class=\"line\">332</span><br><span class=\"line\">--------/data 5956444-------</span><br><span class=\"line\">/dev</span><br><span class=\"line\">369</span><br><span class=\"line\">/etc</span><br><span class=\"line\">2469</span><br><span class=\"line\">/ftpdir</span><br><span class=\"line\">146</span><br><span class=\"line\">/ftpdir1</span><br><span class=\"line\">12</span><br><span class=\"line\">/ftpoffline</span><br><span class=\"line\">1</span><br><span class=\"line\">/home</span><br><span class=\"line\">28211</span><br><span class=\"line\">/lib</span><br><span class=\"line\">1</span><br><span class=\"line\">/lib64</span><br><span class=\"line\">1</span><br><span class=\"line\">/lost+found</span><br><span class=\"line\">1</span><br><span class=\"line\">/media</span><br><span class=\"line\">1</span><br><span class=\"line\">/mnt</span><br><span class=\"line\">1</span><br><span class=\"line\">/opt</span><br><span class=\"line\">263923</span><br><span class=\"line\">/proc</span><br><span class=\"line\">294447</span><br><span class=\"line\">/root</span><br><span class=\"line\">3651</span><br><span class=\"line\">/run</span><br><span class=\"line\">649</span><br><span class=\"line\">/sbin</span><br><span class=\"line\">1</span><br><span class=\"line\">/srv</span><br><span class=\"line\">1</span><br><span class=\"line\">/sys</span><br><span class=\"line\">245</span><br><span class=\"line\">/tmp</span><br><span class=\"line\">1</span><br><span class=\"line\">/usr</span><br><span class=\"line\">475924</span><br><span class=\"line\">/var</span><br><span class=\"line\">147674</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-重启之前无法启动的容器\">6. 重启之前无法启动的容器</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev ~]# docker start 03fc94c2b9d5</span><br><span class=\"line\">03fc94c2b9d5</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-验证容器成功启动\">7. 验证容器成功启动</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@dahouzi-dev ~]# docker ps</span><br><span class=\"line\">CONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS              PORTS                                                  NAMES</span><br><span class=\"line\">196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               &quot;/usr/bin/docker-ent…&quot;   42 hours ago   Up About a minute                                                          dev-minio-standalone-04</span><br><span class=\"line\">03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          &quot;start-kafka.sh&quot;         2 days ago     Up 2 seconds                                                                dev-kafka-standalone-01</span><br><span class=\"line\">499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   &quot;/bin/tini -- /usr/l…&quot;   2 days ago     Up 47 hours         0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp         dev-es-standalone-01</span><br><span class=\"line\">c4639ca30b87   nacos/nacos-server:v2.1.1                              &quot;bin/docker-startup.…&quot;   2 days ago     Up 2 days           0.0.0.0:8848-&gt;8848/tcp                                 dev-nacos-standalone-01</span><br><span class=\"line\">859f688f4f88   mysql:8.0.32                                           &quot;docker-entrypoint.s…&quot;   2 days ago     Up 1 second                                                                 dev-mysql-standalone-01</span><br><span class=\"line\">f73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 &quot;/bin/tini -- /usr/l…&quot;   7 weeks ago    Up About a minute                                                          dev-kibana-standalone-01</span><br><span class=\"line\">edabda1c3642   zookeeper:3.7.1                                        &quot;/docker-entrypoint.…&quot;   7 weeks ago    Up 2 days           2888/tcp, 3888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 8080/tcp   dev-zookeeper-standalone-01</span><br><span class=\"line\">2269262cd40b   redis:7.0.11                                           &quot;docker-entrypoint.s…&quot;   7 weeks ago    Up 2 days           0.0.0.0:6379-&gt;6379/tcp                                 dev-redis-standalone-01</span><br><span class=\"line\">c2c59fff741c   portainer/portainer                                    &quot;/portainer&quot;             5 months ago   Up 2 days           0.0.0.0:9999-&gt;9000/tcp                                 portainer</span><br></pre></td></tr></table></figure>\n"},{"title":"10.1.linux系统备份到NAS服务器","date":"2018-05-15T16:00:00.000Z","_content":"\n## 一、流程步骤解释\n### 1. 定义变量：\n\n设置用于访问远程共享目录的用户名和密码。\n定义远程共享目录路径。\n定义本地挂载点。\n\n### 2. 挂载远程共享目录：\n\n先卸载本地挂载点，避免异常。\n使用 mount 命令将远程共享目录挂载到本地路径。\n\n### 3. 本地备份：\n\n定义本地备份路径和备份文件名。\n检查并创建本地备份目录。\n使用 tar 命令将系统备份到本地备份文件，排除不需要备份的目录。\n\n### 4. 检查挂载：\n\n- 定义远程目录下的日志文件，用于判断路径是否成功挂载。\n- 检查日志文件是否存在以判断挂载是否成功。\n如果挂载失败，记录失败日志。\n如果挂载成功，执行以下操作：\n\n    记录挂载成功日志。\n    复制本地备份文件到远程共享目录。\n    删除本地备份文件。\n    删除远程3天前的备份文件，并记录日志。\n    记录备份成功日志。\n\n## 二、详细脚本\n\n```shell\n#!/bin/sh\n#此脚本用于将linux系统备份到windows共享文件夹或NAS服务器，\n#原理是1.备份系统到本地2.挂载远程路径到linux3.将备份文件复制到该路径下4.删除过期的备份文件、断开连接\n\n# 1. 定义变量\nusername='backup'              # 访问远程共享目录的用户名\npassword='backup'              # 访问远程共享目录的密码\nremotepath=\"//172.29.60.22/backup/linux/oracle\"  # 远程共享目录路径\n\nlocalpath=\"/backup22\"          # 本地挂载点\numount $localpath              # 先卸载本地挂载点，避免异常\n\n# 2. 挂载远程共享目录到本地\nmount -t cifs -o username=$username,password=$password $remotepath $localpath\n\n# 3. 定义本地备份路径和文件名\nlocalBackupPath=\"/usr/localbackup\"\nbackupToFile=$localBackupPath/$HOSTNAME\"_backup`date +%y%m%d`.tgz\"\n\n# 4. 定义要删除的3天前的备份文件路径\nbeforeThreeDayFile=\"/backup22/oradb_backup`date -d -8day +%y%m%d`.tgz\"\n\n# 5. 检查并创建本地备份目录\nif [ ! -d \"$localBackupPath\" ]; then\n    mkdir $localBackupPath\nfi\n\n# 6. 备份系统到本地备份文件\ntar -cvpzf $backupToFile --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/media --exclude=$localBackupPath --exclude=$localpath /\n\n# 7. 定义远程目录下的日志文件，用于判断路径是否成功挂载\nlogFile=\"/backup22/backup_log_in22.txt\"\n\n# 8. 检查挂载是否成功\nif [ ! -f \"$logFile\" ]; then  \n    echo -e \"`date +%y%m%d_%T`挂载失败\\n\" >> \"/backup22/backup_log_local.txt\"\n    echo -e \"`date +%y%m%d_%T`挂载失败\\n\"\nelse\n    echo -e \"`date +%y%m%d_%T`已挂载备份服务器到本地\\n\" >> \"$logFile\"\n    \n    # 9. 复制备份文件到远程共享目录\n    cp $backupToFile $localpath\n    \n    # 10. 删除本地备份文件\n    rm -f $backupToFile\n    \n    # 11. 删除远程3天前的备份文件\n    rm -f $beforeThreeDayFile\n    echo -e \"\\n三天前的文件已删除\"$beforeThreeDayFile >> \"$logFile\"\n    \n    # 12. 记录备份成功日志\n    echo -e \"\\n`date +%y%m%d_%T`备份成功_\"$backupToFile >> \"$logFile\"\n    echo -e \"\\n`date +%y%m%d_%T`备份成功_\"$backupToFile\nfi\n```","source":"_posts/10未分类/10.1.linux系统备份到NAS服务器.md","raw":"---\ntitle: 10.1.linux系统备份到NAS服务器\ndate: 2018-05-16\n\n\n---\n\n## 一、流程步骤解释\n### 1. 定义变量：\n\n设置用于访问远程共享目录的用户名和密码。\n定义远程共享目录路径。\n定义本地挂载点。\n\n### 2. 挂载远程共享目录：\n\n先卸载本地挂载点，避免异常。\n使用 mount 命令将远程共享目录挂载到本地路径。\n\n### 3. 本地备份：\n\n定义本地备份路径和备份文件名。\n检查并创建本地备份目录。\n使用 tar 命令将系统备份到本地备份文件，排除不需要备份的目录。\n\n### 4. 检查挂载：\n\n- 定义远程目录下的日志文件，用于判断路径是否成功挂载。\n- 检查日志文件是否存在以判断挂载是否成功。\n如果挂载失败，记录失败日志。\n如果挂载成功，执行以下操作：\n\n    记录挂载成功日志。\n    复制本地备份文件到远程共享目录。\n    删除本地备份文件。\n    删除远程3天前的备份文件，并记录日志。\n    记录备份成功日志。\n\n## 二、详细脚本\n\n```shell\n#!/bin/sh\n#此脚本用于将linux系统备份到windows共享文件夹或NAS服务器，\n#原理是1.备份系统到本地2.挂载远程路径到linux3.将备份文件复制到该路径下4.删除过期的备份文件、断开连接\n\n# 1. 定义变量\nusername='backup'              # 访问远程共享目录的用户名\npassword='backup'              # 访问远程共享目录的密码\nremotepath=\"//172.29.60.22/backup/linux/oracle\"  # 远程共享目录路径\n\nlocalpath=\"/backup22\"          # 本地挂载点\numount $localpath              # 先卸载本地挂载点，避免异常\n\n# 2. 挂载远程共享目录到本地\nmount -t cifs -o username=$username,password=$password $remotepath $localpath\n\n# 3. 定义本地备份路径和文件名\nlocalBackupPath=\"/usr/localbackup\"\nbackupToFile=$localBackupPath/$HOSTNAME\"_backup`date +%y%m%d`.tgz\"\n\n# 4. 定义要删除的3天前的备份文件路径\nbeforeThreeDayFile=\"/backup22/oradb_backup`date -d -8day +%y%m%d`.tgz\"\n\n# 5. 检查并创建本地备份目录\nif [ ! -d \"$localBackupPath\" ]; then\n    mkdir $localBackupPath\nfi\n\n# 6. 备份系统到本地备份文件\ntar -cvpzf $backupToFile --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/media --exclude=$localBackupPath --exclude=$localpath /\n\n# 7. 定义远程目录下的日志文件，用于判断路径是否成功挂载\nlogFile=\"/backup22/backup_log_in22.txt\"\n\n# 8. 检查挂载是否成功\nif [ ! -f \"$logFile\" ]; then  \n    echo -e \"`date +%y%m%d_%T`挂载失败\\n\" >> \"/backup22/backup_log_local.txt\"\n    echo -e \"`date +%y%m%d_%T`挂载失败\\n\"\nelse\n    echo -e \"`date +%y%m%d_%T`已挂载备份服务器到本地\\n\" >> \"$logFile\"\n    \n    # 9. 复制备份文件到远程共享目录\n    cp $backupToFile $localpath\n    \n    # 10. 删除本地备份文件\n    rm -f $backupToFile\n    \n    # 11. 删除远程3天前的备份文件\n    rm -f $beforeThreeDayFile\n    echo -e \"\\n三天前的文件已删除\"$beforeThreeDayFile >> \"$logFile\"\n    \n    # 12. 记录备份成功日志\n    echo -e \"\\n`date +%y%m%d_%T`备份成功_\"$backupToFile >> \"$logFile\"\n    echo -e \"\\n`date +%y%m%d_%T`备份成功_\"$backupToFile\nfi\n```","slug":"10未分类/10.1.linux系统备份到NAS服务器","published":1,"updated":"2024-07-19T10:27:53.755Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o1a0016zb8a7bihcmkw","content":"<h2 id=\"一、流程步骤解释\">一、流程步骤解释</h2>\n<h3 id=\"1-定义变量：\">1. 定义变量：</h3>\n<p>设置用于访问远程共享目录的用户名和密码。<br>\n定义远程共享目录路径。<br>\n定义本地挂载点。</p>\n<h3 id=\"2-挂载远程共享目录：\">2. 挂载远程共享目录：</h3>\n<p>先卸载本地挂载点，避免异常。<br>\n使用 mount 命令将远程共享目录挂载到本地路径。</p>\n<h3 id=\"3-本地备份：\">3. 本地备份：</h3>\n<p>定义本地备份路径和备份文件名。<br>\n检查并创建本地备份目录。<br>\n使用 tar 命令将系统备份到本地备份文件，排除不需要备份的目录。</p>\n<h3 id=\"4-检查挂载：\">4. 检查挂载：</h3>\n<ul>\n<li>\n<p>定义远程目录下的日志文件，用于判断路径是否成功挂载。</p>\n</li>\n<li>\n<p>检查日志文件是否存在以判断挂载是否成功。<br>\n如果挂载失败，记录失败日志。<br>\n如果挂载成功，执行以下操作：</p>\n<p>记录挂载成功日志。<br>\n复制本地备份文件到远程共享目录。<br>\n删除本地备份文件。<br>\n删除远程3天前的备份文件，并记录日志。<br>\n记录备份成功日志。</p>\n</li>\n</ul>\n<h2 id=\"二、详细脚本\">二、详细脚本</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">此脚本用于将linux系统备份到windows共享文件夹或NAS服务器，</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">原理是1.备份系统到本地2.挂载远程路径到linux3.将备份文件复制到该路径下4.删除过期的备份文件、断开连接</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1. 定义变量</span></span><br><span class=\"line\">username=&#x27;backup&#x27;              # 访问远程共享目录的用户名</span><br><span class=\"line\">password=&#x27;backup&#x27;              # 访问远程共享目录的密码</span><br><span class=\"line\">remotepath=&quot;//172.29.60.22/backup/linux/oracle&quot;  # 远程共享目录路径</span><br><span class=\"line\"></span><br><span class=\"line\">localpath=&quot;/backup22&quot;          # 本地挂载点</span><br><span class=\"line\">umount $localpath              # 先卸载本地挂载点，避免异常</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2. 挂载远程共享目录到本地</span></span><br><span class=\"line\">mount -t cifs -o username=$username,password=$password $remotepath $localpath</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">3. 定义本地备份路径和文件名</span></span><br><span class=\"line\">localBackupPath=&quot;/usr/localbackup&quot;</span><br><span class=\"line\">backupToFile=$localBackupPath/$HOSTNAME&quot;_backup`date +%y%m%d`.tgz&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">4. 定义要删除的3天前的备份文件路径</span></span><br><span class=\"line\">beforeThreeDayFile=&quot;/backup22/oradb_backup`date -d -8day +%y%m%d`.tgz&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">5. 检查并创建本地备份目录</span></span><br><span class=\"line\">if [ ! -d &quot;$localBackupPath&quot; ]; then</span><br><span class=\"line\">    mkdir $localBackupPath</span><br><span class=\"line\">fi</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">6. 备份系统到本地备份文件</span></span><br><span class=\"line\">tar -cvpzf $backupToFile --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/media --exclude=$localBackupPath --exclude=$localpath /</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">7. 定义远程目录下的日志文件，用于判断路径是否成功挂载</span></span><br><span class=\"line\">logFile=&quot;/backup22/backup_log_in22.txt&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">8. 检查挂载是否成功</span></span><br><span class=\"line\">if [ ! -f &quot;$logFile&quot; ]; then  </span><br><span class=\"line\">    echo -e &quot;`date +%y%m%d_%T`挂载失败\\n&quot; &gt;&gt; &quot;/backup22/backup_log_local.txt&quot;</span><br><span class=\"line\">    echo -e &quot;`date +%y%m%d_%T`挂载失败\\n&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">    echo -e &quot;`date +%y%m%d_%T`已挂载备份服务器到本地\\n&quot; &gt;&gt; &quot;$logFile&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 9. 复制备份文件到远程共享目录</span><br><span class=\"line\">    cp $backupToFile $localpath</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 10. 删除本地备份文件</span><br><span class=\"line\">    rm -f $backupToFile</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 11. 删除远程3天前的备份文件</span><br><span class=\"line\">    rm -f $beforeThreeDayFile</span><br><span class=\"line\">    echo -e &quot;\\n三天前的文件已删除&quot;$beforeThreeDayFile &gt;&gt; &quot;$logFile&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 12. 记录备份成功日志</span><br><span class=\"line\">    echo -e &quot;\\n`date +%y%m%d_%T`备份成功_&quot;$backupToFile &gt;&gt; &quot;$logFile&quot;</span><br><span class=\"line\">    echo -e &quot;\\n`date +%y%m%d_%T`备份成功_&quot;$backupToFile</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h2 id=\"一、流程步骤解释\">一、流程步骤解释</h2>\n<h3 id=\"1-定义变量：\">1. 定义变量：</h3>\n<p>设置用于访问远程共享目录的用户名和密码。<br>\n定义远程共享目录路径。<br>\n定义本地挂载点。</p>\n<h3 id=\"2-挂载远程共享目录：\">2. 挂载远程共享目录：</h3>\n<p>先卸载本地挂载点，避免异常。<br>\n使用 mount 命令将远程共享目录挂载到本地路径。</p>\n<h3 id=\"3-本地备份：\">3. 本地备份：</h3>\n<p>定义本地备份路径和备份文件名。<br>\n检查并创建本地备份目录。<br>\n使用 tar 命令将系统备份到本地备份文件，排除不需要备份的目录。</p>\n<h3 id=\"4-检查挂载：\">4. 检查挂载：</h3>\n<ul>\n<li>\n<p>定义远程目录下的日志文件，用于判断路径是否成功挂载。</p>\n</li>\n<li>\n<p>检查日志文件是否存在以判断挂载是否成功。<br>\n如果挂载失败，记录失败日志。<br>\n如果挂载成功，执行以下操作：</p>\n<p>记录挂载成功日志。<br>\n复制本地备份文件到远程共享目录。<br>\n删除本地备份文件。<br>\n删除远程3天前的备份文件，并记录日志。<br>\n记录备份成功日志。</p>\n</li>\n</ul>\n<h2 id=\"二、详细脚本\">二、详细脚本</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">此脚本用于将linux系统备份到windows共享文件夹或NAS服务器，</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">原理是1.备份系统到本地2.挂载远程路径到linux3.将备份文件复制到该路径下4.删除过期的备份文件、断开连接</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1. 定义变量</span></span><br><span class=\"line\">username=&#x27;backup&#x27;              # 访问远程共享目录的用户名</span><br><span class=\"line\">password=&#x27;backup&#x27;              # 访问远程共享目录的密码</span><br><span class=\"line\">remotepath=&quot;//172.29.60.22/backup/linux/oracle&quot;  # 远程共享目录路径</span><br><span class=\"line\"></span><br><span class=\"line\">localpath=&quot;/backup22&quot;          # 本地挂载点</span><br><span class=\"line\">umount $localpath              # 先卸载本地挂载点，避免异常</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2. 挂载远程共享目录到本地</span></span><br><span class=\"line\">mount -t cifs -o username=$username,password=$password $remotepath $localpath</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">3. 定义本地备份路径和文件名</span></span><br><span class=\"line\">localBackupPath=&quot;/usr/localbackup&quot;</span><br><span class=\"line\">backupToFile=$localBackupPath/$HOSTNAME&quot;_backup`date +%y%m%d`.tgz&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">4. 定义要删除的3天前的备份文件路径</span></span><br><span class=\"line\">beforeThreeDayFile=&quot;/backup22/oradb_backup`date -d -8day +%y%m%d`.tgz&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">5. 检查并创建本地备份目录</span></span><br><span class=\"line\">if [ ! -d &quot;$localBackupPath&quot; ]; then</span><br><span class=\"line\">    mkdir $localBackupPath</span><br><span class=\"line\">fi</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">6. 备份系统到本地备份文件</span></span><br><span class=\"line\">tar -cvpzf $backupToFile --exclude=/proc --exclude=/lost+found --exclude=/mnt --exclude=/sys --exclude=/media --exclude=$localBackupPath --exclude=$localpath /</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">7. 定义远程目录下的日志文件，用于判断路径是否成功挂载</span></span><br><span class=\"line\">logFile=&quot;/backup22/backup_log_in22.txt&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">8. 检查挂载是否成功</span></span><br><span class=\"line\">if [ ! -f &quot;$logFile&quot; ]; then  </span><br><span class=\"line\">    echo -e &quot;`date +%y%m%d_%T`挂载失败\\n&quot; &gt;&gt; &quot;/backup22/backup_log_local.txt&quot;</span><br><span class=\"line\">    echo -e &quot;`date +%y%m%d_%T`挂载失败\\n&quot;</span><br><span class=\"line\">else</span><br><span class=\"line\">    echo -e &quot;`date +%y%m%d_%T`已挂载备份服务器到本地\\n&quot; &gt;&gt; &quot;$logFile&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 9. 复制备份文件到远程共享目录</span><br><span class=\"line\">    cp $backupToFile $localpath</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 10. 删除本地备份文件</span><br><span class=\"line\">    rm -f $backupToFile</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 11. 删除远程3天前的备份文件</span><br><span class=\"line\">    rm -f $beforeThreeDayFile</span><br><span class=\"line\">    echo -e &quot;\\n三天前的文件已删除&quot;$beforeThreeDayFile &gt;&gt; &quot;$logFile&quot;</span><br><span class=\"line\">    </span><br><span class=\"line\">    # 12. 记录备份成功日志</span><br><span class=\"line\">    echo -e &quot;\\n`date +%y%m%d_%T`备份成功_&quot;$backupToFile &gt;&gt; &quot;$logFile&quot;</span><br><span class=\"line\">    echo -e &quot;\\n`date +%y%m%d_%T`备份成功_&quot;$backupToFile</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>"},{"title":"数字取证","_content":"## 1. Final Exam\n`考加粗部分`\n\n- **了解数字取证和调查的原理和先进技术。**\n\n- 组织计算机取证、移动取证、网络取证和大数据取证方面的数字调查。\n\n- **评估符合专业标准和调查流程的数字调查：识别、保存、检查和分析。**\n\n- 报告违反法律、伦理、道德、政策和/或社会标准的计算机数据潜在安全漏洞。\n\n\n## 2. 题目类型\n- EXPLAIN FIVE (5) design goals of Advance Forensics Format (AFF). (10 marks)\n`回答：一个点+一个解释`\n    - 1 design goal = 1 mark\n    - Good explanation of design goal = 1 mark\n    - 5 design goals with explanation = 10 marks\n\n\n\n","source":"_posts/数字取证/考试内容.md","raw":"\n---\ntitle: 数字取证\n---\n## 1. Final Exam\n`考加粗部分`\n\n- **了解数字取证和调查的原理和先进技术。**\n\n- 组织计算机取证、移动取证、网络取证和大数据取证方面的数字调查。\n\n- **评估符合专业标准和调查流程的数字调查：识别、保存、检查和分析。**\n\n- 报告违反法律、伦理、道德、政策和/或社会标准的计算机数据潜在安全漏洞。\n\n\n## 2. 题目类型\n- EXPLAIN FIVE (5) design goals of Advance Forensics Format (AFF). (10 marks)\n`回答：一个点+一个解释`\n    - 1 design goal = 1 mark\n    - Good explanation of design goal = 1 mark\n    - 5 design goals with explanation = 10 marks\n\n\n\n","slug":"数字取证/考试内容","published":1,"date":"2024-07-13T06:36:50.749Z","updated":"2024-07-13T06:49:25.923Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o1a0017zb8ag2zq7kvf","content":"<h2 id=\"1-Final-Exam\">1. Final Exam</h2>\n<p><code>考加粗部分</code></p>\n<ul>\n<li>\n<p><strong>了解数字取证和调查的原理和先进技术。</strong></p>\n</li>\n<li>\n<p>组织计算机取证、移动取证、网络取证和大数据取证方面的数字调查。</p>\n</li>\n<li>\n<p><strong>评估符合专业标准和调查流程的数字调查：识别、保存、检查和分析。</strong></p>\n</li>\n<li>\n<p>报告违反法律、伦理、道德、政策和/或社会标准的计算机数据潜在安全漏洞。</p>\n</li>\n</ul>\n<h2 id=\"2-题目类型\">2. 题目类型</h2>\n<ul>\n<li>EXPLAIN FIVE (5) design goals of Advance Forensics Format (AFF). (10 marks)<br>\n<code>回答：一个点+一个解释</code>\n<ul>\n<li>1 design goal = 1 mark</li>\n<li>Good explanation of design goal = 1 mark</li>\n<li>5 design goals with explanation = 10 marks</li>\n</ul>\n</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"1-Final-Exam\">1. Final Exam</h2>\n<p><code>考加粗部分</code></p>\n<ul>\n<li>\n<p><strong>了解数字取证和调查的原理和先进技术。</strong></p>\n</li>\n<li>\n<p>组织计算机取证、移动取证、网络取证和大数据取证方面的数字调查。</p>\n</li>\n<li>\n<p><strong>评估符合专业标准和调查流程的数字调查：识别、保存、检查和分析。</strong></p>\n</li>\n<li>\n<p>报告违反法律、伦理、道德、政策和/或社会标准的计算机数据潜在安全漏洞。</p>\n</li>\n</ul>\n<h2 id=\"2-题目类型\">2. 题目类型</h2>\n<ul>\n<li>EXPLAIN FIVE (5) design goals of Advance Forensics Format (AFF). (10 marks)<br>\n<code>回答：一个点+一个解释</code>\n<ul>\n<li>1 design goal = 1 mark</li>\n<li>Good explanation of design goal = 1 mark</li>\n<li>5 design goals with explanation = 10 marks</li>\n</ul>\n</li>\n</ul>\n"},{"_content":"## 阐述Linux权限\n\n## 熟悉linux操作系统安装、配置\ncentos7\n\n\n\n\n\n## 各种操作命令，如编写各种脚本用于监控，备份，部署，\n监控的重点是监控指标，不在脚本，因为监控脚本会根根监控平台的变化而改变。\n\n之前的zabbix、nagios到现在的prometheus，2017年以前是zabbix使用最普遍，因为界面好看，社区活跃。\nnagios免费版没有图形化界面。prometheus随着云原生而兴起。\n\n这些监控平台我都搭建过\n\n\n备份\n1、确认网络传输协议SMB，NAS的用户名密码\n2、\n\n\n\n## 空间缩扩容\n最近一次是安装系统是给根分区划小了，只有200G，因为docker的一些数据默认留在根分区没挂到其他分区。\n\n后面需要从home划过来1300G。\n流程是：\n1、测试环境先模拟，写出处理流程在文档\n2、df -h 查看分区情况，确认可转移的空间\n3、确定从/home分区划走1300G给根分区\n4、确认home分区没有业务数据写入，复制一份数据到其他分区，umount\n5、lvreduce -L划出空间，重新格式化，数据迁移回来\n6、lvextend 1300G到centos-root,然后xfs_growfs拓展空间\n7、最后df -hT确认\n\n如果是云服务器，那买一块空白盘添加或者停机扩容，不用自己操作。\n\n\n## 系统跟踪管理","source":"_posts/面试经验/linux.md","raw":"## 阐述Linux权限\n\n## 熟悉linux操作系统安装、配置\ncentos7\n\n\n\n\n\n## 各种操作命令，如编写各种脚本用于监控，备份，部署，\n监控的重点是监控指标，不在脚本，因为监控脚本会根根监控平台的变化而改变。\n\n之前的zabbix、nagios到现在的prometheus，2017年以前是zabbix使用最普遍，因为界面好看，社区活跃。\nnagios免费版没有图形化界面。prometheus随着云原生而兴起。\n\n这些监控平台我都搭建过\n\n\n备份\n1、确认网络传输协议SMB，NAS的用户名密码\n2、\n\n\n\n## 空间缩扩容\n最近一次是安装系统是给根分区划小了，只有200G，因为docker的一些数据默认留在根分区没挂到其他分区。\n\n后面需要从home划过来1300G。\n流程是：\n1、测试环境先模拟，写出处理流程在文档\n2、df -h 查看分区情况，确认可转移的空间\n3、确定从/home分区划走1300G给根分区\n4、确认home分区没有业务数据写入，复制一份数据到其他分区，umount\n5、lvreduce -L划出空间，重新格式化，数据迁移回来\n6、lvextend 1300G到centos-root,然后xfs_growfs拓展空间\n7、最后df -hT确认\n\n如果是云服务器，那买一块空白盘添加或者停机扩容，不用自己操作。\n\n\n## 系统跟踪管理","slug":"面试经验/linux","published":1,"date":"2024-07-19T09:33:22.954Z","updated":"2024-07-19T10:09:58.620Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o1h0018zb8aewpad0wb","content":"<h2 id=\"阐述Linux权限\">阐述Linux权限</h2>\n<h2 id=\"熟悉linux操作系统安装、配置\">熟悉linux操作系统安装、配置</h2>\n<p>centos7</p>\n<h2 id=\"各种操作命令，如编写各种脚本用于监控，备份，部署，\">各种操作命令，如编写各种脚本用于监控，备份，部署，</h2>\n<p>监控的重点是监控指标，不在脚本，因为监控脚本会根根监控平台的变化而改变。</p>\n<p>之前的zabbix、nagios到现在的prometheus，2017年以前是zabbix使用最普遍，因为界面好看，社区活跃。<br>\nnagios免费版没有图形化界面。prometheus随着云原生而兴起。</p>\n<p>这些监控平台我都搭建过</p>\n<p>备份<br>\n1、确认网络传输协议SMB，NAS的用户名密码<br>\n2、</p>\n<h2 id=\"空间缩扩容\">空间缩扩容</h2>\n<p>最近一次是安装系统是给根分区划小了，只有200G，因为docker的一些数据默认留在根分区没挂到其他分区。</p>\n<p>后面需要从home划过来1300G。<br>\n流程是：<br>\n1、测试环境先模拟，写出处理流程在文档<br>\n2、df -h 查看分区情况，确认可转移的空间<br>\n3、确定从/home分区划走1300G给根分区<br>\n4、确认home分区没有业务数据写入，复制一份数据到其他分区，umount<br>\n5、lvreduce -L划出空间，重新格式化，数据迁移回来<br>\n6、lvextend 1300G到centos-root,然后xfs_growfs拓展空间<br>\n7、最后df -hT确认</p>\n<p>如果是云服务器，那买一块空白盘添加或者停机扩容，不用自己操作。</p>\n<h2 id=\"系统跟踪管理\">系统跟踪管理</h2>\n","excerpt":"","more":"<h2 id=\"阐述Linux权限\">阐述Linux权限</h2>\n<h2 id=\"熟悉linux操作系统安装、配置\">熟悉linux操作系统安装、配置</h2>\n<p>centos7</p>\n<h2 id=\"各种操作命令，如编写各种脚本用于监控，备份，部署，\">各种操作命令，如编写各种脚本用于监控，备份，部署，</h2>\n<p>监控的重点是监控指标，不在脚本，因为监控脚本会根根监控平台的变化而改变。</p>\n<p>之前的zabbix、nagios到现在的prometheus，2017年以前是zabbix使用最普遍，因为界面好看，社区活跃。<br>\nnagios免费版没有图形化界面。prometheus随着云原生而兴起。</p>\n<p>这些监控平台我都搭建过</p>\n<p>备份<br>\n1、确认网络传输协议SMB，NAS的用户名密码<br>\n2、</p>\n<h2 id=\"空间缩扩容\">空间缩扩容</h2>\n<p>最近一次是安装系统是给根分区划小了，只有200G，因为docker的一些数据默认留在根分区没挂到其他分区。</p>\n<p>后面需要从home划过来1300G。<br>\n流程是：<br>\n1、测试环境先模拟，写出处理流程在文档<br>\n2、df -h 查看分区情况，确认可转移的空间<br>\n3、确定从/home分区划走1300G给根分区<br>\n4、确认home分区没有业务数据写入，复制一份数据到其他分区，umount<br>\n5、lvreduce -L划出空间，重新格式化，数据迁移回来<br>\n6、lvextend 1300G到centos-root,然后xfs_growfs拓展空间<br>\n7、最后df -hT确认</p>\n<p>如果是云服务器，那买一块空白盘添加或者停机扩容，不用自己操作。</p>\n<h2 id=\"系统跟踪管理\">系统跟踪管理</h2>\n"},{"_content":"## 阐述Linux权限\n\n## 熟悉linux操作系统安装、配置\ncentos7\n\n\n\n\n\n## 各种操作命令，如编写各种脚本用于监控，备份，部署，\n\n## 系统跟踪管理，空间缩扩容","source":"_posts/面试经验/nginx.md","raw":"## 阐述Linux权限\n\n## 熟悉linux操作系统安装、配置\ncentos7\n\n\n\n\n\n## 各种操作命令，如编写各种脚本用于监控，备份，部署，\n\n## 系统跟踪管理，空间缩扩容","slug":"面试经验/nginx","published":1,"date":"2024-07-19T09:36:15.767Z","updated":"2024-07-19T09:49:58.802Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o1k0019zb8a7f3bfpu1","content":"<h2 id=\"阐述Linux权限\">阐述Linux权限</h2>\n<h2 id=\"熟悉linux操作系统安装、配置\">熟悉linux操作系统安装、配置</h2>\n<p>centos7</p>\n<h2 id=\"各种操作命令，如编写各种脚本用于监控，备份，部署，\">各种操作命令，如编写各种脚本用于监控，备份，部署，</h2>\n<h2 id=\"系统跟踪管理，空间缩扩容\">系统跟踪管理，空间缩扩容</h2>\n","excerpt":"","more":"<h2 id=\"阐述Linux权限\">阐述Linux权限</h2>\n<h2 id=\"熟悉linux操作系统安装、配置\">熟悉linux操作系统安装、配置</h2>\n<p>centos7</p>\n<h2 id=\"各种操作命令，如编写各种脚本用于监控，备份，部署，\">各种操作命令，如编写各种脚本用于监控，备份，部署，</h2>\n<h2 id=\"系统跟踪管理，空间缩扩容\">系统跟踪管理，空间缩扩容</h2>\n"},{"_content":"## 面试准备\n\n职责描述：\n1、负责vmware虚拟化、阿里云及其他公有云系统的日常管理及运维\n2、负责服务器、存储等系统服务类设备的日常管理和运维\n3、了解docker容器及k8s架构，负责容器系统管理和运维\n4、负责搭建并维护混合云自动化管理平台\n任职要求：\n1、统招本科及以上学历，计算机相关专业，5年以上计算机相关工作经验\n2、具备维护和管理vmware集群架构的实战经验和能力\n3、具备容器系统及容器管理架构的维护能力\n4、具备5年以上linux系统管理经验\n5、具备系统服务类设备维护及维保的经验能力\n6、了解TCP/IP、网络架构及原理、MySQL数据库、中间件等\n7、有计划性，执行力强，对技术有热情，具备较强的工作责任感和团队意识\n\n\n## 网络七层模型\n\n\n## 三剑客","source":"_posts/面试经验/传音控股.md","raw":"## 面试准备\n\n职责描述：\n1、负责vmware虚拟化、阿里云及其他公有云系统的日常管理及运维\n2、负责服务器、存储等系统服务类设备的日常管理和运维\n3、了解docker容器及k8s架构，负责容器系统管理和运维\n4、负责搭建并维护混合云自动化管理平台\n任职要求：\n1、统招本科及以上学历，计算机相关专业，5年以上计算机相关工作经验\n2、具备维护和管理vmware集群架构的实战经验和能力\n3、具备容器系统及容器管理架构的维护能力\n4、具备5年以上linux系统管理经验\n5、具备系统服务类设备维护及维保的经验能力\n6、了解TCP/IP、网络架构及原理、MySQL数据库、中间件等\n7、有计划性，执行力强，对技术有热情，具备较强的工作责任感和团队意识\n\n\n## 网络七层模型\n\n\n## 三剑客","slug":"面试经验/传音控股","published":1,"date":"2024-07-15T08:55:52.067Z","updated":"2024-07-18T03:22:27.213Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o1m001azb8af6j499zy","content":"<h2 id=\"面试准备\">面试准备</h2>\n<p>职责描述：<br>\n1、负责vmware虚拟化、阿里云及其他公有云系统的日常管理及运维<br>\n2、负责服务器、存储等系统服务类设备的日常管理和运维<br>\n3、了解docker容器及k8s架构，负责容器系统管理和运维<br>\n4、负责搭建并维护混合云自动化管理平台<br>\n任职要求：<br>\n1、统招本科及以上学历，计算机相关专业，5年以上计算机相关工作经验<br>\n2、具备维护和管理vmware集群架构的实战经验和能力<br>\n3、具备容器系统及容器管理架构的维护能力<br>\n4、具备5年以上linux系统管理经验<br>\n5、具备系统服务类设备维护及维保的经验能力<br>\n6、了解TCP/IP、网络架构及原理、MySQL数据库、中间件等<br>\n7、有计划性，执行力强，对技术有热情，具备较强的工作责任感和团队意识</p>\n<h2 id=\"网络七层模型\">网络七层模型</h2>\n<h2 id=\"三剑客\">三剑客</h2>\n","excerpt":"","more":"<h2 id=\"面试准备\">面试准备</h2>\n<p>职责描述：<br>\n1、负责vmware虚拟化、阿里云及其他公有云系统的日常管理及运维<br>\n2、负责服务器、存储等系统服务类设备的日常管理和运维<br>\n3、了解docker容器及k8s架构，负责容器系统管理和运维<br>\n4、负责搭建并维护混合云自动化管理平台<br>\n任职要求：<br>\n1、统招本科及以上学历，计算机相关专业，5年以上计算机相关工作经验<br>\n2、具备维护和管理vmware集群架构的实战经验和能力<br>\n3、具备容器系统及容器管理架构的维护能力<br>\n4、具备5年以上linux系统管理经验<br>\n5、具备系统服务类设备维护及维保的经验能力<br>\n6、了解TCP/IP、网络架构及原理、MySQL数据库、中间件等<br>\n7、有计划性，执行力强，对技术有热情，具备较强的工作责任感和团队意识</p>\n<h2 id=\"网络七层模型\">网络七层模型</h2>\n<h2 id=\"三剑客\">三剑客</h2>\n"},{"title":"2019年题目","_content":"**EN:**\n\n(a) Write a straightforward recursive function to calculate Fibonacci number.\n\n(b) What is the time complexity of the function in (1)(a) above, in big O? Explain your answer.\n\n(c) What is dynamic programming? Apply dynamic programming approach to calculate a Fibonacci number, and describe the way dynamic programming calculates the Fibonacci number using an appropriate example.\n\n**ZH:**\n\n（a）写一个直接的递归函数来计算斐波那契数。\n\n（b）上面（1）（a）中的函数的时间复杂度是什么，大 O 是多少？解释你的答案。\n\n（c）什么是动态规划？应用动态规划方法来计算斐波那契数，并描述动态规划使用适当的示例计算斐波那契数的方法。\n\n**中文解释：**\n\n**（a）斐波那契数的递归函数**\n\n斐波那契数列是一个数列，其中前两个数为 0 和 1，而从第三个数开始，每个数都是前两个数的和。一个简单的递归函数可以用于计算斐波那契数：\n\n```python\n\ndef fibonacci(n):\n\nif n < 2:\n\nreturn n\n\nelse:\n\nreturn fibonacci(n-1) + fibonacci(n-2)\n\n```\n\n**（b）时间复杂度**\n\n给定自然数 n，递归函数 fibonacci(n) 的时间复杂度为 O(2^n)。这是因为对于每个输入 n，该函数都会递归地调用自身两次，并且这种模式会一直重复到 n 达到 0 或 1。\n\n**（c）动态规划**\n\n动态规划是一种解决优化问题的技术，它将问题分解成子问题，然后通过存储子问题的解决方案来避免重复计算。对于斐波那契数，我们可以使用动态规划来计算斐波那契数，方法是存储已计算出的斐波那契数。\n\n以下是动态规划方法计算斐波那契数的一个示例：\n\n```python\n\ndef fibonacci_dp(n):\n\nfib_cache = [0, 1]  # 存储已计算出的斐波那契数\n\nwhile n >= len(fib_cache):\n\nnext_fib = fib_cache[-1] + fib_cache[-2]\n\nfib_cache.append(next_fib)\n\nreturn fib_cache[n]\n\n```\n\n在该实现中，fib_cache 列表存储已计算出的斐波那契数。当 n 大于 fib_cache 的长度时，它将计算并存储下一个斐波那契数。通过使用 fib_cache，动态规划方法避免了重复计算，从而将时间复杂度从 O(2^n) 降低到 O(n)。","source":"_posts/高级算法/2019年题目.md","raw":"---\ntitle: 2019年题目\n---\n**EN:**\n\n(a) Write a straightforward recursive function to calculate Fibonacci number.\n\n(b) What is the time complexity of the function in (1)(a) above, in big O? Explain your answer.\n\n(c) What is dynamic programming? Apply dynamic programming approach to calculate a Fibonacci number, and describe the way dynamic programming calculates the Fibonacci number using an appropriate example.\n\n**ZH:**\n\n（a）写一个直接的递归函数来计算斐波那契数。\n\n（b）上面（1）（a）中的函数的时间复杂度是什么，大 O 是多少？解释你的答案。\n\n（c）什么是动态规划？应用动态规划方法来计算斐波那契数，并描述动态规划使用适当的示例计算斐波那契数的方法。\n\n**中文解释：**\n\n**（a）斐波那契数的递归函数**\n\n斐波那契数列是一个数列，其中前两个数为 0 和 1，而从第三个数开始，每个数都是前两个数的和。一个简单的递归函数可以用于计算斐波那契数：\n\n```python\n\ndef fibonacci(n):\n\nif n < 2:\n\nreturn n\n\nelse:\n\nreturn fibonacci(n-1) + fibonacci(n-2)\n\n```\n\n**（b）时间复杂度**\n\n给定自然数 n，递归函数 fibonacci(n) 的时间复杂度为 O(2^n)。这是因为对于每个输入 n，该函数都会递归地调用自身两次，并且这种模式会一直重复到 n 达到 0 或 1。\n\n**（c）动态规划**\n\n动态规划是一种解决优化问题的技术，它将问题分解成子问题，然后通过存储子问题的解决方案来避免重复计算。对于斐波那契数，我们可以使用动态规划来计算斐波那契数，方法是存储已计算出的斐波那契数。\n\n以下是动态规划方法计算斐波那契数的一个示例：\n\n```python\n\ndef fibonacci_dp(n):\n\nfib_cache = [0, 1]  # 存储已计算出的斐波那契数\n\nwhile n >= len(fib_cache):\n\nnext_fib = fib_cache[-1] + fib_cache[-2]\n\nfib_cache.append(next_fib)\n\nreturn fib_cache[n]\n\n```\n\n在该实现中，fib_cache 列表存储已计算出的斐波那契数。当 n 大于 fib_cache 的长度时，它将计算并存储下一个斐波那契数。通过使用 fib_cache，动态规划方法避免了重复计算，从而将时间复杂度从 O(2^n) 降低到 O(n)。","slug":"高级算法/2019年题目","published":1,"date":"2024-07-10T08:14:31.325Z","updated":"2024-07-10T10:15:35.708Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o1s001bzb8ad7em0rci","content":"<p><strong>EN:</strong></p>\n<p>(a) Write a straightforward recursive function to calculate Fibonacci number.</p>\n<p>(b) What is the time complexity of the function in (1)(a) above, in big O? Explain your answer.</p>\n<p>© What is dynamic programming? Apply dynamic programming approach to calculate a Fibonacci number, and describe the way dynamic programming calculates the Fibonacci number using an appropriate example.</p>\n<p><strong>ZH:</strong></p>\n<p>（a）写一个直接的递归函数来计算斐波那契数。</p>\n<p>（b）上面（1）（a）中的函数的时间复杂度是什么，大 O 是多少？解释你的答案。</p>\n<p>（c）什么是动态规划？应用动态规划方法来计算斐波那契数，并描述动态规划使用适当的示例计算斐波那契数的方法。</p>\n<p><strong>中文解释：</strong></p>\n<p><strong>（a）斐波那契数的递归函数</strong></p>\n<p>斐波那契数列是一个数列，其中前两个数为 0 和 1，而从第三个数开始，每个数都是前两个数的和。一个简单的递归函数可以用于计算斐波那契数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fibonacci</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> n &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> fibonacci(n-<span class=\"number\">1</span>) + fibonacci(n-<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>（b）时间复杂度</strong></p>\n<p>给定自然数 n，递归函数 fibonacci(n) 的时间复杂度为 O(2^n)。这是因为对于每个输入 n，该函数都会递归地调用自身两次，并且这种模式会一直重复到 n 达到 0 或 1。</p>\n<p><strong>（c）动态规划</strong></p>\n<p>动态规划是一种解决优化问题的技术，它将问题分解成子问题，然后通过存储子问题的解决方案来避免重复计算。对于斐波那契数，我们可以使用动态规划来计算斐波那契数，方法是存储已计算出的斐波那契数。</p>\n<p>以下是动态规划方法计算斐波那契数的一个示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fibonacci_dp</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">fib_cache = [<span class=\"number\">0</span>, <span class=\"number\">1</span>]  <span class=\"comment\"># 存储已计算出的斐波那契数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &gt;= <span class=\"built_in\">len</span>(fib_cache):</span><br><span class=\"line\"></span><br><span class=\"line\">next_fib = fib_cache[-<span class=\"number\">1</span>] + fib_cache[-<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">fib_cache.append(next_fib)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> fib_cache[n]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在该实现中，fib_cache 列表存储已计算出的斐波那契数。当 n 大于 fib_cache 的长度时，它将计算并存储下一个斐波那契数。通过使用 fib_cache，动态规划方法避免了重复计算，从而将时间复杂度从 O(2^n) 降低到 O(n)。</p>\n","excerpt":"","more":"<p><strong>EN:</strong></p>\n<p>(a) Write a straightforward recursive function to calculate Fibonacci number.</p>\n<p>(b) What is the time complexity of the function in (1)(a) above, in big O? Explain your answer.</p>\n<p>© What is dynamic programming? Apply dynamic programming approach to calculate a Fibonacci number, and describe the way dynamic programming calculates the Fibonacci number using an appropriate example.</p>\n<p><strong>ZH:</strong></p>\n<p>（a）写一个直接的递归函数来计算斐波那契数。</p>\n<p>（b）上面（1）（a）中的函数的时间复杂度是什么，大 O 是多少？解释你的答案。</p>\n<p>（c）什么是动态规划？应用动态规划方法来计算斐波那契数，并描述动态规划使用适当的示例计算斐波那契数的方法。</p>\n<p><strong>中文解释：</strong></p>\n<p><strong>（a）斐波那契数的递归函数</strong></p>\n<p>斐波那契数列是一个数列，其中前两个数为 0 和 1，而从第三个数开始，每个数都是前两个数的和。一个简单的递归函数可以用于计算斐波那契数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fibonacci</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> n &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> fibonacci(n-<span class=\"number\">1</span>) + fibonacci(n-<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><strong>（b）时间复杂度</strong></p>\n<p>给定自然数 n，递归函数 fibonacci(n) 的时间复杂度为 O(2^n)。这是因为对于每个输入 n，该函数都会递归地调用自身两次，并且这种模式会一直重复到 n 达到 0 或 1。</p>\n<p><strong>（c）动态规划</strong></p>\n<p>动态规划是一种解决优化问题的技术，它将问题分解成子问题，然后通过存储子问题的解决方案来避免重复计算。对于斐波那契数，我们可以使用动态规划来计算斐波那契数，方法是存储已计算出的斐波那契数。</p>\n<p>以下是动态规划方法计算斐波那契数的一个示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">fibonacci_dp</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">fib_cache = [<span class=\"number\">0</span>, <span class=\"number\">1</span>]  <span class=\"comment\"># 存储已计算出的斐波那契数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> n &gt;= <span class=\"built_in\">len</span>(fib_cache):</span><br><span class=\"line\"></span><br><span class=\"line\">next_fib = fib_cache[-<span class=\"number\">1</span>] + fib_cache[-<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">fib_cache.append(next_fib)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> fib_cache[n]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>在该实现中，fib_cache 列表存储已计算出的斐波那契数。当 n 大于 fib_cache 的长度时，它将计算并存储下一个斐波那契数。通过使用 fib_cache，动态规划方法避免了重复计算，从而将时间复杂度从 O(2^n) 降低到 O(n)。</p>\n"},{"title":"BFS (Breadth-First Search)","weight":20,"_content":"# BFS (Breadth-First Search)\n\n\n## 1. 用途\n\n广度优先搜索（BFS）在现实中有许多实际用途，主要用于解决以下问题：\n1. 最短路径搜索：BFS 可以用于无权图或者所有边权重相同的图中寻找最短路径。这在网络路由、社交网络中的最短友谊链、广告投放中的最短路径传播等方面有广泛应用。\n1. 图的连通性检测：BFS 可以用来检测图是否是连通的，即从一个节点能否到达图中的所有其他节点。这在计算机网络中的连通性检测、社交网络中的社群发现等方面很有用。\n1. 状态空间搜索：BFS 可以应用于状态空间搜索问题，如在迷宫游戏中找到从起点到终点的最短路径，或者在解决八皇后问题等排列组合问题时寻找最优解。\n1. Web爬虫：在网络爬虫中，BFS 用来抓取网页，并且可以限制爬取深度，确保优先爬取距离种子页面更近的链接。\n1. 层次遍历：BFS 的特性使其适合进行层次遍历，例如`树的层次遍历`、多级菜单的展开等。\n1. 游戏开发：在游戏开发中，BFS 可以用于寻找玩家或NPC的移动路径，或者在地图中寻找最近的敌人或资源。\n\n\n\n## 2. 代码\n\n```java\nimport java.util.*;\n\npublic class BFSGraphTraversal {\n    // 使用邻接列表表示图\n    private Map<Character, List<Character>> graph;\n\n    public BFSGraphTraversal() {\n        graph = new HashMap<>();\n    }\n\n    // 添加边的方法\n    public void addEdge(char from, char to) {\n        graph.computeIfAbsent(from, k -> new ArrayList<>()).add(to);\n        graph.computeIfAbsent(to, k -> new ArrayList<>()).add(from); // 如果是有向图，删除此行\n    }\n\n    // BFS 遍历方法\n    public List<Character> bfs(char start) {\n        List<Character> traversalOrder = new ArrayList<>();\n        if (!graph.containsKey(start)) {\n            return traversalOrder;\n        }\n\n        Queue<Character> queue = new LinkedList<>();\n        Set<Character> visited = new HashSet<>();\n\n        queue.offer(start);\n        visited.add(start);\n\n        while (!queue.isEmpty()) {\n            char current = queue.poll();\n            traversalOrder.add(current);\n\n            for (char neighbor : graph.getOrDefault(current, new ArrayList<>())) {\n                if (!visited.contains(neighbor)) {\n                    queue.offer(neighbor);\n                    visited.add(neighbor);\n                }\n            }\n        }\n\n        return traversalOrder;\n    }\n\n    public static void main(String[] args) {\n        BFSGraphTraversal graph = new BFSGraphTraversal();\n\n        // 添加图的边\n        graph.addEdge('A', 'B');\n        graph.addEdge('A', 'C');\n        graph.addEdge('B', 'D');\n        graph.addEdge('B', 'E');\n        graph.addEdge('C', 'F');\n        graph.addEdge('E', 'F');\n\n        // 从节点 'A' 开始进行 BFS 遍历\n        List<Character> traversalOrder = graph.bfs('A');\n        System.out.println(\"BFS traversal order starting from node A: \" + traversalOrder);\n    }\n}\n\n\n```","source":"_posts/高级算法/BFS.md","raw":"---\ntitle: BFS (Breadth-First Search)\nweight: 20\n---\n# BFS (Breadth-First Search)\n\n\n## 1. 用途\n\n广度优先搜索（BFS）在现实中有许多实际用途，主要用于解决以下问题：\n1. 最短路径搜索：BFS 可以用于无权图或者所有边权重相同的图中寻找最短路径。这在网络路由、社交网络中的最短友谊链、广告投放中的最短路径传播等方面有广泛应用。\n1. 图的连通性检测：BFS 可以用来检测图是否是连通的，即从一个节点能否到达图中的所有其他节点。这在计算机网络中的连通性检测、社交网络中的社群发现等方面很有用。\n1. 状态空间搜索：BFS 可以应用于状态空间搜索问题，如在迷宫游戏中找到从起点到终点的最短路径，或者在解决八皇后问题等排列组合问题时寻找最优解。\n1. Web爬虫：在网络爬虫中，BFS 用来抓取网页，并且可以限制爬取深度，确保优先爬取距离种子页面更近的链接。\n1. 层次遍历：BFS 的特性使其适合进行层次遍历，例如`树的层次遍历`、多级菜单的展开等。\n1. 游戏开发：在游戏开发中，BFS 可以用于寻找玩家或NPC的移动路径，或者在地图中寻找最近的敌人或资源。\n\n\n\n## 2. 代码\n\n```java\nimport java.util.*;\n\npublic class BFSGraphTraversal {\n    // 使用邻接列表表示图\n    private Map<Character, List<Character>> graph;\n\n    public BFSGraphTraversal() {\n        graph = new HashMap<>();\n    }\n\n    // 添加边的方法\n    public void addEdge(char from, char to) {\n        graph.computeIfAbsent(from, k -> new ArrayList<>()).add(to);\n        graph.computeIfAbsent(to, k -> new ArrayList<>()).add(from); // 如果是有向图，删除此行\n    }\n\n    // BFS 遍历方法\n    public List<Character> bfs(char start) {\n        List<Character> traversalOrder = new ArrayList<>();\n        if (!graph.containsKey(start)) {\n            return traversalOrder;\n        }\n\n        Queue<Character> queue = new LinkedList<>();\n        Set<Character> visited = new HashSet<>();\n\n        queue.offer(start);\n        visited.add(start);\n\n        while (!queue.isEmpty()) {\n            char current = queue.poll();\n            traversalOrder.add(current);\n\n            for (char neighbor : graph.getOrDefault(current, new ArrayList<>())) {\n                if (!visited.contains(neighbor)) {\n                    queue.offer(neighbor);\n                    visited.add(neighbor);\n                }\n            }\n        }\n\n        return traversalOrder;\n    }\n\n    public static void main(String[] args) {\n        BFSGraphTraversal graph = new BFSGraphTraversal();\n\n        // 添加图的边\n        graph.addEdge('A', 'B');\n        graph.addEdge('A', 'C');\n        graph.addEdge('B', 'D');\n        graph.addEdge('B', 'E');\n        graph.addEdge('C', 'F');\n        graph.addEdge('E', 'F');\n\n        // 从节点 'A' 开始进行 BFS 遍历\n        List<Character> traversalOrder = graph.bfs('A');\n        System.out.println(\"BFS traversal order starting from node A: \" + traversalOrder);\n    }\n}\n\n\n```","slug":"高级算法/BFS","published":1,"date":"2024-07-10T10:07:16.855Z","updated":"2024-07-10T10:07:16.856Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o1w001czb8a66wnbl7c","content":"<h1>BFS (Breadth-First Search)</h1>\n<h2 id=\"1-用途\">1. 用途</h2>\n<p>广度优先搜索（BFS）在现实中有许多实际用途，主要用于解决以下问题：</p>\n<ol>\n<li>最短路径搜索：BFS 可以用于无权图或者所有边权重相同的图中寻找最短路径。这在网络路由、社交网络中的最短友谊链、广告投放中的最短路径传播等方面有广泛应用。</li>\n<li>图的连通性检测：BFS 可以用来检测图是否是连通的，即从一个节点能否到达图中的所有其他节点。这在计算机网络中的连通性检测、社交网络中的社群发现等方面很有用。</li>\n<li>状态空间搜索：BFS 可以应用于状态空间搜索问题，如在迷宫游戏中找到从起点到终点的最短路径，或者在解决八皇后问题等排列组合问题时寻找最优解。</li>\n<li>Web爬虫：在网络爬虫中，BFS 用来抓取网页，并且可以限制爬取深度，确保优先爬取距离种子页面更近的链接。</li>\n<li>层次遍历：BFS 的特性使其适合进行层次遍历，例如<code>树的层次遍历</code>、多级菜单的展开等。</li>\n<li>游戏开发：在游戏开发中，BFS 可以用于寻找玩家或NPC的移动路径，或者在地图中寻找最近的敌人或资源。</li>\n</ol>\n<h2 id=\"2-代码\">2. 代码</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BFSGraphTraversal</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用邻接列表表示图</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;Character, List&lt;Character&gt;&gt; graph;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">BFSGraphTraversal</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        graph = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 添加边的方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addEdge</span><span class=\"params\">(<span class=\"type\">char</span> from, <span class=\"type\">char</span> to)</span> &#123;</span><br><span class=\"line\">        graph.computeIfAbsent(from, k -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;()).add(to);</span><br><span class=\"line\">        graph.computeIfAbsent(to, k -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;()).add(from); <span class=\"comment\">// 如果是有向图，删除此行</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// BFS 遍历方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Character&gt; <span class=\"title function_\">bfs</span><span class=\"params\">(<span class=\"type\">char</span> start)</span> &#123;</span><br><span class=\"line\">        List&lt;Character&gt; traversalOrder = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!graph.containsKey(start)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> traversalOrder;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Queue&lt;Character&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\">        Set&lt;Character&gt; visited = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        queue.offer(start);</span><br><span class=\"line\">        visited.add(start);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!queue.isEmpty()) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">current</span> <span class=\"operator\">=</span> queue.poll();</span><br><span class=\"line\">            traversalOrder.add(current);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">char</span> neighbor : graph.getOrDefault(current, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;())) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!visited.contains(neighbor)) &#123;</span><br><span class=\"line\">                    queue.offer(neighbor);</span><br><span class=\"line\">                    visited.add(neighbor);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> traversalOrder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">BFSGraphTraversal</span> <span class=\"variable\">graph</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BFSGraphTraversal</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 添加图的边</span></span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;E&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;E&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 从节点 &#x27;A&#x27; 开始进行 BFS 遍历</span></span><br><span class=\"line\">        List&lt;Character&gt; traversalOrder = graph.bfs(<span class=\"string\">&#x27;A&#x27;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BFS traversal order starting from node A: &quot;</span> + traversalOrder);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h1>BFS (Breadth-First Search)</h1>\n<h2 id=\"1-用途\">1. 用途</h2>\n<p>广度优先搜索（BFS）在现实中有许多实际用途，主要用于解决以下问题：</p>\n<ol>\n<li>最短路径搜索：BFS 可以用于无权图或者所有边权重相同的图中寻找最短路径。这在网络路由、社交网络中的最短友谊链、广告投放中的最短路径传播等方面有广泛应用。</li>\n<li>图的连通性检测：BFS 可以用来检测图是否是连通的，即从一个节点能否到达图中的所有其他节点。这在计算机网络中的连通性检测、社交网络中的社群发现等方面很有用。</li>\n<li>状态空间搜索：BFS 可以应用于状态空间搜索问题，如在迷宫游戏中找到从起点到终点的最短路径，或者在解决八皇后问题等排列组合问题时寻找最优解。</li>\n<li>Web爬虫：在网络爬虫中，BFS 用来抓取网页，并且可以限制爬取深度，确保优先爬取距离种子页面更近的链接。</li>\n<li>层次遍历：BFS 的特性使其适合进行层次遍历，例如<code>树的层次遍历</code>、多级菜单的展开等。</li>\n<li>游戏开发：在游戏开发中，BFS 可以用于寻找玩家或NPC的移动路径，或者在地图中寻找最近的敌人或资源。</li>\n</ol>\n<h2 id=\"2-代码\">2. 代码</h2>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BFSGraphTraversal</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用邻接列表表示图</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;Character, List&lt;Character&gt;&gt; graph;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">BFSGraphTraversal</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        graph = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 添加边的方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addEdge</span><span class=\"params\">(<span class=\"type\">char</span> from, <span class=\"type\">char</span> to)</span> &#123;</span><br><span class=\"line\">        graph.computeIfAbsent(from, k -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;()).add(to);</span><br><span class=\"line\">        graph.computeIfAbsent(to, k -&gt; <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;()).add(from); <span class=\"comment\">// 如果是有向图，删除此行</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// BFS 遍历方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Character&gt; <span class=\"title function_\">bfs</span><span class=\"params\">(<span class=\"type\">char</span> start)</span> &#123;</span><br><span class=\"line\">        List&lt;Character&gt; traversalOrder = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!graph.containsKey(start)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> traversalOrder;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Queue&lt;Character&gt; queue = <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>&lt;&gt;();</span><br><span class=\"line\">        Set&lt;Character&gt; visited = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">        queue.offer(start);</span><br><span class=\"line\">        visited.add(start);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (!queue.isEmpty()) &#123;</span><br><span class=\"line\">            <span class=\"type\">char</span> <span class=\"variable\">current</span> <span class=\"operator\">=</span> queue.poll();</span><br><span class=\"line\">            traversalOrder.add(current);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">char</span> neighbor : graph.getOrDefault(current, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;())) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!visited.contains(neighbor)) &#123;</span><br><span class=\"line\">                    queue.offer(neighbor);</span><br><span class=\"line\">                    visited.add(neighbor);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> traversalOrder;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">BFSGraphTraversal</span> <span class=\"variable\">graph</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BFSGraphTraversal</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 添加图的边</span></span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;B&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;A&#x27;</span>, <span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;D&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;B&#x27;</span>, <span class=\"string\">&#x27;E&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;C&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>);</span><br><span class=\"line\">        graph.addEdge(<span class=\"string\">&#x27;E&#x27;</span>, <span class=\"string\">&#x27;F&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 从节点 &#x27;A&#x27; 开始进行 BFS 遍历</span></span><br><span class=\"line\">        List&lt;Character&gt; traversalOrder = graph.bfs(<span class=\"string\">&#x27;A&#x27;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;BFS traversal order starting from node A: &quot;</span> + traversalOrder);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"title":"greedy algorithm 贪心算法","weight":20,"_content":"\n## 1. 简述\n贪婪算法，是一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的算法。\n比如在旅行推销员问题中，如果旅行员每次都选择最近的城市，那这就是一种贪心算法。\n\n## 2. 应用\n\n贪心算法可以解决一些最优化问题，如：求图中的最小生成树、求哈夫曼编码。","source":"_posts/高级算法/GreedyAlgorithm.md","raw":"---\ntitle: greedy algorithm 贪心算法\nweight: 20\n---\n\n## 1. 简述\n贪婪算法，是一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的算法。\n比如在旅行推销员问题中，如果旅行员每次都选择最近的城市，那这就是一种贪心算法。\n\n## 2. 应用\n\n贪心算法可以解决一些最优化问题，如：求图中的最小生成树、求哈夫曼编码。","slug":"高级算法/GreedyAlgorithm","published":1,"date":"2024-07-12T10:57:46.832Z","updated":"2024-07-12T12:03:20.580Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o1x001dzb8agilgaru4","content":"<h2 id=\"1-简述\">1. 简述</h2>\n<p>贪婪算法，是一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的算法。<br>\n比如在旅行推销员问题中，如果旅行员每次都选择最近的城市，那这就是一种贪心算法。</p>\n<h2 id=\"2-应用\">2. 应用</h2>\n<p>贪心算法可以解决一些最优化问题，如：求图中的最小生成树、求哈夫曼编码。</p>\n","excerpt":"","more":"<h2 id=\"1-简述\">1. 简述</h2>\n<p>贪婪算法，是一种在每一步选择中都采取在当前状态下最好或最优（即最有利）的选择，从而希望导致结果是最好或最优的算法。<br>\n比如在旅行推销员问题中，如果旅行员每次都选择最近的城市，那这就是一种贪心算法。</p>\n<h2 id=\"2-应用\">2. 应用</h2>\n<p>贪心算法可以解决一些最优化问题，如：求图中的最小生成树、求哈夫曼编码。</p>\n"},{"title":"P-NP问题","weight":10,"_content":"\n## P-NP问题\n### 1. 问题解释\n---\nP-NP问题是计算机科学中的一个著名难题。简单来说，它问的是：所有可以快速验证的答案，是否也可以快速找到？\n\n- P类问题是那些可以用计算机在多项式时间内（即相对较快）解决的问题。\n- NP类问题是那些答案可以在多项式时间内验证的问题，但我们不知道是否可以在同样的时间内找到这些答案。\n\n这个问题之所以重要，是因为如果证明P=NP，那么所有现在认为很难解决的问题都能很快解决。反之，如果P≠NP，那么有些问题是我们无法快速解决的。**换而言之就是当前所使用的这部分体系会被颠覆，需要重构**。\n\n\n### 2. 解决后果\n如果P=NP问题得到解决，并证明所有NP问题都可以在多项式时间内解决，将会对多个领域产生深远影响，特别是密码学领域。以下是可能的后果：\n\n1. 公钥加密\n- 现状： 目前的公钥加密（如RSA和椭圆曲线加密）依赖于一些数学难题（如大整数分解和离散对数问题）的难以解决性。这些问题目前被认为无法在多项式时间内解决，因此被广泛用于保护互联网通信和金融交易的安全。\n\n- 后果： 如果P=NP，那么这些问题可以在多项式时间内解决，从而使得公钥加密方案变得不再安全。任何人都可以在合理的时间内破解这些加密方案，从而可以解密敏感数据和窃取信息。\n\n2. 对称加密\n- 现状： 对称加密算法（如AES和3DES）依赖于密钥的难以破解性，目前认为这些算法在没有密钥的情况下很难被破解。\n- 后果： 如果P=NP，那么找到密钥变得容易，从而破坏对称加密的安全性。攻击者可以在多项式时间内找到正确的密钥，从而解密通信数据。\n\n3. 加密哈希\n- 现状： 加密哈希函数（如SHA-256）广泛用于数据完整性验证、数字签名和加密货币（如比特币）。这些哈希函数依赖于找到原像（给定哈希值找到相应输入）的难度。\n- 后果： 如果P=NP，找到哈希函数的前映像将变得简单，可以在多项式时间内完成，从而破坏加密哈希的安全性。攻击者可以伪造数据、生成冲突，甚至破坏区块链的完整性。\n\n4. 整体影响\n- 现状： 现代安全系统依赖于一些问题的计算复杂性，这些问题目前被认为在合理时间内无法解决。\n- 后果： 如果P=NP，所有依赖于计算复杂性的安全系统将变得不再可靠。需要开发新的基于信息论安全的解决方案，这些方案不依赖于计算复杂性假设。\n\n**替代方案**\n- 信息论安全： 这类安全方案在理论上是无懈可击的，不依赖于计算难题。例如，量子加密（如量子密钥分发）在理论上可以提供无条件的安全性。\n- 新算法： 研究者需要寻找新的算法和协议，这些算法和协议不依赖于现有的计算难题，可能涉及新的数学和理论基础。\n总结而言，如果P=NP被证明，将需要重新设计和实现现代密码系统，确保数据和通信的安全性。这个过程将是一个巨大的挑战，但也会推动计算机科学和密码学的进步。\n\n### 专业术语\nWhat are the differences between NP, NP-Complete and NP-Hard?\n\n\n1. NP（非确定性多项式时间）：\n\nNP类问题是指那些可以在多项式时间内由非确定性图灵机（Nondeterministic Turing Machine）解决的问题。\n换句话说，NP问题是那些解可以在多项式时间内验证的问题。\n例如，给定一个数独谜题（Sudoku puzzle）和一个解答，我们可以在多项式时间内验证这个解答是否正确。\n\n2. NP完全（NP-Complete）：\n\nNP完全问题是NP类问题中的一个子集，具有以下两个特性：\n该问题本身是NP问题。\n任何NP问题都可以在多项式时间内归约（转换）为这个问题。\n这意味着，如果我们能够在多项式时间内解决任何一个NP完全问题，那么所有NP问题都可以在多项式时间内解决。\n例如，旅行推销员问题（Traveling Salesman Problem, TSP）是一个经典的NP完全问题。\n\n3. NP困难（NP-Hard）：\n\nNP困难问题是那些至少和NP问题一样难的问题。\n这些问题不一定是NP问题，也就是说，NP困难问题的解不一定能在多项式时间内验证。\n例如，计算一个图的最大团（Maximal Clique）是一个NP困难问题，它不仅是一个很难解决的问题，而且我们也不能在多项式时间内验证其解的正确性。\n**举个例子：**\n假设我们有一个物流公司的运输问题：\n\nNP问题：判断是否存在一种路径，使得运输成本不超过某个给定的预算。验证一条具体的路径是否满足这个条件是可以在多项式时间内完成的，因此这是一个NP问题。\n\nNP完全问题：在上述运输问题中，找到一条确切的路径，使得运输成本正好等于预算，并且是最短的路径。这可以归约为旅行推销员问题（TSP），所以这是一个NP完全问题。\n\nNP困难问题：假设这个物流公司想要最优地安排车辆，以最小化所有可能路径的总运输成本，这涉及到图论中的车辆路径问题（Vehicle Routing Problem, VRP），这是一个NP困难问题，因为它不仅难以解决，而且即使找到一个解，也无法在多项式时间内验证其最优性。\n\n\n### 问题\nIn comparing NP-complete and NP-hard, which of the following statements are TRUE?\n\ni） The theory of NP-completeness provides a method of obtaining a polynomial time for NP algorithms.\nii） All NP-complete problems are NP-Hard.","source":"_posts/高级算法/P-NP问题.md","raw":"---\ntitle: P-NP问题\nweight: 10\n---\n\n## P-NP问题\n### 1. 问题解释\n---\nP-NP问题是计算机科学中的一个著名难题。简单来说，它问的是：所有可以快速验证的答案，是否也可以快速找到？\n\n- P类问题是那些可以用计算机在多项式时间内（即相对较快）解决的问题。\n- NP类问题是那些答案可以在多项式时间内验证的问题，但我们不知道是否可以在同样的时间内找到这些答案。\n\n这个问题之所以重要，是因为如果证明P=NP，那么所有现在认为很难解决的问题都能很快解决。反之，如果P≠NP，那么有些问题是我们无法快速解决的。**换而言之就是当前所使用的这部分体系会被颠覆，需要重构**。\n\n\n### 2. 解决后果\n如果P=NP问题得到解决，并证明所有NP问题都可以在多项式时间内解决，将会对多个领域产生深远影响，特别是密码学领域。以下是可能的后果：\n\n1. 公钥加密\n- 现状： 目前的公钥加密（如RSA和椭圆曲线加密）依赖于一些数学难题（如大整数分解和离散对数问题）的难以解决性。这些问题目前被认为无法在多项式时间内解决，因此被广泛用于保护互联网通信和金融交易的安全。\n\n- 后果： 如果P=NP，那么这些问题可以在多项式时间内解决，从而使得公钥加密方案变得不再安全。任何人都可以在合理的时间内破解这些加密方案，从而可以解密敏感数据和窃取信息。\n\n2. 对称加密\n- 现状： 对称加密算法（如AES和3DES）依赖于密钥的难以破解性，目前认为这些算法在没有密钥的情况下很难被破解。\n- 后果： 如果P=NP，那么找到密钥变得容易，从而破坏对称加密的安全性。攻击者可以在多项式时间内找到正确的密钥，从而解密通信数据。\n\n3. 加密哈希\n- 现状： 加密哈希函数（如SHA-256）广泛用于数据完整性验证、数字签名和加密货币（如比特币）。这些哈希函数依赖于找到原像（给定哈希值找到相应输入）的难度。\n- 后果： 如果P=NP，找到哈希函数的前映像将变得简单，可以在多项式时间内完成，从而破坏加密哈希的安全性。攻击者可以伪造数据、生成冲突，甚至破坏区块链的完整性。\n\n4. 整体影响\n- 现状： 现代安全系统依赖于一些问题的计算复杂性，这些问题目前被认为在合理时间内无法解决。\n- 后果： 如果P=NP，所有依赖于计算复杂性的安全系统将变得不再可靠。需要开发新的基于信息论安全的解决方案，这些方案不依赖于计算复杂性假设。\n\n**替代方案**\n- 信息论安全： 这类安全方案在理论上是无懈可击的，不依赖于计算难题。例如，量子加密（如量子密钥分发）在理论上可以提供无条件的安全性。\n- 新算法： 研究者需要寻找新的算法和协议，这些算法和协议不依赖于现有的计算难题，可能涉及新的数学和理论基础。\n总结而言，如果P=NP被证明，将需要重新设计和实现现代密码系统，确保数据和通信的安全性。这个过程将是一个巨大的挑战，但也会推动计算机科学和密码学的进步。\n\n### 专业术语\nWhat are the differences between NP, NP-Complete and NP-Hard?\n\n\n1. NP（非确定性多项式时间）：\n\nNP类问题是指那些可以在多项式时间内由非确定性图灵机（Nondeterministic Turing Machine）解决的问题。\n换句话说，NP问题是那些解可以在多项式时间内验证的问题。\n例如，给定一个数独谜题（Sudoku puzzle）和一个解答，我们可以在多项式时间内验证这个解答是否正确。\n\n2. NP完全（NP-Complete）：\n\nNP完全问题是NP类问题中的一个子集，具有以下两个特性：\n该问题本身是NP问题。\n任何NP问题都可以在多项式时间内归约（转换）为这个问题。\n这意味着，如果我们能够在多项式时间内解决任何一个NP完全问题，那么所有NP问题都可以在多项式时间内解决。\n例如，旅行推销员问题（Traveling Salesman Problem, TSP）是一个经典的NP完全问题。\n\n3. NP困难（NP-Hard）：\n\nNP困难问题是那些至少和NP问题一样难的问题。\n这些问题不一定是NP问题，也就是说，NP困难问题的解不一定能在多项式时间内验证。\n例如，计算一个图的最大团（Maximal Clique）是一个NP困难问题，它不仅是一个很难解决的问题，而且我们也不能在多项式时间内验证其解的正确性。\n**举个例子：**\n假设我们有一个物流公司的运输问题：\n\nNP问题：判断是否存在一种路径，使得运输成本不超过某个给定的预算。验证一条具体的路径是否满足这个条件是可以在多项式时间内完成的，因此这是一个NP问题。\n\nNP完全问题：在上述运输问题中，找到一条确切的路径，使得运输成本正好等于预算，并且是最短的路径。这可以归约为旅行推销员问题（TSP），所以这是一个NP完全问题。\n\nNP困难问题：假设这个物流公司想要最优地安排车辆，以最小化所有可能路径的总运输成本，这涉及到图论中的车辆路径问题（Vehicle Routing Problem, VRP），这是一个NP困难问题，因为它不仅难以解决，而且即使找到一个解，也无法在多项式时间内验证其最优性。\n\n\n### 问题\nIn comparing NP-complete and NP-hard, which of the following statements are TRUE?\n\ni） The theory of NP-completeness provides a method of obtaining a polynomial time for NP algorithms.\nii） All NP-complete problems are NP-Hard.","slug":"高级算法/P-NP问题","published":1,"date":"2024-07-10T10:07:16.873Z","updated":"2024-07-10T10:07:16.874Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o20001ezb8a6b8p4wxk","content":"<h2 id=\"P-NP问题\">P-NP问题</h2>\n<h3 id=\"1-问题解释\">1. 问题解释</h3>\n<hr>\n<p>P-NP问题是计算机科学中的一个著名难题。简单来说，它问的是：所有可以快速验证的答案，是否也可以快速找到？</p>\n<ul>\n<li>P类问题是那些可以用计算机在多项式时间内（即相对较快）解决的问题。</li>\n<li>NP类问题是那些答案可以在多项式时间内验证的问题，但我们不知道是否可以在同样的时间内找到这些答案。</li>\n</ul>\n<p>这个问题之所以重要，是因为如果证明P=NP，那么所有现在认为很难解决的问题都能很快解决。反之，如果P≠NP，那么有些问题是我们无法快速解决的。<strong>换而言之就是当前所使用的这部分体系会被颠覆，需要重构</strong>。</p>\n<h3 id=\"2-解决后果\">2. 解决后果</h3>\n<p>如果P=NP问题得到解决，并证明所有NP问题都可以在多项式时间内解决，将会对多个领域产生深远影响，特别是密码学领域。以下是可能的后果：</p>\n<ol>\n<li>公钥加密</li>\n</ol>\n<ul>\n<li>\n<p>现状： 目前的公钥加密（如RSA和椭圆曲线加密）依赖于一些数学难题（如大整数分解和离散对数问题）的难以解决性。这些问题目前被认为无法在多项式时间内解决，因此被广泛用于保护互联网通信和金融交易的安全。</p>\n</li>\n<li>\n<p>后果： 如果P=NP，那么这些问题可以在多项式时间内解决，从而使得公钥加密方案变得不再安全。任何人都可以在合理的时间内破解这些加密方案，从而可以解密敏感数据和窃取信息。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>对称加密</li>\n</ol>\n<ul>\n<li>现状： 对称加密算法（如AES和3DES）依赖于密钥的难以破解性，目前认为这些算法在没有密钥的情况下很难被破解。</li>\n<li>后果： 如果P=NP，那么找到密钥变得容易，从而破坏对称加密的安全性。攻击者可以在多项式时间内找到正确的密钥，从而解密通信数据。</li>\n</ul>\n<ol start=\"3\">\n<li>加密哈希</li>\n</ol>\n<ul>\n<li>现状： 加密哈希函数（如SHA-256）广泛用于数据完整性验证、数字签名和加密货币（如比特币）。这些哈希函数依赖于找到原像（给定哈希值找到相应输入）的难度。</li>\n<li>后果： 如果P=NP，找到哈希函数的前映像将变得简单，可以在多项式时间内完成，从而破坏加密哈希的安全性。攻击者可以伪造数据、生成冲突，甚至破坏区块链的完整性。</li>\n</ul>\n<ol start=\"4\">\n<li>整体影响</li>\n</ol>\n<ul>\n<li>现状： 现代安全系统依赖于一些问题的计算复杂性，这些问题目前被认为在合理时间内无法解决。</li>\n<li>后果： 如果P=NP，所有依赖于计算复杂性的安全系统将变得不再可靠。需要开发新的基于信息论安全的解决方案，这些方案不依赖于计算复杂性假设。</li>\n</ul>\n<p><strong>替代方案</strong></p>\n<ul>\n<li>信息论安全： 这类安全方案在理论上是无懈可击的，不依赖于计算难题。例如，量子加密（如量子密钥分发）在理论上可以提供无条件的安全性。</li>\n<li>新算法： 研究者需要寻找新的算法和协议，这些算法和协议不依赖于现有的计算难题，可能涉及新的数学和理论基础。<br>\n总结而言，如果P=NP被证明，将需要重新设计和实现现代密码系统，确保数据和通信的安全性。这个过程将是一个巨大的挑战，但也会推动计算机科学和密码学的进步。</li>\n</ul>\n<h3 id=\"专业术语\">专业术语</h3>\n<p>What are the differences between NP, NP-Complete and NP-Hard?</p>\n<ol>\n<li>NP（非确定性多项式时间）：</li>\n</ol>\n<p>NP类问题是指那些可以在多项式时间内由非确定性图灵机（Nondeterministic Turing Machine）解决的问题。<br>\n换句话说，NP问题是那些解可以在多项式时间内验证的问题。<br>\n例如，给定一个数独谜题（Sudoku puzzle）和一个解答，我们可以在多项式时间内验证这个解答是否正确。</p>\n<ol start=\"2\">\n<li>NP完全（NP-Complete）：</li>\n</ol>\n<p>NP完全问题是NP类问题中的一个子集，具有以下两个特性：<br>\n该问题本身是NP问题。<br>\n任何NP问题都可以在多项式时间内归约（转换）为这个问题。<br>\n这意味着，如果我们能够在多项式时间内解决任何一个NP完全问题，那么所有NP问题都可以在多项式时间内解决。<br>\n例如，旅行推销员问题（Traveling Salesman Problem, TSP）是一个经典的NP完全问题。</p>\n<ol start=\"3\">\n<li>NP困难（NP-Hard）：</li>\n</ol>\n<p>NP困难问题是那些至少和NP问题一样难的问题。<br>\n这些问题不一定是NP问题，也就是说，NP困难问题的解不一定能在多项式时间内验证。<br>\n例如，计算一个图的最大团（Maximal Clique）是一个NP困难问题，它不仅是一个很难解决的问题，而且我们也不能在多项式时间内验证其解的正确性。<br>\n<strong>举个例子：</strong><br>\n假设我们有一个物流公司的运输问题：</p>\n<p>NP问题：判断是否存在一种路径，使得运输成本不超过某个给定的预算。验证一条具体的路径是否满足这个条件是可以在多项式时间内完成的，因此这是一个NP问题。</p>\n<p>NP完全问题：在上述运输问题中，找到一条确切的路径，使得运输成本正好等于预算，并且是最短的路径。这可以归约为旅行推销员问题（TSP），所以这是一个NP完全问题。</p>\n<p>NP困难问题：假设这个物流公司想要最优地安排车辆，以最小化所有可能路径的总运输成本，这涉及到图论中的车辆路径问题（Vehicle Routing Problem, VRP），这是一个NP困难问题，因为它不仅难以解决，而且即使找到一个解，也无法在多项式时间内验证其最优性。</p>\n<h3 id=\"问题\">问题</h3>\n<p>In comparing NP-complete and NP-hard, which of the following statements are TRUE?</p>\n<p>i） The theory of NP-completeness provides a method of obtaining a polynomial time for NP algorithms.<br>\nii） All NP-complete problems are NP-Hard.</p>\n","excerpt":"","more":"<h2 id=\"P-NP问题\">P-NP问题</h2>\n<h3 id=\"1-问题解释\">1. 问题解释</h3>\n<hr>\n<p>P-NP问题是计算机科学中的一个著名难题。简单来说，它问的是：所有可以快速验证的答案，是否也可以快速找到？</p>\n<ul>\n<li>P类问题是那些可以用计算机在多项式时间内（即相对较快）解决的问题。</li>\n<li>NP类问题是那些答案可以在多项式时间内验证的问题，但我们不知道是否可以在同样的时间内找到这些答案。</li>\n</ul>\n<p>这个问题之所以重要，是因为如果证明P=NP，那么所有现在认为很难解决的问题都能很快解决。反之，如果P≠NP，那么有些问题是我们无法快速解决的。<strong>换而言之就是当前所使用的这部分体系会被颠覆，需要重构</strong>。</p>\n<h3 id=\"2-解决后果\">2. 解决后果</h3>\n<p>如果P=NP问题得到解决，并证明所有NP问题都可以在多项式时间内解决，将会对多个领域产生深远影响，特别是密码学领域。以下是可能的后果：</p>\n<ol>\n<li>公钥加密</li>\n</ol>\n<ul>\n<li>\n<p>现状： 目前的公钥加密（如RSA和椭圆曲线加密）依赖于一些数学难题（如大整数分解和离散对数问题）的难以解决性。这些问题目前被认为无法在多项式时间内解决，因此被广泛用于保护互联网通信和金融交易的安全。</p>\n</li>\n<li>\n<p>后果： 如果P=NP，那么这些问题可以在多项式时间内解决，从而使得公钥加密方案变得不再安全。任何人都可以在合理的时间内破解这些加密方案，从而可以解密敏感数据和窃取信息。</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li>对称加密</li>\n</ol>\n<ul>\n<li>现状： 对称加密算法（如AES和3DES）依赖于密钥的难以破解性，目前认为这些算法在没有密钥的情况下很难被破解。</li>\n<li>后果： 如果P=NP，那么找到密钥变得容易，从而破坏对称加密的安全性。攻击者可以在多项式时间内找到正确的密钥，从而解密通信数据。</li>\n</ul>\n<ol start=\"3\">\n<li>加密哈希</li>\n</ol>\n<ul>\n<li>现状： 加密哈希函数（如SHA-256）广泛用于数据完整性验证、数字签名和加密货币（如比特币）。这些哈希函数依赖于找到原像（给定哈希值找到相应输入）的难度。</li>\n<li>后果： 如果P=NP，找到哈希函数的前映像将变得简单，可以在多项式时间内完成，从而破坏加密哈希的安全性。攻击者可以伪造数据、生成冲突，甚至破坏区块链的完整性。</li>\n</ul>\n<ol start=\"4\">\n<li>整体影响</li>\n</ol>\n<ul>\n<li>现状： 现代安全系统依赖于一些问题的计算复杂性，这些问题目前被认为在合理时间内无法解决。</li>\n<li>后果： 如果P=NP，所有依赖于计算复杂性的安全系统将变得不再可靠。需要开发新的基于信息论安全的解决方案，这些方案不依赖于计算复杂性假设。</li>\n</ul>\n<p><strong>替代方案</strong></p>\n<ul>\n<li>信息论安全： 这类安全方案在理论上是无懈可击的，不依赖于计算难题。例如，量子加密（如量子密钥分发）在理论上可以提供无条件的安全性。</li>\n<li>新算法： 研究者需要寻找新的算法和协议，这些算法和协议不依赖于现有的计算难题，可能涉及新的数学和理论基础。<br>\n总结而言，如果P=NP被证明，将需要重新设计和实现现代密码系统，确保数据和通信的安全性。这个过程将是一个巨大的挑战，但也会推动计算机科学和密码学的进步。</li>\n</ul>\n<h3 id=\"专业术语\">专业术语</h3>\n<p>What are the differences between NP, NP-Complete and NP-Hard?</p>\n<ol>\n<li>NP（非确定性多项式时间）：</li>\n</ol>\n<p>NP类问题是指那些可以在多项式时间内由非确定性图灵机（Nondeterministic Turing Machine）解决的问题。<br>\n换句话说，NP问题是那些解可以在多项式时间内验证的问题。<br>\n例如，给定一个数独谜题（Sudoku puzzle）和一个解答，我们可以在多项式时间内验证这个解答是否正确。</p>\n<ol start=\"2\">\n<li>NP完全（NP-Complete）：</li>\n</ol>\n<p>NP完全问题是NP类问题中的一个子集，具有以下两个特性：<br>\n该问题本身是NP问题。<br>\n任何NP问题都可以在多项式时间内归约（转换）为这个问题。<br>\n这意味着，如果我们能够在多项式时间内解决任何一个NP完全问题，那么所有NP问题都可以在多项式时间内解决。<br>\n例如，旅行推销员问题（Traveling Salesman Problem, TSP）是一个经典的NP完全问题。</p>\n<ol start=\"3\">\n<li>NP困难（NP-Hard）：</li>\n</ol>\n<p>NP困难问题是那些至少和NP问题一样难的问题。<br>\n这些问题不一定是NP问题，也就是说，NP困难问题的解不一定能在多项式时间内验证。<br>\n例如，计算一个图的最大团（Maximal Clique）是一个NP困难问题，它不仅是一个很难解决的问题，而且我们也不能在多项式时间内验证其解的正确性。<br>\n<strong>举个例子：</strong><br>\n假设我们有一个物流公司的运输问题：</p>\n<p>NP问题：判断是否存在一种路径，使得运输成本不超过某个给定的预算。验证一条具体的路径是否满足这个条件是可以在多项式时间内完成的，因此这是一个NP问题。</p>\n<p>NP完全问题：在上述运输问题中，找到一条确切的路径，使得运输成本正好等于预算，并且是最短的路径。这可以归约为旅行推销员问题（TSP），所以这是一个NP完全问题。</p>\n<p>NP困难问题：假设这个物流公司想要最优地安排车辆，以最小化所有可能路径的总运输成本，这涉及到图论中的车辆路径问题（Vehicle Routing Problem, VRP），这是一个NP困难问题，因为它不仅难以解决，而且即使找到一个解，也无法在多项式时间内验证其最优性。</p>\n<h3 id=\"问题\">问题</h3>\n<p>In comparing NP-complete and NP-hard, which of the following statements are TRUE?</p>\n<p>i） The theory of NP-completeness provides a method of obtaining a polynomial time for NP algorithms.<br>\nii） All NP-complete problems are NP-Hard.</p>\n"},{"title":"最小生成树·Prim Jarnik algorithm","weight":10,"_content":"\n","source":"_posts/高级算法/PrimJarnik算法.md","raw":"---\ntitle: 最小生成树·Prim Jarnik algorithm\nweight: 10\n---\n\n","slug":"高级算法/PrimJarnik算法","published":1,"date":"2024-07-12T10:35:49.512Z","updated":"2024-07-12T10:36:23.243Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o26001fzb8aff1y97t9","content":"","excerpt":"","more":""},{"title":"图论","_content":"\n## 1. Disconnected Graph (图形不连通 / 断开图)\n\nEnglish: A graph in which there are at least two vertices such that there is no path connecting them.\n中文: 一个图中至少有两个顶点之间没有路径相连。\n\n```\nA---B         E---F\n    |\n    C---D\n```\n\n## 2. Bipartite Graph (二部图 / 二分图)\n`bipartite ［bipartit］; adj. 二深裂的［指叶子］；由双方组成的，两党的，由两党组成的.`\n\nEnglish: A graph whose vertices can be divided into two disjoint and independent sets such that every edge connects a vertex in one set to a vertex in the other set.\n中文: 将顶点分成两类，边只存在不同类的顶点之间，同类顶点之间没有边。\n\n**应用：**\n\n二部图在许多领域的应用中非常常见，包括：\n\n* 最大匹配问题：寻找图中不存在共用顶点的最大边集。\n\n* 婚姻问题：将 n 位女士与 n 位男士配对，使得每位女士都嫁给一位男士，每位男士都娶一位女士。\n\n* 流量网络：表示商品在网络中从源点到汇点的流动。\n\n```\nSet 1: A, C, E\nSet 2: B, D, F\n\n  A--B\n   \\/\n   /\\\n  C--D\n   \\/\n   /\\\n  E--F\n\n```\n\n## 3. Planar Graph (平面图)\n\nEnglish: A graph that can be drawn on a plane without any edges crossing each other.\n中文: 一种图，可以在平面上绘制而`不`出现任何边`交叉`。\n\n```\n    A\n   / \\\n  /   \\\n B-----C\n |     |\n D-----E\n\n```\n\n## 4. Subgraph (子图)\n\nEnglish: A graph formed from a subset of the vertices and edges of another graph.\n中文: 从另一个图的顶点和边的子集中形成的图。（可以没有一些边和点）\n```\nOriginal Graph:\nA---B---C\n|       |\nD---E---F\n\nSubgraph:\nA---B\n|  \nD---E\n\n```\n\n\n## 5. Spanning Subgraph (生成子图)\n`中古高地德語 spān ← 古高地德語 spān (“木屑，削片”) ← 原始日耳曼語 *spēnuz (“碎屑，削片”)。 与古英語 spōn (“木片，碎屑”)同源`\nEnglish: A subgraph that includes all the vertices of the original graph.\n中文: 包含原图所有顶点的子图。（可以没有一些边，但不能少点）\n\n```\nOriginal Graph:\nA---B\n|   |\nC---D---E\n\nSpanning Subgraph:\nA---B\n|  \nC---D---E\n\n```\n\n## 6. Separation edges and separation vertices\n","source":"_posts/高级算法/图论.md","raw":"---\ntitle: 图论\n---\n\n## 1. Disconnected Graph (图形不连通 / 断开图)\n\nEnglish: A graph in which there are at least two vertices such that there is no path connecting them.\n中文: 一个图中至少有两个顶点之间没有路径相连。\n\n```\nA---B         E---F\n    |\n    C---D\n```\n\n## 2. Bipartite Graph (二部图 / 二分图)\n`bipartite ［bipartit］; adj. 二深裂的［指叶子］；由双方组成的，两党的，由两党组成的.`\n\nEnglish: A graph whose vertices can be divided into two disjoint and independent sets such that every edge connects a vertex in one set to a vertex in the other set.\n中文: 将顶点分成两类，边只存在不同类的顶点之间，同类顶点之间没有边。\n\n**应用：**\n\n二部图在许多领域的应用中非常常见，包括：\n\n* 最大匹配问题：寻找图中不存在共用顶点的最大边集。\n\n* 婚姻问题：将 n 位女士与 n 位男士配对，使得每位女士都嫁给一位男士，每位男士都娶一位女士。\n\n* 流量网络：表示商品在网络中从源点到汇点的流动。\n\n```\nSet 1: A, C, E\nSet 2: B, D, F\n\n  A--B\n   \\/\n   /\\\n  C--D\n   \\/\n   /\\\n  E--F\n\n```\n\n## 3. Planar Graph (平面图)\n\nEnglish: A graph that can be drawn on a plane without any edges crossing each other.\n中文: 一种图，可以在平面上绘制而`不`出现任何边`交叉`。\n\n```\n    A\n   / \\\n  /   \\\n B-----C\n |     |\n D-----E\n\n```\n\n## 4. Subgraph (子图)\n\nEnglish: A graph formed from a subset of the vertices and edges of another graph.\n中文: 从另一个图的顶点和边的子集中形成的图。（可以没有一些边和点）\n```\nOriginal Graph:\nA---B---C\n|       |\nD---E---F\n\nSubgraph:\nA---B\n|  \nD---E\n\n```\n\n\n## 5. Spanning Subgraph (生成子图)\n`中古高地德語 spān ← 古高地德語 spān (“木屑，削片”) ← 原始日耳曼語 *spēnuz (“碎屑，削片”)。 与古英語 spōn (“木片，碎屑”)同源`\nEnglish: A subgraph that includes all the vertices of the original graph.\n中文: 包含原图所有顶点的子图。（可以没有一些边，但不能少点）\n\n```\nOriginal Graph:\nA---B\n|   |\nC---D---E\n\nSpanning Subgraph:\nA---B\n|  \nC---D---E\n\n```\n\n## 6. Separation edges and separation vertices\n","slug":"高级算法/图论","published":1,"date":"2024-07-10T08:14:31.325Z","updated":"2024-07-12T08:49:14.489Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o26001gzb8a0is7cgv8","content":"<h2 id=\"1-Disconnected-Graph-图形不连通-断开图\">1. Disconnected Graph (图形不连通 / 断开图)</h2>\n<p>English: A graph in which there are at least two vertices such that there is no path connecting them.<br>\n中文: 一个图中至少有两个顶点之间没有路径相连。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A---B         E---F</span><br><span class=\"line\">    |</span><br><span class=\"line\">    C---D</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Bipartite-Graph-二部图-二分图\">2. Bipartite Graph (二部图 / 二分图)</h2>\n<p><code>bipartite ［bipartit］; adj. 二深裂的［指叶子］；由双方组成的，两党的，由两党组成的.</code></p>\n<p>English: A graph whose vertices can be divided into two disjoint and independent sets such that every edge connects a vertex in one set to a vertex in the other set.<br>\n中文: 将顶点分成两类，边只存在不同类的顶点之间，同类顶点之间没有边。</p>\n<p><strong>应用：</strong></p>\n<p>二部图在许多领域的应用中非常常见，包括：</p>\n<ul>\n<li>\n<p>最大匹配问题：寻找图中不存在共用顶点的最大边集。</p>\n</li>\n<li>\n<p>婚姻问题：将 n 位女士与 n 位男士配对，使得每位女士都嫁给一位男士，每位男士都娶一位女士。</p>\n</li>\n<li>\n<p>流量网络：表示商品在网络中从源点到汇点的流动。</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set 1: A, C, E</span><br><span class=\"line\">Set 2: B, D, F</span><br><span class=\"line\"></span><br><span class=\"line\">  A--B</span><br><span class=\"line\">   \\/</span><br><span class=\"line\">   /\\</span><br><span class=\"line\">  C--D</span><br><span class=\"line\">   \\/</span><br><span class=\"line\">   /\\</span><br><span class=\"line\">  E--F</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Planar-Graph-平面图\">3. Planar Graph (平面图)</h2>\n<p>English: A graph that can be drawn on a plane without any edges crossing each other.<br>\n中文: 一种图，可以在平面上绘制而<code>不</code>出现任何边<code>交叉</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   A</span><br><span class=\"line\">  / \\</span><br><span class=\"line\"> /   \\</span><br><span class=\"line\">B-----C</span><br><span class=\"line\">|     |</span><br><span class=\"line\">D-----E</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Subgraph-子图\">4. Subgraph (子图)</h2>\n<p>English: A graph formed from a subset of the vertices and edges of another graph.<br>\n中文: 从另一个图的顶点和边的子集中形成的图。（可以没有一些边和点）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Original Graph:</span><br><span class=\"line\">A---B---C</span><br><span class=\"line\">|       |</span><br><span class=\"line\">D---E---F</span><br><span class=\"line\"></span><br><span class=\"line\">Subgraph:</span><br><span class=\"line\">A---B</span><br><span class=\"line\">|  </span><br><span class=\"line\">D---E</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Spanning-Subgraph-生成子图\">5. Spanning Subgraph (生成子图)</h2>\n<p><code>中古高地德語 spān ← 古高地德語 spān (“木屑，削片”) ← 原始日耳曼語 *spēnuz (“碎屑，削片”)。 与古英語 spōn (“木片，碎屑”)同源</code><br>\nEnglish: A subgraph that includes all the vertices of the original graph.<br>\n中文: 包含原图所有顶点的子图。（可以没有一些边，但不能少点）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Original Graph:</span><br><span class=\"line\">A---B</span><br><span class=\"line\">|   |</span><br><span class=\"line\">C---D---E</span><br><span class=\"line\"></span><br><span class=\"line\">Spanning Subgraph:</span><br><span class=\"line\">A---B</span><br><span class=\"line\">|  </span><br><span class=\"line\">C---D---E</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"6-Separation-edges-and-separation-vertices\">6. Separation edges and separation vertices</h2>\n","excerpt":"","more":"<h2 id=\"1-Disconnected-Graph-图形不连通-断开图\">1. Disconnected Graph (图形不连通 / 断开图)</h2>\n<p>English: A graph in which there are at least two vertices such that there is no path connecting them.<br>\n中文: 一个图中至少有两个顶点之间没有路径相连。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A---B         E---F</span><br><span class=\"line\">    |</span><br><span class=\"line\">    C---D</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-Bipartite-Graph-二部图-二分图\">2. Bipartite Graph (二部图 / 二分图)</h2>\n<p><code>bipartite ［bipartit］; adj. 二深裂的［指叶子］；由双方组成的，两党的，由两党组成的.</code></p>\n<p>English: A graph whose vertices can be divided into two disjoint and independent sets such that every edge connects a vertex in one set to a vertex in the other set.<br>\n中文: 将顶点分成两类，边只存在不同类的顶点之间，同类顶点之间没有边。</p>\n<p><strong>应用：</strong></p>\n<p>二部图在许多领域的应用中非常常见，包括：</p>\n<ul>\n<li>\n<p>最大匹配问题：寻找图中不存在共用顶点的最大边集。</p>\n</li>\n<li>\n<p>婚姻问题：将 n 位女士与 n 位男士配对，使得每位女士都嫁给一位男士，每位男士都娶一位女士。</p>\n</li>\n<li>\n<p>流量网络：表示商品在网络中从源点到汇点的流动。</p>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Set 1: A, C, E</span><br><span class=\"line\">Set 2: B, D, F</span><br><span class=\"line\"></span><br><span class=\"line\">  A--B</span><br><span class=\"line\">   \\/</span><br><span class=\"line\">   /\\</span><br><span class=\"line\">  C--D</span><br><span class=\"line\">   \\/</span><br><span class=\"line\">   /\\</span><br><span class=\"line\">  E--F</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-Planar-Graph-平面图\">3. Planar Graph (平面图)</h2>\n<p>English: A graph that can be drawn on a plane without any edges crossing each other.<br>\n中文: 一种图，可以在平面上绘制而<code>不</code>出现任何边<code>交叉</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   A</span><br><span class=\"line\">  / \\</span><br><span class=\"line\"> /   \\</span><br><span class=\"line\">B-----C</span><br><span class=\"line\">|     |</span><br><span class=\"line\">D-----E</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"4-Subgraph-子图\">4. Subgraph (子图)</h2>\n<p>English: A graph formed from a subset of the vertices and edges of another graph.<br>\n中文: 从另一个图的顶点和边的子集中形成的图。（可以没有一些边和点）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Original Graph:</span><br><span class=\"line\">A---B---C</span><br><span class=\"line\">|       |</span><br><span class=\"line\">D---E---F</span><br><span class=\"line\"></span><br><span class=\"line\">Subgraph:</span><br><span class=\"line\">A---B</span><br><span class=\"line\">|  </span><br><span class=\"line\">D---E</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-Spanning-Subgraph-生成子图\">5. Spanning Subgraph (生成子图)</h2>\n<p><code>中古高地德語 spān ← 古高地德語 spān (“木屑，削片”) ← 原始日耳曼語 *spēnuz (“碎屑，削片”)。 与古英語 spōn (“木片，碎屑”)同源</code><br>\nEnglish: A subgraph that includes all the vertices of the original graph.<br>\n中文: 包含原图所有顶点的子图。（可以没有一些边，但不能少点）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Original Graph:</span><br><span class=\"line\">A---B</span><br><span class=\"line\">|   |</span><br><span class=\"line\">C---D---E</span><br><span class=\"line\"></span><br><span class=\"line\">Spanning Subgraph:</span><br><span class=\"line\">A---B</span><br><span class=\"line\">|  </span><br><span class=\"line\">C---D---E</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"6-Separation-edges-and-separation-vertices\">6. Separation edges and separation vertices</h2>\n"},{"_content":"## Stack\n\n### 特点：\n- LIFO（Last In, First Out）：最后进来的元素最先被处理。\n- 常用操作：push（入栈）、pop（出栈）、peek（查看栈顶元素）。\n\n### 性能：\n- 入栈（push）和出栈（pop）：时间复杂度为 O(1)。\n- 空间复杂度：与存储的元素数量成正比，为 O(n)。\n\n### 优势：\n- 操作简单，适用于需要后进先出（LIFO）策略的场景，如函数调用栈、表达式求值等。\n- 内存使用效率高。\n\n### 劣势：\n- 访问非栈顶元素效率低，需要遍历。\n\n## Queue\n\n### 特点：\n- FIFO（First In, First Out）：最先进来的元素最先被处理。\n- 常用操作：enqueue（入队）、dequeue（出队）、peek（查看队首元素）。\n\n### 性能：\n- 入队（enqueue）和出队（dequeue）：时间复杂度为 O(1)（使用链表或循环数组实现时）。\n- 空间复杂度：与存储的元素数量成正比，为 O(n)。\n\n### 优势：\n- 适用于需要先进先出（FIFO）策略的场景，如任务调度、缓冲区管理等。\n- 操作简单，入队和出队操作效率高。\n\n### 劣势：\n- 访问非队首元素效率低，需要遍历。\n\n## PriorityQueue\n\n### 特点：\n- 元素按照优先级顺序进行出队，优先级高的元素先出队。\n- 常用操作：insert（插入元素）、remove（移除元素）、peek（查看优先级最高的元素）。\n\n### 性能：\n- 插入（insert）：时间复杂度为 O(log n)（使用二叉堆实现时）。\n- 删除（remove）：时间复杂度为 O(log n)（删除优先级最高的元素）。\n- 查看优先级最高元素（peek）：时间复杂度为 O(1)。\n\n### 优势：\n- 适用于需要动态管理元素优先级的场景，如任务调度、路径规划（如Dijkstra算法）、事件驱动模拟等。\n- 可以快速获取和删除优先级最高的元素。\n\n### 劣势：\n- 插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。\n- 需要维护优先级，内存开销可能较大。\n\n## 总结\n\n- Stack：适用于需要 LIFO 策略的场景，入栈和出栈操作效率高（O(1)），但访问非栈顶元素效率低。\n- Queue：适用于需要 FIFO 策略的场景，入队和出队操作效率高（O(1)），但访问非队首元素效率低。\n- PriorityQueue：适用于需要根据优先级动态管理元素的场景，可以快速获取和删除优先级最高的元素（O(log n)），但插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。\n","source":"_posts/高级算法/队栈.md","raw":"## Stack\n\n### 特点：\n- LIFO（Last In, First Out）：最后进来的元素最先被处理。\n- 常用操作：push（入栈）、pop（出栈）、peek（查看栈顶元素）。\n\n### 性能：\n- 入栈（push）和出栈（pop）：时间复杂度为 O(1)。\n- 空间复杂度：与存储的元素数量成正比，为 O(n)。\n\n### 优势：\n- 操作简单，适用于需要后进先出（LIFO）策略的场景，如函数调用栈、表达式求值等。\n- 内存使用效率高。\n\n### 劣势：\n- 访问非栈顶元素效率低，需要遍历。\n\n## Queue\n\n### 特点：\n- FIFO（First In, First Out）：最先进来的元素最先被处理。\n- 常用操作：enqueue（入队）、dequeue（出队）、peek（查看队首元素）。\n\n### 性能：\n- 入队（enqueue）和出队（dequeue）：时间复杂度为 O(1)（使用链表或循环数组实现时）。\n- 空间复杂度：与存储的元素数量成正比，为 O(n)。\n\n### 优势：\n- 适用于需要先进先出（FIFO）策略的场景，如任务调度、缓冲区管理等。\n- 操作简单，入队和出队操作效率高。\n\n### 劣势：\n- 访问非队首元素效率低，需要遍历。\n\n## PriorityQueue\n\n### 特点：\n- 元素按照优先级顺序进行出队，优先级高的元素先出队。\n- 常用操作：insert（插入元素）、remove（移除元素）、peek（查看优先级最高的元素）。\n\n### 性能：\n- 插入（insert）：时间复杂度为 O(log n)（使用二叉堆实现时）。\n- 删除（remove）：时间复杂度为 O(log n)（删除优先级最高的元素）。\n- 查看优先级最高元素（peek）：时间复杂度为 O(1)。\n\n### 优势：\n- 适用于需要动态管理元素优先级的场景，如任务调度、路径规划（如Dijkstra算法）、事件驱动模拟等。\n- 可以快速获取和删除优先级最高的元素。\n\n### 劣势：\n- 插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。\n- 需要维护优先级，内存开销可能较大。\n\n## 总结\n\n- Stack：适用于需要 LIFO 策略的场景，入栈和出栈操作效率高（O(1)），但访问非栈顶元素效率低。\n- Queue：适用于需要 FIFO 策略的场景，入队和出队操作效率高（O(1)），但访问非队首元素效率低。\n- PriorityQueue：适用于需要根据优先级动态管理元素的场景，可以快速获取和删除优先级最高的元素（O(log n)），但插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。\n","slug":"高级算法/队栈","published":1,"date":"2024-07-12T08:30:12.525Z","updated":"2024-07-12T08:38:38.483Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o27001hzb8aeyrt6rud","content":"<h2 id=\"Stack\">Stack</h2>\n<h3 id=\"特点：\">特点：</h3>\n<ul>\n<li>LIFO（Last In, First Out）：最后进来的元素最先被处理。</li>\n<li>常用操作：push（入栈）、pop（出栈）、peek（查看栈顶元素）。</li>\n</ul>\n<h3 id=\"性能：\">性能：</h3>\n<ul>\n<li>入栈（push）和出栈（pop）：时间复杂度为 O(1)。</li>\n<li>空间复杂度：与存储的元素数量成正比，为 O(n)。</li>\n</ul>\n<h3 id=\"优势：\">优势：</h3>\n<ul>\n<li>操作简单，适用于需要后进先出（LIFO）策略的场景，如函数调用栈、表达式求值等。</li>\n<li>内存使用效率高。</li>\n</ul>\n<h3 id=\"劣势：\">劣势：</h3>\n<ul>\n<li>访问非栈顶元素效率低，需要遍历。</li>\n</ul>\n<h2 id=\"Queue\">Queue</h2>\n<h3 id=\"特点：-2\">特点：</h3>\n<ul>\n<li>FIFO（First In, First Out）：最先进来的元素最先被处理。</li>\n<li>常用操作：enqueue（入队）、dequeue（出队）、peek（查看队首元素）。</li>\n</ul>\n<h3 id=\"性能：-2\">性能：</h3>\n<ul>\n<li>入队（enqueue）和出队（dequeue）：时间复杂度为 O(1)（使用链表或循环数组实现时）。</li>\n<li>空间复杂度：与存储的元素数量成正比，为 O(n)。</li>\n</ul>\n<h3 id=\"优势：-2\">优势：</h3>\n<ul>\n<li>适用于需要先进先出（FIFO）策略的场景，如任务调度、缓冲区管理等。</li>\n<li>操作简单，入队和出队操作效率高。</li>\n</ul>\n<h3 id=\"劣势：-2\">劣势：</h3>\n<ul>\n<li>访问非队首元素效率低，需要遍历。</li>\n</ul>\n<h2 id=\"PriorityQueue\">PriorityQueue</h2>\n<h3 id=\"特点：-3\">特点：</h3>\n<ul>\n<li>元素按照优先级顺序进行出队，优先级高的元素先出队。</li>\n<li>常用操作：insert（插入元素）、remove（移除元素）、peek（查看优先级最高的元素）。</li>\n</ul>\n<h3 id=\"性能：-3\">性能：</h3>\n<ul>\n<li>插入（insert）：时间复杂度为 O(log n)（使用二叉堆实现时）。</li>\n<li>删除（remove）：时间复杂度为 O(log n)（删除优先级最高的元素）。</li>\n<li>查看优先级最高元素（peek）：时间复杂度为 O(1)。</li>\n</ul>\n<h3 id=\"优势：-3\">优势：</h3>\n<ul>\n<li>适用于需要动态管理元素优先级的场景，如任务调度、路径规划（如Dijkstra算法）、事件驱动模拟等。</li>\n<li>可以快速获取和删除优先级最高的元素。</li>\n</ul>\n<h3 id=\"劣势：-3\">劣势：</h3>\n<ul>\n<li>插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。</li>\n<li>需要维护优先级，内存开销可能较大。</li>\n</ul>\n<h2 id=\"总结\">总结</h2>\n<ul>\n<li>Stack：适用于需要 LIFO 策略的场景，入栈和出栈操作效率高（O(1)），但访问非栈顶元素效率低。</li>\n<li>Queue：适用于需要 FIFO 策略的场景，入队和出队操作效率高（O(1)），但访问非队首元素效率低。</li>\n<li>PriorityQueue：适用于需要根据优先级动态管理元素的场景，可以快速获取和删除优先级最高的元素（O(log n)），但插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。</li>\n</ul>\n","excerpt":"","more":"<h2 id=\"Stack\">Stack</h2>\n<h3 id=\"特点：\">特点：</h3>\n<ul>\n<li>LIFO（Last In, First Out）：最后进来的元素最先被处理。</li>\n<li>常用操作：push（入栈）、pop（出栈）、peek（查看栈顶元素）。</li>\n</ul>\n<h3 id=\"性能：\">性能：</h3>\n<ul>\n<li>入栈（push）和出栈（pop）：时间复杂度为 O(1)。</li>\n<li>空间复杂度：与存储的元素数量成正比，为 O(n)。</li>\n</ul>\n<h3 id=\"优势：\">优势：</h3>\n<ul>\n<li>操作简单，适用于需要后进先出（LIFO）策略的场景，如函数调用栈、表达式求值等。</li>\n<li>内存使用效率高。</li>\n</ul>\n<h3 id=\"劣势：\">劣势：</h3>\n<ul>\n<li>访问非栈顶元素效率低，需要遍历。</li>\n</ul>\n<h2 id=\"Queue\">Queue</h2>\n<h3 id=\"特点：-2\">特点：</h3>\n<ul>\n<li>FIFO（First In, First Out）：最先进来的元素最先被处理。</li>\n<li>常用操作：enqueue（入队）、dequeue（出队）、peek（查看队首元素）。</li>\n</ul>\n<h3 id=\"性能：-2\">性能：</h3>\n<ul>\n<li>入队（enqueue）和出队（dequeue）：时间复杂度为 O(1)（使用链表或循环数组实现时）。</li>\n<li>空间复杂度：与存储的元素数量成正比，为 O(n)。</li>\n</ul>\n<h3 id=\"优势：-2\">优势：</h3>\n<ul>\n<li>适用于需要先进先出（FIFO）策略的场景，如任务调度、缓冲区管理等。</li>\n<li>操作简单，入队和出队操作效率高。</li>\n</ul>\n<h3 id=\"劣势：-2\">劣势：</h3>\n<ul>\n<li>访问非队首元素效率低，需要遍历。</li>\n</ul>\n<h2 id=\"PriorityQueue\">PriorityQueue</h2>\n<h3 id=\"特点：-3\">特点：</h3>\n<ul>\n<li>元素按照优先级顺序进行出队，优先级高的元素先出队。</li>\n<li>常用操作：insert（插入元素）、remove（移除元素）、peek（查看优先级最高的元素）。</li>\n</ul>\n<h3 id=\"性能：-3\">性能：</h3>\n<ul>\n<li>插入（insert）：时间复杂度为 O(log n)（使用二叉堆实现时）。</li>\n<li>删除（remove）：时间复杂度为 O(log n)（删除优先级最高的元素）。</li>\n<li>查看优先级最高元素（peek）：时间复杂度为 O(1)。</li>\n</ul>\n<h3 id=\"优势：-3\">优势：</h3>\n<ul>\n<li>适用于需要动态管理元素优先级的场景，如任务调度、路径规划（如Dijkstra算法）、事件驱动模拟等。</li>\n<li>可以快速获取和删除优先级最高的元素。</li>\n</ul>\n<h3 id=\"劣势：-3\">劣势：</h3>\n<ul>\n<li>插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。</li>\n<li>需要维护优先级，内存开销可能较大。</li>\n</ul>\n<h2 id=\"总结\">总结</h2>\n<ul>\n<li>Stack：适用于需要 LIFO 策略的场景，入栈和出栈操作效率高（O(1)），但访问非栈顶元素效率低。</li>\n<li>Queue：适用于需要 FIFO 策略的场景，入队和出队操作效率高（O(1)），但访问非队首元素效率低。</li>\n<li>PriorityQueue：适用于需要根据优先级动态管理元素的场景，可以快速获取和删除优先级最高的元素（O(log n)），但插入和删除操作比 Stack 和 Queue 要复杂，时间复杂度较高。</li>\n</ul>\n"},{"title":"高级算法目录","_content":"## 高级算法目录\n```\nGraph Theory (BFS, DFS, Biconnectivity)\nShortest Path (Djikstra, Bellman, DAG, All-pairs)\nPattern Matchings (KMP, Bayers Moore)\n```\n### 1.1. BFS (Breadth-First Search)\n\n广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。\n\n**实现步骤：**\n1. 创建一个空队列 `queue` 和一个空集合 `visited`。\n2. 将起始节点放入队列和访问集合中。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中的节点，将其标记为已访问。\n   - 将所有未访问过的邻居节点加入队列和访问集合。\n\n\n### 1.2. DFS (Depth-First Search)\n\n深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。\n\n**实现步骤：**\n1. 创建一个空集合 `visited` 来记录访问过的节点。\n2. 从起始节点开始调用递归函数 `dfs`：\n   - 将当前节点标记为已访问。\n   - 对于当前节点的每个未访问的邻居节点，递归调用 `dfs` 函数。\n\n## 2. Shortest Path Algorithms\n\n\n### 2.1. Dijkstra\n\nDijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。\n\n**实现步骤：**\n1. 创建一个优先队列 `pq` 和距离字典 `distances`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 将起始节点和距离 0 放入队列。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中距离最小的节点。\n   - 对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。\n\n---\n\n### 2.2. Bellman-Ford\n\nBellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。\n\n**实现步骤：**\n1. 创建距离字典 `distance`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 进行 |V|-1 次迭代，每次迭代遍历所有边：\n   - 对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。\n3. 再次遍历所有边，检查是否存在负权环。\n\n## 3. Pattern Matching Algorithms\n\n\n### 3.1. KMP (Knuth-Morris-Pratt)\n\nKMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。\n\n**实现步骤：**\n1. 构建部分匹配表 `lps`，用于指示在匹配失败时模式串应移动的位置。\n2. 使用两个指针 i 和 j 分别遍历文本和模式串：\n   - 如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。\n   - 如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。\n   - 如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。\n\n\n\n### 3.2. Boyer-Moore\n\nBoyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。\n\n**实现步骤：**\n1. 构建字符到最后出现位置的映射表 `last`。\n2. 使用两个指针 s 和 j 分别遍历文本和模式串：\n   - 从右向左比较模式串和文本，当匹配失败时根据 `last` 表跳过一定的字符。\n   - 如果完全匹配，记录匹配的起始位置并移动 s。\n   - 如果部分匹配但未完全匹配，根据 `last` 表调整 j 的位置。\n\n这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。\n","source":"_posts/高级算法/高级算法目录.md","raw":"---\ntitle: 高级算法目录\n---\n## 高级算法目录\n```\nGraph Theory (BFS, DFS, Biconnectivity)\nShortest Path (Djikstra, Bellman, DAG, All-pairs)\nPattern Matchings (KMP, Bayers Moore)\n```\n### 1.1. BFS (Breadth-First Search)\n\n广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。\n\n**实现步骤：**\n1. 创建一个空队列 `queue` 和一个空集合 `visited`。\n2. 将起始节点放入队列和访问集合中。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中的节点，将其标记为已访问。\n   - 将所有未访问过的邻居节点加入队列和访问集合。\n\n\n### 1.2. DFS (Depth-First Search)\n\n深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。\n\n**实现步骤：**\n1. 创建一个空集合 `visited` 来记录访问过的节点。\n2. 从起始节点开始调用递归函数 `dfs`：\n   - 将当前节点标记为已访问。\n   - 对于当前节点的每个未访问的邻居节点，递归调用 `dfs` 函数。\n\n## 2. Shortest Path Algorithms\n\n\n### 2.1. Dijkstra\n\nDijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。\n\n**实现步骤：**\n1. 创建一个优先队列 `pq` 和距离字典 `distances`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 将起始节点和距离 0 放入队列。\n3. 当队列不为空时，重复以下步骤：\n   - 弹出队列中距离最小的节点。\n   - 对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。\n\n---\n\n### 2.2. Bellman-Ford\n\nBellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。\n\n**实现步骤：**\n1. 创建距离字典 `distance`，初始化起始节点的距离为 0，其余节点为无穷大。\n2. 进行 |V|-1 次迭代，每次迭代遍历所有边：\n   - 对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。\n3. 再次遍历所有边，检查是否存在负权环。\n\n## 3. Pattern Matching Algorithms\n\n\n### 3.1. KMP (Knuth-Morris-Pratt)\n\nKMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。\n\n**实现步骤：**\n1. 构建部分匹配表 `lps`，用于指示在匹配失败时模式串应移动的位置。\n2. 使用两个指针 i 和 j 分别遍历文本和模式串：\n   - 如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。\n   - 如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。\n   - 如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。\n\n\n\n### 3.2. Boyer-Moore\n\nBoyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。\n\n**实现步骤：**\n1. 构建字符到最后出现位置的映射表 `last`。\n2. 使用两个指针 s 和 j 分别遍历文本和模式串：\n   - 从右向左比较模式串和文本，当匹配失败时根据 `last` 表跳过一定的字符。\n   - 如果完全匹配，记录匹配的起始位置并移动 s。\n   - 如果部分匹配但未完全匹配，根据 `last` 表调整 j 的位置。\n\n这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。\n","slug":"高级算法/高级算法目录","published":1,"date":"2024-07-10T10:07:16.811Z","updated":"2024-07-10T10:08:51.419Z","comments":1,"layout":"post","photos":[],"_id":"clysk9o28001izb8ab905au6h","content":"<h2 id=\"高级算法目录\">高级算法目录</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Graph Theory (BFS, DFS, Biconnectivity)</span><br><span class=\"line\">Shortest Path (Djikstra, Bellman, DAG, All-pairs)</span><br><span class=\"line\">Pattern Matchings (KMP, Bayers Moore)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-1-BFS-Breadth-First-Search\">1.1. BFS (Breadth-First Search)</h3>\n<p>广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空队列 <code>queue</code> 和一个空集合 <code>visited</code>。</li>\n<li>将起始节点放入队列和访问集合中。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中的节点，将其标记为已访问。</li>\n<li>将所有未访问过的邻居节点加入队列和访问集合。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-DFS-Depth-First-Search\">1.2. DFS (Depth-First Search)</h3>\n<p>深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空集合 <code>visited</code> 来记录访问过的节点。</li>\n<li>从起始节点开始调用递归函数 <code>dfs</code>：\n<ul>\n<li>将当前节点标记为已访问。</li>\n<li>对于当前节点的每个未访问的邻居节点，递归调用 <code>dfs</code> 函数。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-Shortest-Path-Algorithms\">2. Shortest Path Algorithms</h2>\n<h3 id=\"2-1-Dijkstra\">2.1. Dijkstra</h3>\n<p>Dijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个优先队列 <code>pq</code> 和距离字典 <code>distances</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>将起始节点和距离 0 放入队列。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中距离最小的节点。</li>\n<li>对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"2-2-Bellman-Ford\">2.2. Bellman-Ford</h3>\n<p>Bellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建距离字典 <code>distance</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>进行 |V|-1 次迭代，每次迭代遍历所有边：\n<ul>\n<li>对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。</li>\n</ul>\n</li>\n<li>再次遍历所有边，检查是否存在负权环。</li>\n</ol>\n<h2 id=\"3-Pattern-Matching-Algorithms\">3. Pattern Matching Algorithms</h2>\n<h3 id=\"3-1-KMP-Knuth-Morris-Pratt\">3.1. KMP (Knuth-Morris-Pratt)</h3>\n<p>KMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建部分匹配表 <code>lps</code>，用于指示在匹配失败时模式串应移动的位置。</li>\n<li>使用两个指针 i 和 j 分别遍历文本和模式串：\n<ul>\n<li>如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。</li>\n<li>如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。</li>\n<li>如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-2-Boyer-Moore\">3.2. Boyer-Moore</h3>\n<p>Boyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建字符到最后出现位置的映射表 <code>last</code>。</li>\n<li>使用两个指针 s 和 j 分别遍历文本和模式串：\n<ul>\n<li>从右向左比较模式串和文本，当匹配失败时根据 <code>last</code> 表跳过一定的字符。</li>\n<li>如果完全匹配，记录匹配的起始位置并移动 s。</li>\n<li>如果部分匹配但未完全匹配，根据 <code>last</code> 表调整 j 的位置。</li>\n</ul>\n</li>\n</ol>\n<p>这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。</p>\n","excerpt":"","more":"<h2 id=\"高级算法目录\">高级算法目录</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Graph Theory (BFS, DFS, Biconnectivity)</span><br><span class=\"line\">Shortest Path (Djikstra, Bellman, DAG, All-pairs)</span><br><span class=\"line\">Pattern Matchings (KMP, Bayers Moore)</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-1-BFS-Breadth-First-Search\">1.1. BFS (Breadth-First Search)</h3>\n<p>广度优先搜索（BFS）是一种图搜索算法，从起始节点开始，逐层向外扩展，访问所有相邻节点。BFS 使用队列来跟踪要访问的节点顺序，适用于寻找最短路径（在无权图中）和检测图的连通性。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空队列 <code>queue</code> 和一个空集合 <code>visited</code>。</li>\n<li>将起始节点放入队列和访问集合中。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中的节点，将其标记为已访问。</li>\n<li>将所有未访问过的邻居节点加入队列和访问集合。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-2-DFS-Depth-First-Search\">1.2. DFS (Depth-First Search)</h3>\n<p>深度优先搜索（DFS）是一种图搜索算法，从起始节点开始，沿着一个分支深入，直到不能继续为止，然后回溯并继续搜索未访问的节点。DFS 使用栈来实现递归，适用于检测环、拓扑排序等。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个空集合 <code>visited</code> 来记录访问过的节点。</li>\n<li>从起始节点开始调用递归函数 <code>dfs</code>：\n<ul>\n<li>将当前节点标记为已访问。</li>\n<li>对于当前节点的每个未访问的邻居节点，递归调用 <code>dfs</code> 函数。</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-Shortest-Path-Algorithms\">2. Shortest Path Algorithms</h2>\n<h3 id=\"2-1-Dijkstra\">2.1. Dijkstra</h3>\n<p>Dijkstra 算法用于计算单源最短路径，适用于边权重非负的图。它使用优先队列来选择当前最短路径的节点，逐步更新其邻居的最短路径。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建一个优先队列 <code>pq</code> 和距离字典 <code>distances</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>将起始节点和距离 0 放入队列。</li>\n<li>当队列不为空时，重复以下步骤：\n<ul>\n<li>弹出队列中距离最小的节点。</li>\n<li>对于该节点的每个邻居节点，如果通过当前节点到达该邻居节点的路径距离更短，则更新距离并将其加入队列。</li>\n</ul>\n</li>\n</ol>\n<hr>\n<h3 id=\"2-2-Bellman-Ford\">2.2. Bellman-Ford</h3>\n<p>Bellman-Ford 算法用于计算单源最短路径，适用于包含负权边的图。它通过反复松弛所有边，更新最短路径，最多进行 |V|-1 次迭代。它还能检测负权环。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>创建距离字典 <code>distance</code>，初始化起始节点的距离为 0，其余节点为无穷大。</li>\n<li>进行 |V|-1 次迭代，每次迭代遍历所有边：\n<ul>\n<li>对于每条边 (u, v) 权重为 w，如果通过节点 u 到节点 v 的路径距离更短，则更新距离。</li>\n</ul>\n</li>\n<li>再次遍历所有边，检查是否存在负权环。</li>\n</ol>\n<h2 id=\"3-Pattern-Matching-Algorithms\">3. Pattern Matching Algorithms</h2>\n<h3 id=\"3-1-KMP-Knuth-Morris-Pratt\">3.1. KMP (Knuth-Morris-Pratt)</h3>\n<p>KMP 算法用于字符串模式匹配，通过预处理模式串构建部分匹配表，从而在匹配过程中避免重复扫描文本。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建部分匹配表 <code>lps</code>，用于指示在匹配失败时模式串应移动的位置。</li>\n<li>使用两个指针 i 和 j 分别遍历文本和模式串：\n<ul>\n<li>如果匹配成功（text[i] == pattern[j]），则同时向前移动 i 和 j。</li>\n<li>如果 j 达到模式串末尾，说明找到了匹配，记录匹配的起始位置。</li>\n<li>如果匹配失败（text[i] != pattern[j]），根据部分匹配表移动模式串的位置 j。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"3-2-Boyer-Moore\">3.2. Boyer-Moore</h3>\n<p>Boyer-Moore 算法是另一种字符串模式匹配算法，通过从右向左匹配和使用跳跃表显著减少比较次数，提高匹配效率。</p>\n<p><strong>实现步骤：</strong></p>\n<ol>\n<li>构建字符到最后出现位置的映射表 <code>last</code>。</li>\n<li>使用两个指针 s 和 j 分别遍历文本和模式串：\n<ul>\n<li>从右向左比较模式串和文本，当匹配失败时根据 <code>last</code> 表跳过一定的字符。</li>\n<li>如果完全匹配，记录匹配的起始位置并移动 s。</li>\n<li>如果部分匹配但未完全匹配，根据 <code>last</code> 表调整 j 的位置。</li>\n</ul>\n</li>\n</ol>\n<p>这些算法在图论、路径查找和字符串模式匹配领域中具有重要应用，能够有效解决各种复杂问题。</p>\n"},{"_content":"\n\n\n### 1、前置声明\nansible部署在node008主机，\n因出于安全考虑，密码文件外挂到宿主机node008，并非存放在本地，故有可能出现'/etc/ansible/script'空目录的情况\n\n\n### 2、脚本路径\n/etc/ansible/script/bussinessplatform\n\n\n### 3、执行说明\n```shell\n\ncd /etc/ansible/script/bussinessplatform\nsent_mhbj_program_file_to_node.yaml\nsent_mhga_program_file_to_node.yaml\nsent_mhwz_program_file_to_node.yaml\nsent_papsystem_internet_program_file_to_node.yaml\n\n# 举例：发送民航便捷的程序包到节点对应路径，执行以下命令\nansible-playbook sent_mhbj_program_file_to_node.yaml\n```\n\n\n","source":"_posts/07中间件/A.运维工具/2.Ansible分发开发程序.md","raw":"\n\n\n### 1、前置声明\nansible部署在node008主机，\n因出于安全考虑，密码文件外挂到宿主机node008，并非存放在本地，故有可能出现'/etc/ansible/script'空目录的情况\n\n\n### 2、脚本路径\n/etc/ansible/script/bussinessplatform\n\n\n### 3、执行说明\n```shell\n\ncd /etc/ansible/script/bussinessplatform\nsent_mhbj_program_file_to_node.yaml\nsent_mhga_program_file_to_node.yaml\nsent_mhwz_program_file_to_node.yaml\nsent_papsystem_internet_program_file_to_node.yaml\n\n# 举例：发送民航便捷的程序包到节点对应路径，执行以下命令\nansible-playbook sent_mhbj_program_file_to_node.yaml\n```\n\n\n","slug":"07中间件/A.运维工具/2.Ansible分发开发程序","published":1,"date":"2023-09-01T13:06:37.750Z","updated":"2023-08-29T12:53:50.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o28001jzb8a8nxxhxp2","content":"<h3 id=\"1、前置声明\">1、前置声明</h3>\n<p>ansible部署在node008主机，<br>\n因出于安全考虑，密码文件外挂到宿主机node008，并非存放在本地，故有可能出现’/etc/ansible/script’空目录的情况</p>\n<h3 id=\"2、脚本路径\">2、脚本路径</h3>\n<p>/etc/ansible/script/bussinessplatform</p>\n<h3 id=\"3、执行说明\">3、执行说明</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cd /etc/ansible/script/bussinessplatform</span><br><span class=\"line\">sent_mhbj_program_file_to_node.yaml</span><br><span class=\"line\">sent_mhga_program_file_to_node.yaml</span><br><span class=\"line\">sent_mhwz_program_file_to_node.yaml</span><br><span class=\"line\">sent_papsystem_internet_program_file_to_node.yaml</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">举例：发送民航便捷的程序包到节点对应路径，执行以下命令</span></span><br><span class=\"line\">ansible-playbook sent_mhbj_program_file_to_node.yaml</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"1、前置声明\">1、前置声明</h3>\n<p>ansible部署在node008主机，<br>\n因出于安全考虑，密码文件外挂到宿主机node008，并非存放在本地，故有可能出现’/etc/ansible/script’空目录的情况</p>\n<h3 id=\"2、脚本路径\">2、脚本路径</h3>\n<p>/etc/ansible/script/bussinessplatform</p>\n<h3 id=\"3、执行说明\">3、执行说明</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">cd /etc/ansible/script/bussinessplatform</span><br><span class=\"line\">sent_mhbj_program_file_to_node.yaml</span><br><span class=\"line\">sent_mhga_program_file_to_node.yaml</span><br><span class=\"line\">sent_mhwz_program_file_to_node.yaml</span><br><span class=\"line\">sent_papsystem_internet_program_file_to_node.yaml</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">举例：发送民航便捷的程序包到节点对应路径，执行以下命令</span></span><br><span class=\"line\">ansible-playbook sent_mhbj_program_file_to_node.yaml</span><br></pre></td></tr></table></figure>\n"},{"_content":"# Ansible安装配置\n\n## Ansible安装\n\n### 1. yum源安装\n\n基于centos7.9和默认Python2.7安装。\n\n```shell\nyum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n### 2. 验证ansible安装结果\n\n查看版本\n\n```shell\n[root@localhost ansible]# ansible --version\nansible 2.9.27\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n查看/etc/ansible/路径下配置文件\n\n```shell\n[root@localhost ansible]# ll /etc/ansible/\ntotal 28\n-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg\n-rw-r--r--. 1 root root  1219 May 23 04:32 hosts\ndrwxr-xr-x. 2 root root     6 Jan 15  2022 roles\n```\n\n### 3. 编辑host文件\n\n在`/etc/ansible/hosts`文件里面，添加三台测试机器的用户信息。\n\n当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。\n\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***'\n```\n\n### 4. 编辑playbook sample\n\n在`/etc/ansible/`路径下添加`test.yml`文件如下，`hosts: kubernetes`表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。\n\n命令含义：将字符串`kongkong`输出到`/etc/kongkong.txt`文件中\n\n```shell\n- hosts: kubernetes\n  gather_facts: No\n  tasks:\n  - name: echo test data to file\n    shell: echo kongkong >> /etc/kongkong.txt\n```\n\n### 5. 执行测试\n\n查看执行结果`ok=1    changed=1`表示执行成功，update1个。\n\n```shell\n[root@localhost ansible]# ansible-playbook test.yml\n\nPLAY [kubernetes] ****************************************************************************************************\n\nTASK [find file] *****************************************************************************************************\nchanged: [192.168.132.131]\nchanged: [192.168.132.130]\nchanged: [192.168.132.129]\n\nPLAY RECAP ***********************************************************************************************************\n192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n\n### 6. 验证测试结果\n\n到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。\n\n```shell\n[root@localhost ~]# cat /etc/kongkong.txt\nkongkong\n```\n\n## Ansible配置\n### 1. 主机分组\n\n- hosts文件\n\n```shell\n[master]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=1\n\n[node1]\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=2\n\n[node2]\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=3\n\n[kubernetes:children]\nmaster\nnode1\nnode2\n```\n\n\n\n","source":"_posts/07中间件/A.运维工具/2.Ansible安装配置.md","raw":"# Ansible安装配置\n\n## Ansible安装\n\n### 1. yum源安装\n\n基于centos7.9和默认Python2.7安装。\n\n```shell\nyum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\n\n\n\n\n\n\n\n\n\n\n\n\n```\n\n\n\n### 2. 验证ansible安装结果\n\n查看版本\n\n```shell\n[root@localhost ansible]# ansible --version\nansible 2.9.27\n  config file = /etc/ansible/ansible.cfg\n  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python2.7/site-packages/ansible\n  executable location = /usr/bin/ansible\n  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]\n```\n\n查看/etc/ansible/路径下配置文件\n\n```shell\n[root@localhost ansible]# ll /etc/ansible/\ntotal 28\n-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg\n-rw-r--r--. 1 root root  1219 May 23 04:32 hosts\ndrwxr-xr-x. 2 root root     6 Jan 15  2022 roles\n```\n\n### 3. 编辑host文件\n\n在`/etc/ansible/hosts`文件里面，添加三台测试机器的用户信息。\n\n当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。\n\n```shell\n[kubernetes]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='***'\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='***'\n```\n\n### 4. 编辑playbook sample\n\n在`/etc/ansible/`路径下添加`test.yml`文件如下，`hosts: kubernetes`表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。\n\n命令含义：将字符串`kongkong`输出到`/etc/kongkong.txt`文件中\n\n```shell\n- hosts: kubernetes\n  gather_facts: No\n  tasks:\n  - name: echo test data to file\n    shell: echo kongkong >> /etc/kongkong.txt\n```\n\n### 5. 执行测试\n\n查看执行结果`ok=1    changed=1`表示执行成功，update1个。\n\n```shell\n[root@localhost ansible]# ansible-playbook test.yml\n\nPLAY [kubernetes] ****************************************************************************************************\n\nTASK [find file] *****************************************************************************************************\nchanged: [192.168.132.131]\nchanged: [192.168.132.130]\nchanged: [192.168.132.129]\n\nPLAY RECAP ***********************************************************************************************************\n192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\n```\n\n### 6. 验证测试结果\n\n到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。\n\n```shell\n[root@localhost ~]# cat /etc/kongkong.txt\nkongkong\n```\n\n## Ansible配置\n### 1. 主机分组\n\n- hosts文件\n\n```shell\n[master]\n192.168.132.129 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=1\n\n[node1]\n192.168.132.130 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=2\n\n[node2]\n192.168.132.131 ansible_ssh_user=root ansible_ssh_pass='idszt' zk_myid=3\n\n[kubernetes:children]\nmaster\nnode1\nnode2\n```\n\n\n\n","slug":"07中间件/A.运维工具/2.Ansible安装配置","published":1,"date":"2023-09-01T13:06:37.750Z","updated":"2023-08-15T11:24:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o29001kzb8a1eqpdkce","content":"<h1>Ansible安装配置</h1>\n<h2 id=\"Ansible安装\">Ansible安装</h2>\n<h3 id=\"1-yum源安装\">1. yum源安装</h3>\n<p>基于centos7.9和默认Python2.7安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-验证ansible安装结果\">2. 验证ansible安装结果</h3>\n<p>查看版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible --version</span><br><span class=\"line\">ansible 2.9.27</span><br><span class=\"line\">  config file = /etc/ansible/ansible.cfg</span><br><span class=\"line\">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class=\"line\">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class=\"line\">  executable location = /usr/bin/ansible</span><br><span class=\"line\">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure>\n<p>查看/etc/ansible/路径下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ll /etc/ansible/</span><br><span class=\"line\">total 28</span><br><span class=\"line\">-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg</span><br><span class=\"line\">-rw-r--r--. 1 root root  1219 May 23 04:32 hosts</span><br><span class=\"line\">drwxr-xr-x. 2 root root     6 Jan 15  2022 roles</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-编辑host文件\">3. 编辑host文件</h3>\n<p>在<code>/etc/ansible/hosts</code>文件里面，添加三台测试机器的用户信息。</p>\n<p>当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-编辑playbook-sample\">4. 编辑playbook sample</h3>\n<p>在<code>/etc/ansible/</code>路径下添加<code>test.yml</code>文件如下，<code>hosts: kubernetes</code>表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。</p>\n<p>命令含义：将字符串<code>kongkong</code>输出到<code>/etc/kongkong.txt</code>文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  gather_facts: No</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: echo test data to file</span><br><span class=\"line\">    shell: echo kongkong &gt;&gt; /etc/kongkong.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-执行测试\">5. 执行测试</h3>\n<p>查看执行结果<code>ok=1    changed=1</code>表示执行成功，update1个。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible-playbook test.yml</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY [kubernetes] ****************************************************************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">TASK [find file] *****************************************************************************************************</span><br><span class=\"line\">changed: [192.168.132.131]</span><br><span class=\"line\">changed: [192.168.132.130]</span><br><span class=\"line\">changed: [192.168.132.129]</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY RECAP ***********************************************************************************************************</span><br><span class=\"line\">192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证测试结果\">6. 验证测试结果</h3>\n<p>到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/kongkong.txt</span><br><span class=\"line\">kongkong</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ansible配置\">Ansible配置</h2>\n<h3 id=\"1-主机分组\">1. 主机分组</h3>\n<ul>\n<li>hosts文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[master]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=1</span><br><span class=\"line\"></span><br><span class=\"line\">[node1]</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=2</span><br><span class=\"line\"></span><br><span class=\"line\">[node2]</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=3</span><br><span class=\"line\"></span><br><span class=\"line\">[kubernetes:children]</span><br><span class=\"line\">master</span><br><span class=\"line\">node1</span><br><span class=\"line\">node2</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1>Ansible安装配置</h1>\n<h2 id=\"Ansible安装\">Ansible安装</h2>\n<h3 id=\"1-yum源安装\">1. yum源安装</h3>\n<p>基于centos7.9和默认Python2.7安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-验证ansible安装结果\">2. 验证ansible安装结果</h3>\n<p>查看版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible --version</span><br><span class=\"line\">ansible 2.9.27</span><br><span class=\"line\">  config file = /etc/ansible/ansible.cfg</span><br><span class=\"line\">  configured module search path = [u&#x27;/root/.ansible/plugins/modules&#x27;, u&#x27;/usr/share/ansible/plugins/modules&#x27;]</span><br><span class=\"line\">  ansible python module location = /usr/lib/python2.7/site-packages/ansible</span><br><span class=\"line\">  executable location = /usr/bin/ansible</span><br><span class=\"line\">  python version = 2.7.5 (default, Oct 14 2020, 14:45:30) [GCC 4.8.5 20150623 (Red Hat 4.8.5-44)]</span><br></pre></td></tr></table></figure>\n<p>查看/etc/ansible/路径下配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ll /etc/ansible/</span><br><span class=\"line\">total 28</span><br><span class=\"line\">-rw-r--r--. 1 root root 19983 May 23 04:53 ansible.cfg</span><br><span class=\"line\">-rw-r--r--. 1 root root  1219 May 23 04:32 hosts</span><br><span class=\"line\">drwxr-xr-x. 2 root root     6 Jan 15  2022 roles</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-编辑host文件\">3. 编辑host文件</h3>\n<p>在<code>/etc/ansible/hosts</code>文件里面，添加三台测试机器的用户信息。</p>\n<p>当然，此方式不安全，大家都知道。更安全的是配置私钥连接或者将密码加密。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[kubernetes]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;***&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-编辑playbook-sample\">4. 编辑playbook sample</h3>\n<p>在<code>/etc/ansible/</code>路径下添加<code>test.yml</code>文件如下，<code>hosts: kubernetes</code>表示对应的[3. 编辑host文件]谈到的服务器组。tasks则是执行任务，name遵守开发命名规范即可。</p>\n<p>命令含义：将字符串<code>kongkong</code>输出到<code>/etc/kongkong.txt</code>文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- hosts: kubernetes</span><br><span class=\"line\">  gather_facts: No</span><br><span class=\"line\">  tasks:</span><br><span class=\"line\">  - name: echo test data to file</span><br><span class=\"line\">    shell: echo kongkong &gt;&gt; /etc/kongkong.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-执行测试\">5. 执行测试</h3>\n<p>查看执行结果<code>ok=1    changed=1</code>表示执行成功，update1个。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ansible]# ansible-playbook test.yml</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY [kubernetes] ****************************************************************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">TASK [find file] *****************************************************************************************************</span><br><span class=\"line\">changed: [192.168.132.131]</span><br><span class=\"line\">changed: [192.168.132.130]</span><br><span class=\"line\">changed: [192.168.132.129]</span><br><span class=\"line\"></span><br><span class=\"line\">PLAY RECAP ***********************************************************************************************************</span><br><span class=\"line\">192.168.132.129            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.130            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br><span class=\"line\">192.168.132.131            : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-验证测试结果\">6. 验证测试结果</h3>\n<p>到192.168.132.[129-130]任意一台机器，查看如下结果，表示成功。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]# cat /etc/kongkong.txt</span><br><span class=\"line\">kongkong</span><br></pre></td></tr></table></figure>\n<h2 id=\"Ansible配置\">Ansible配置</h2>\n<h3 id=\"1-主机分组\">1. 主机分组</h3>\n<ul>\n<li>hosts文件</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[master]</span><br><span class=\"line\">192.168.132.129 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=1</span><br><span class=\"line\"></span><br><span class=\"line\">[node1]</span><br><span class=\"line\">192.168.132.130 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=2</span><br><span class=\"line\"></span><br><span class=\"line\">[node2]</span><br><span class=\"line\">192.168.132.131 ansible_ssh_user=root ansible_ssh_pass=&#x27;idszt&#x27; zk_myid=3</span><br><span class=\"line\"></span><br><span class=\"line\">[kubernetes:children]</span><br><span class=\"line\">master</span><br><span class=\"line\">node1</span><br><span class=\"line\">node2</span><br></pre></td></tr></table></figure>\n"},{"_content":"### 前置准备\n上传文件夹到root目录\nscp -r /root/openssh_fix root@10.128.136.138:/root/\n\n\n### 1、安装telnet/telnet-server\n\n```shell\n#下载telnet\n#yum -y install telnet telnet-server --downloadonly --downloaddir=/root/telnet\n\n# 安装telnet-server\ncd /root/openssh_fix/telnet\nyum localinstall *.rpm -y\n\n# 启动并设置开机自启动\nsystemctl start telnet.socket && systemctl enable telnet.socket\nsystemctl status telnet.socket \n\nnetstat -ntlp |grep 23\n```\n\n### 2、放开防火墙\n```shell\n# 防火墙放行23端口\nfirewall-cmd --zone=public --add-port=23/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --list-all\n\n### 验证telnet，确认可连接\ntelnet 10.128.136.138\n```\n\n### 3、安装依赖\n\n```shell\n#下载编译依赖包\n# yum install -y gcc gcc-c++ glibc make automake autoconf zlib zlib-devel pcre-devel  perl perl-Test-Simple --downloadonly --downloaddir=/root/telnet --downloadonly --downloaddir=/root/openssh_fix/relypackage\ncd /root/openssh_fix/relypackage\nyum localinstall *.rpm -y\n\n# yum install openssl openssl-devel --downloadonly --downloaddir=/root/ssl\ncd /root/openssh_fix/ssl\nyum localinstall *.rpm -y\n```\n\n### 4、卸载openssh\n```shell\n# 停止openssh服务\nsystemctl stop sshd\n\n# 备份\ncp -a /etc/ssh /etc/ssh.bak\ncp -a /usr/sbin/sshd /usr/sbin/sshd.bak\ncp -a /usr/bin/ssh /usr/bin/ssh.bak\n\n# 卸载\n[root@localhost telnet]# rpm -qa | grep openssh\nopenssh-clients-7.4p1-16.el7.x86_64\nopenssh-7.4p1-16.el7.x86_64\nopenssh-server-7.4p1-16.el7.x86_64\n[root@localhost telnet]# rpm -e `rpm -qa | grep openssh` --nodeps\n[root@localhost telnet]# rpm -qa | grep openssh\n```\n\n### 5、安装openssh\n```shell\ncd /root/openssh_fix/openssh9\ntar -zxvf openssh-9.0p1.tar.gz\ncd openssh-9.0p1\ncat INSTALL\n# 配置编译\n./configure --prefix=/usr/local/openssh --with-ssl-dir=/usr/local/openssl --with-zlib\n# 编译\nmake\n# 安装\nmake install\n\n# 检查旧版本启动文件\nls /usr/lib/systemd/system/ssh*\nrm -f /usr/lib/systemd/system/ssh*\n\n# 拷贝启动脚本\ncp contrib/redhat/sshd.init /etc/init.d/sshd\n\n# 建立软连接\nln -s /usr/local/openssh/etc /etc/ssh\nln -s /usr/local/openssh/sbin/sshd /usr/sbin/\nln -s /usr/local/openssh/bin/* /usr/bin/\n\n# 启动并设置开机自启动\nsystemctl daemon-reload\nsystemctl start sshd && systemctl enable sshd\n\n# 查看状态，已经是 running 状态了\nsystemctl status sshd\n# 确认版本\nssh -V\n```\n\n### 6、修改openssh配置\n```shell\nvi /usr/local/openssh/etc/sshd_config\n\nPermitRootLogin yes\n\n# 重启\nsystemctl restart sshd \n```\n\n### 7、停止telnet服务\n```shell\nsystemctl stop telnet.socket\nsystemctl disable telnet.socket\n\n```\n\n\n### NTP服务设置\n\n\n\n\n\n参考：https://zhuanlan.zhihu.com/p/553027729?utm_id=0\n\nyum -y install kernel-headers --downloadonly --downloaddir=/root/kernel-headers\n\nyum -y install ntp --downloadonly --downloaddir=/root/ntp\n\nyum -y install autogen-libopts --downloadonly --downloaddir=/root/ntp ","source":"_posts/07中间件/F.系统加固/openssh升级.md","raw":"### 前置准备\n上传文件夹到root目录\nscp -r /root/openssh_fix root@10.128.136.138:/root/\n\n\n### 1、安装telnet/telnet-server\n\n```shell\n#下载telnet\n#yum -y install telnet telnet-server --downloadonly --downloaddir=/root/telnet\n\n# 安装telnet-server\ncd /root/openssh_fix/telnet\nyum localinstall *.rpm -y\n\n# 启动并设置开机自启动\nsystemctl start telnet.socket && systemctl enable telnet.socket\nsystemctl status telnet.socket \n\nnetstat -ntlp |grep 23\n```\n\n### 2、放开防火墙\n```shell\n# 防火墙放行23端口\nfirewall-cmd --zone=public --add-port=23/tcp --permanent\nfirewall-cmd --reload\nfirewall-cmd --list-all\n\n### 验证telnet，确认可连接\ntelnet 10.128.136.138\n```\n\n### 3、安装依赖\n\n```shell\n#下载编译依赖包\n# yum install -y gcc gcc-c++ glibc make automake autoconf zlib zlib-devel pcre-devel  perl perl-Test-Simple --downloadonly --downloaddir=/root/telnet --downloadonly --downloaddir=/root/openssh_fix/relypackage\ncd /root/openssh_fix/relypackage\nyum localinstall *.rpm -y\n\n# yum install openssl openssl-devel --downloadonly --downloaddir=/root/ssl\ncd /root/openssh_fix/ssl\nyum localinstall *.rpm -y\n```\n\n### 4、卸载openssh\n```shell\n# 停止openssh服务\nsystemctl stop sshd\n\n# 备份\ncp -a /etc/ssh /etc/ssh.bak\ncp -a /usr/sbin/sshd /usr/sbin/sshd.bak\ncp -a /usr/bin/ssh /usr/bin/ssh.bak\n\n# 卸载\n[root@localhost telnet]# rpm -qa | grep openssh\nopenssh-clients-7.4p1-16.el7.x86_64\nopenssh-7.4p1-16.el7.x86_64\nopenssh-server-7.4p1-16.el7.x86_64\n[root@localhost telnet]# rpm -e `rpm -qa | grep openssh` --nodeps\n[root@localhost telnet]# rpm -qa | grep openssh\n```\n\n### 5、安装openssh\n```shell\ncd /root/openssh_fix/openssh9\ntar -zxvf openssh-9.0p1.tar.gz\ncd openssh-9.0p1\ncat INSTALL\n# 配置编译\n./configure --prefix=/usr/local/openssh --with-ssl-dir=/usr/local/openssl --with-zlib\n# 编译\nmake\n# 安装\nmake install\n\n# 检查旧版本启动文件\nls /usr/lib/systemd/system/ssh*\nrm -f /usr/lib/systemd/system/ssh*\n\n# 拷贝启动脚本\ncp contrib/redhat/sshd.init /etc/init.d/sshd\n\n# 建立软连接\nln -s /usr/local/openssh/etc /etc/ssh\nln -s /usr/local/openssh/sbin/sshd /usr/sbin/\nln -s /usr/local/openssh/bin/* /usr/bin/\n\n# 启动并设置开机自启动\nsystemctl daemon-reload\nsystemctl start sshd && systemctl enable sshd\n\n# 查看状态，已经是 running 状态了\nsystemctl status sshd\n# 确认版本\nssh -V\n```\n\n### 6、修改openssh配置\n```shell\nvi /usr/local/openssh/etc/sshd_config\n\nPermitRootLogin yes\n\n# 重启\nsystemctl restart sshd \n```\n\n### 7、停止telnet服务\n```shell\nsystemctl stop telnet.socket\nsystemctl disable telnet.socket\n\n```\n\n\n### NTP服务设置\n\n\n\n\n\n参考：https://zhuanlan.zhihu.com/p/553027729?utm_id=0\n\nyum -y install kernel-headers --downloadonly --downloaddir=/root/kernel-headers\n\nyum -y install ntp --downloadonly --downloaddir=/root/ntp\n\nyum -y install autogen-libopts --downloadonly --downloaddir=/root/ntp ","slug":"07中间件/F.系统加固/openssh升级","published":1,"date":"2023-09-01T13:06:38.230Z","updated":"2023-08-30T08:57:54.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o29001lzb8aftl50336","content":"<h3 id=\"前置准备\">前置准备</h3>\n<p>上传文件夹到root目录<br>\nscp -r /root/openssh_fix <a href=\"mailto:root@10.128.136.138\">root@10.128.136.138</a>:/root/</p>\n<h3 id=\"1、安装telnet-telnet-server\">1、安装telnet/telnet-server</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">下载telnet</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">yum -y install telnet telnet-server --downloadonly --downloaddir=/root/telnet</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装telnet-server</span></span><br><span class=\"line\">cd /root/openssh_fix/telnet</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动并设置开机自启动</span></span><br><span class=\"line\">systemctl start telnet.socket &amp;&amp; systemctl enable telnet.socket</span><br><span class=\"line\">systemctl status telnet.socket </span><br><span class=\"line\"></span><br><span class=\"line\">netstat -ntlp |grep 23</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、放开防火墙\">2、放开防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">防火墙放行23端口</span></span><br><span class=\"line\">firewall-cmd --zone=public --add-port=23/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\">## 验证telnet，确认可连接</span></span></span><br><span class=\"line\">telnet 10.128.136.138</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、安装依赖\">3、安装依赖</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">下载编译依赖包</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">yum install -y gcc gcc-c++ glibc make automake autoconf zlib zlib-devel pcre-devel  perl perl-Test-Simple --downloadonly --downloaddir=/root/telnet --downloadonly --downloaddir=/root/openssh_fix/relypackage</span></span><br><span class=\"line\">cd /root/openssh_fix/relypackage</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">yum install openssl openssl-devel --downloadonly --downloaddir=/root/ssl</span></span><br><span class=\"line\">cd /root/openssh_fix/ssl</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、卸载openssh\">4、卸载openssh</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止openssh服务</span></span><br><span class=\"line\">systemctl stop sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">备份</span></span><br><span class=\"line\">cp -a /etc/ssh /etc/ssh.bak</span><br><span class=\"line\">cp -a /usr/sbin/sshd /usr/sbin/sshd.bak</span><br><span class=\"line\">cp -a /usr/bin/ssh /usr/bin/ssh.bak</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">卸载</span></span><br><span class=\"line\">[root@localhost telnet]# rpm -qa | grep openssh</span><br><span class=\"line\">openssh-clients-7.4p1-16.el7.x86_64</span><br><span class=\"line\">openssh-7.4p1-16.el7.x86_64</span><br><span class=\"line\">openssh-server-7.4p1-16.el7.x86_64</span><br><span class=\"line\">[root@localhost telnet]# rpm -e `rpm -qa | grep openssh` --nodeps</span><br><span class=\"line\">[root@localhost telnet]# rpm -qa | grep openssh</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、安装openssh\">5、安装openssh</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /root/openssh_fix/openssh9</span><br><span class=\"line\">tar -zxvf openssh-9.0p1.tar.gz</span><br><span class=\"line\">cd openssh-9.0p1</span><br><span class=\"line\">cat INSTALL</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">配置编译</span></span><br><span class=\"line\">./configure --prefix=/usr/local/openssh --with-ssl-dir=/usr/local/openssl --with-zlib</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译</span></span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装</span></span><br><span class=\"line\">make install</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">检查旧版本启动文件</span></span><br><span class=\"line\">ls /usr/lib/systemd/system/ssh*</span><br><span class=\"line\">rm -f /usr/lib/systemd/system/ssh*</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">拷贝启动脚本</span></span><br><span class=\"line\">cp contrib/redhat/sshd.init /etc/init.d/sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">建立软连接</span></span><br><span class=\"line\">ln -s /usr/local/openssh/etc /etc/ssh</span><br><span class=\"line\">ln -s /usr/local/openssh/sbin/sshd /usr/sbin/</span><br><span class=\"line\">ln -s /usr/local/openssh/bin/* /usr/bin/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动并设置开机自启动</span></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl start sshd &amp;&amp; systemctl enable sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看状态，已经是 running 状态了</span></span><br><span class=\"line\">systemctl status sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">确认版本</span></span><br><span class=\"line\">ssh -V</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、修改openssh配置\">6、修改openssh配置</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/openssh/etc/sshd_config</span><br><span class=\"line\"></span><br><span class=\"line\">PermitRootLogin yes</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启</span></span><br><span class=\"line\">systemctl restart sshd </span><br></pre></td></tr></table></figure>\n<h3 id=\"7、停止telnet服务\">7、停止telnet服务</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop telnet.socket</span><br><span class=\"line\">systemctl disable telnet.socket</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"NTP服务设置\">NTP服务设置</h3>\n<p>参考：<a href=\"https://zhuanlan.zhihu.com/p/553027729?utm_id=0\">https://zhuanlan.zhihu.com/p/553027729?utm_id=0</a></p>\n<p>yum -y install kernel-headers --downloadonly --downloaddir=/root/kernel-headers</p>\n<p>yum -y install ntp --downloadonly --downloaddir=/root/ntp</p>\n<p>yum -y install autogen-libopts --downloadonly --downloaddir=/root/ntp</p>\n","excerpt":"","more":"<h3 id=\"前置准备\">前置准备</h3>\n<p>上传文件夹到root目录<br>\nscp -r /root/openssh_fix <a href=\"mailto:root@10.128.136.138\">root@10.128.136.138</a>:/root/</p>\n<h3 id=\"1、安装telnet-telnet-server\">1、安装telnet/telnet-server</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">下载telnet</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">yum -y install telnet telnet-server --downloadonly --downloaddir=/root/telnet</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装telnet-server</span></span><br><span class=\"line\">cd /root/openssh_fix/telnet</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动并设置开机自启动</span></span><br><span class=\"line\">systemctl start telnet.socket &amp;&amp; systemctl enable telnet.socket</span><br><span class=\"line\">systemctl status telnet.socket </span><br><span class=\"line\"></span><br><span class=\"line\">netstat -ntlp |grep 23</span><br></pre></td></tr></table></figure>\n<h3 id=\"2、放开防火墙\">2、放开防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">防火墙放行23端口</span></span><br><span class=\"line\">firewall-cmd --zone=public --add-port=23/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\">firewall-cmd --list-all</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\">## 验证telnet，确认可连接</span></span></span><br><span class=\"line\">telnet 10.128.136.138</span><br></pre></td></tr></table></figure>\n<h3 id=\"3、安装依赖\">3、安装依赖</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">下载编译依赖包</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">yum install -y gcc gcc-c++ glibc make automake autoconf zlib zlib-devel pcre-devel  perl perl-Test-Simple --downloadonly --downloaddir=/root/telnet --downloadonly --downloaddir=/root/openssh_fix/relypackage</span></span><br><span class=\"line\">cd /root/openssh_fix/relypackage</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">yum install openssl openssl-devel --downloadonly --downloaddir=/root/ssl</span></span><br><span class=\"line\">cd /root/openssh_fix/ssl</span><br><span class=\"line\">yum localinstall *.rpm -y</span><br></pre></td></tr></table></figure>\n<h3 id=\"4、卸载openssh\">4、卸载openssh</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">停止openssh服务</span></span><br><span class=\"line\">systemctl stop sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">备份</span></span><br><span class=\"line\">cp -a /etc/ssh /etc/ssh.bak</span><br><span class=\"line\">cp -a /usr/sbin/sshd /usr/sbin/sshd.bak</span><br><span class=\"line\">cp -a /usr/bin/ssh /usr/bin/ssh.bak</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">卸载</span></span><br><span class=\"line\">[root@localhost telnet]# rpm -qa | grep openssh</span><br><span class=\"line\">openssh-clients-7.4p1-16.el7.x86_64</span><br><span class=\"line\">openssh-7.4p1-16.el7.x86_64</span><br><span class=\"line\">openssh-server-7.4p1-16.el7.x86_64</span><br><span class=\"line\">[root@localhost telnet]# rpm -e `rpm -qa | grep openssh` --nodeps</span><br><span class=\"line\">[root@localhost telnet]# rpm -qa | grep openssh</span><br></pre></td></tr></table></figure>\n<h3 id=\"5、安装openssh\">5、安装openssh</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /root/openssh_fix/openssh9</span><br><span class=\"line\">tar -zxvf openssh-9.0p1.tar.gz</span><br><span class=\"line\">cd openssh-9.0p1</span><br><span class=\"line\">cat INSTALL</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">配置编译</span></span><br><span class=\"line\">./configure --prefix=/usr/local/openssh --with-ssl-dir=/usr/local/openssl --with-zlib</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">编译</span></span><br><span class=\"line\">make</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">安装</span></span><br><span class=\"line\">make install</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">检查旧版本启动文件</span></span><br><span class=\"line\">ls /usr/lib/systemd/system/ssh*</span><br><span class=\"line\">rm -f /usr/lib/systemd/system/ssh*</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">拷贝启动脚本</span></span><br><span class=\"line\">cp contrib/redhat/sshd.init /etc/init.d/sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">建立软连接</span></span><br><span class=\"line\">ln -s /usr/local/openssh/etc /etc/ssh</span><br><span class=\"line\">ln -s /usr/local/openssh/sbin/sshd /usr/sbin/</span><br><span class=\"line\">ln -s /usr/local/openssh/bin/* /usr/bin/</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">启动并设置开机自启动</span></span><br><span class=\"line\">systemctl daemon-reload</span><br><span class=\"line\">systemctl start sshd &amp;&amp; systemctl enable sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">查看状态，已经是 running 状态了</span></span><br><span class=\"line\">systemctl status sshd</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">确认版本</span></span><br><span class=\"line\">ssh -V</span><br></pre></td></tr></table></figure>\n<h3 id=\"6、修改openssh配置\">6、修改openssh配置</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/openssh/etc/sshd_config</span><br><span class=\"line\"></span><br><span class=\"line\">PermitRootLogin yes</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">重启</span></span><br><span class=\"line\">systemctl restart sshd </span><br></pre></td></tr></table></figure>\n<h3 id=\"7、停止telnet服务\">7、停止telnet服务</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop telnet.socket</span><br><span class=\"line\">systemctl disable telnet.socket</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"NTP服务设置\">NTP服务设置</h3>\n<p>参考：<a href=\"https://zhuanlan.zhihu.com/p/553027729?utm_id=0\">https://zhuanlan.zhihu.com/p/553027729?utm_id=0</a></p>\n<p>yum -y install kernel-headers --downloadonly --downloaddir=/root/kernel-headers</p>\n<p>yum -y install ntp --downloadonly --downloaddir=/root/ntp</p>\n<p>yum -y install autogen-libopts --downloadonly --downloaddir=/root/ntp</p>\n"},{"_content":"\n\n```shell\n[root@idszt-dev ~]# docker start 03fc94c2b9d5\nError response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device\nError: failed to start containers: 03fc94c2b9d5\n```\n\n\n\n```shell\n[root@idszt-dev overlay2]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        99G   72G   23G  76% /\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G  4.0K  7.8G   1% /dev/shm\ntmpfs           7.8G  1.7M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\ntmpfs           1.6G     0  1.6G   0% /run/user/0\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n[root@idszt-dev overlay2]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 6553600       0  100% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     784 2032506    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n\n\n```\n\n\n```shell\n[root@idszt-dev containers]# docker ps -a\nCONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES\n196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               \"/usr/bin/docker-ent…\"   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04\n03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          \"start-kafka.sh\"         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01\n499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   \"/bin/tini -- /usr/l…\"   2 days ago     Up 47 hours                     0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp         dev-es-standalone-01\nc4639ca30b87   nacos/nacos-server:v2.1.1                              \"bin/docker-startup.…\"   2 days ago     Up 2 days                       0.0.0.0:8848->8848/tcp                                 dev-nacos-standalone-01\n859f688f4f88   mysql:8.0.32                                           \"docker-entrypoint.s…\"   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01\nf73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 \"/bin/tini -- /usr/l…\"   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01\nedabda1c3642   zookeeper:3.7.1                                        \"/docker-entrypoint.…\"   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp   dev-zookeeper-standalone-01\n2269262cd40b   redis:7.0.11                                           \"docker-entrypoint.s…\"   7 weeks ago    Up 2 days                       0.0.0.0:6379->6379/tcp                                 dev-redis-standalone-01\nc2c59fff741c   portainer/portainer                                    \"/portainer\"             5 months ago   Up 2 days                       0.0.0.0:9999->9000/tcp                                 portainer\n\n[root@idszt-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done\n/bin\n1\n/boot\n332\n/data\n5956444\n/dev\n369\n/etc\n2469\n/ftpdir\n146\n/ftpdir1\n12\n/ftpoffline\n1\n/home\n28211\n/lib\n1\n/lib64\n1\n/lost+found\n1\n/media\n1\n/mnt\n1\n/opt\n263923\n/proc\n294447\n/root\n3651\n/run\n649\n/sbin\n1\n/srv\n1\n/sys\n30834\n/tmp\n9\n/usr\n136673\n/var\n176741\n\n\n\n[root@idszt-dev jobhandler]# pwd\n/data/applogs/xxl-job/jobhandler\n[root@idszt-dev jobhandler]# for i in /data/applogs/xxl-job/jobhandler/*; do echo $i; find $i |wc -l; done\n/data/applogs/xxl-job/jobhandler/2023-06-15\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-16\n149756\n/data/applogs/xxl-job/jobhandler/2023-06-17\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-18\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-19\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-20\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-21\n149293\n/data/applogs/xxl-job/jobhandler/2023-06-22\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-23\n\n\n[root@idszt-dev jobhandler]# ls\n2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04\n2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog\n2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource\n[root@idszt-dev jobhandler]# rm -rf 2023-06-[15-30]\n[root@idszt-dev jobhandler]# ls\n2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04\n2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog\n2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource\n[root@idszt-dev jobhandler]# rm -rf 2023-06-15\n[root@idszt-dev jobhandler]# rm -rf 2023-06-18\n[root@idszt-dev jobhandler]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 6254107  299493   96% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     649 2032641    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\n[root@idszt-dev jobhandler]# ls 2023-06*\n2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/\n[root@idszt-dev jobhandler]# rm -rf 2023-06-**\n2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/\n[root@idszt-dev jobhandler]# rm -rf 2023-06-**\n[root@idszt-dev jobhandler]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 4224352 2329248   65% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     649 2032641    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\n\n\n\n```","source":"_posts/07中间件/E.异常处理/E.1.Inodes写满.md","raw":"\n\n```shell\n[root@idszt-dev ~]# docker start 03fc94c2b9d5\nError response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device\nError: failed to start containers: 03fc94c2b9d5\n```\n\n\n\n```shell\n[root@idszt-dev overlay2]# df -h\nFilesystem      Size  Used Avail Use% Mounted on\n/dev/vda1        99G   72G   23G  76% /\ndevtmpfs        7.8G     0  7.8G   0% /dev\ntmpfs           7.8G  4.0K  7.8G   1% /dev/shm\ntmpfs           7.8G  1.7M  7.8G   1% /run\ntmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup\ntmpfs           1.6G     0  1.6G   0% /run/user/0\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n[root@idszt-dev overlay2]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 6553600       0  100% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     784 2032506    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged\noverlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged\n\n\n```\n\n\n```shell\n[root@idszt-dev containers]# docker ps -a\nCONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES\n196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               \"/usr/bin/docker-ent…\"   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04\n03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          \"start-kafka.sh\"         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01\n499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   \"/bin/tini -- /usr/l…\"   2 days ago     Up 47 hours                     0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp         dev-es-standalone-01\nc4639ca30b87   nacos/nacos-server:v2.1.1                              \"bin/docker-startup.…\"   2 days ago     Up 2 days                       0.0.0.0:8848->8848/tcp                                 dev-nacos-standalone-01\n859f688f4f88   mysql:8.0.32                                           \"docker-entrypoint.s…\"   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01\nf73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 \"/bin/tini -- /usr/l…\"   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01\nedabda1c3642   zookeeper:3.7.1                                        \"/docker-entrypoint.…\"   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181->2181/tcp, 8080/tcp   dev-zookeeper-standalone-01\n2269262cd40b   redis:7.0.11                                           \"docker-entrypoint.s…\"   7 weeks ago    Up 2 days                       0.0.0.0:6379->6379/tcp                                 dev-redis-standalone-01\nc2c59fff741c   portainer/portainer                                    \"/portainer\"             5 months ago   Up 2 days                       0.0.0.0:9999->9000/tcp                                 portainer\n\n[root@idszt-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done\n/bin\n1\n/boot\n332\n/data\n5956444\n/dev\n369\n/etc\n2469\n/ftpdir\n146\n/ftpdir1\n12\n/ftpoffline\n1\n/home\n28211\n/lib\n1\n/lib64\n1\n/lost+found\n1\n/media\n1\n/mnt\n1\n/opt\n263923\n/proc\n294447\n/root\n3651\n/run\n649\n/sbin\n1\n/srv\n1\n/sys\n30834\n/tmp\n9\n/usr\n136673\n/var\n176741\n\n\n\n[root@idszt-dev jobhandler]# pwd\n/data/applogs/xxl-job/jobhandler\n[root@idszt-dev jobhandler]# for i in /data/applogs/xxl-job/jobhandler/*; do echo $i; find $i |wc -l; done\n/data/applogs/xxl-job/jobhandler/2023-06-15\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-16\n149756\n/data/applogs/xxl-job/jobhandler/2023-06-17\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-18\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-19\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-20\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-21\n149293\n/data/applogs/xxl-job/jobhandler/2023-06-22\n149761\n/data/applogs/xxl-job/jobhandler/2023-06-23\n\n\n[root@idszt-dev jobhandler]# ls\n2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04\n2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog\n2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource\n[root@idszt-dev jobhandler]# rm -rf 2023-06-[15-30]\n[root@idszt-dev jobhandler]# ls\n2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04\n2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog\n2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource\n[root@idszt-dev jobhandler]# rm -rf 2023-06-15\n[root@idszt-dev jobhandler]# rm -rf 2023-06-18\n[root@idszt-dev jobhandler]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 6254107  299493   96% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     649 2032641    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\n[root@idszt-dev jobhandler]# ls 2023-06*\n2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/\n[root@idszt-dev jobhandler]# rm -rf 2023-06-**\n2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/\n[root@idszt-dev jobhandler]# rm -rf 2023-06-**\n[root@idszt-dev jobhandler]# df -i\nFilesystem      Inodes   IUsed   IFree IUse% Mounted on\n/dev/vda1      6553600 4224352 2329248   65% /\ndevtmpfs       2030601     360 2030241    1% /dev\ntmpfs          2033290       3 2033287    1% /dev/shm\ntmpfs          2033290     649 2032641    1% /run\ntmpfs          2033290      16 2033274    1% /sys/fs/cgroup\ntmpfs          2033290       1 2033289    1% /run/user/0\n\n\n\n```","slug":"07中间件/E.异常处理/E.1.Inodes写满","published":1,"date":"2023-09-01T13:06:38.210Z","updated":"2023-08-04T03:46:38.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2a001mzb8ah2ce2qia","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@idszt-dev ~]# docker start 03fc94c2b9d5</span><br><span class=\"line\">Error response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device</span><br><span class=\"line\">Error: failed to start containers: 03fc94c2b9d5</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@idszt-dev overlay2]# df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/vda1        99G   72G   23G  76% /</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G  4.0K  7.8G   1% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  1.7M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\">[root@idszt-dev overlay2]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 6553600       0  100% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     784 2032506    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@idszt-dev containers]# docker ps -a</span><br><span class=\"line\">CONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES</span><br><span class=\"line\">196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               &quot;/usr/bin/docker-ent…&quot;   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04</span><br><span class=\"line\">03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          &quot;start-kafka.sh&quot;         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01</span><br><span class=\"line\">499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   &quot;/bin/tini -- /usr/l…&quot;   2 days ago     Up 47 hours                     0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp         dev-es-standalone-01</span><br><span class=\"line\">c4639ca30b87   nacos/nacos-server:v2.1.1                              &quot;bin/docker-startup.…&quot;   2 days ago     Up 2 days                       0.0.0.0:8848-&gt;8848/tcp                                 dev-nacos-standalone-01</span><br><span class=\"line\">859f688f4f88   mysql:8.0.32                                           &quot;docker-entrypoint.s…&quot;   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01</span><br><span class=\"line\">f73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 &quot;/bin/tini -- /usr/l…&quot;   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01</span><br><span class=\"line\">edabda1c3642   zookeeper:3.7.1                                        &quot;/docker-entrypoint.…&quot;   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 8080/tcp   dev-zookeeper-standalone-01</span><br><span class=\"line\">2269262cd40b   redis:7.0.11                                           &quot;docker-entrypoint.s…&quot;   7 weeks ago    Up 2 days                       0.0.0.0:6379-&gt;6379/tcp                                 dev-redis-standalone-01</span><br><span class=\"line\">c2c59fff741c   portainer/portainer                                    &quot;/portainer&quot;             5 months ago   Up 2 days                       0.0.0.0:9999-&gt;9000/tcp                                 portainer</span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done</span><br><span class=\"line\">/bin</span><br><span class=\"line\">1</span><br><span class=\"line\">/boot</span><br><span class=\"line\">332</span><br><span class=\"line\">/data</span><br><span class=\"line\">5956444</span><br><span class=\"line\">/dev</span><br><span class=\"line\">369</span><br><span class=\"line\">/etc</span><br><span class=\"line\">2469</span><br><span class=\"line\">/ftpdir</span><br><span class=\"line\">146</span><br><span class=\"line\">/ftpdir1</span><br><span class=\"line\">12</span><br><span class=\"line\">/ftpoffline</span><br><span class=\"line\">1</span><br><span class=\"line\">/home</span><br><span class=\"line\">28211</span><br><span class=\"line\">/lib</span><br><span class=\"line\">1</span><br><span class=\"line\">/lib64</span><br><span class=\"line\">1</span><br><span class=\"line\">/lost+found</span><br><span class=\"line\">1</span><br><span class=\"line\">/media</span><br><span class=\"line\">1</span><br><span class=\"line\">/mnt</span><br><span class=\"line\">1</span><br><span class=\"line\">/opt</span><br><span class=\"line\">263923</span><br><span class=\"line\">/proc</span><br><span class=\"line\">294447</span><br><span class=\"line\">/root</span><br><span class=\"line\">3651</span><br><span class=\"line\">/run</span><br><span class=\"line\">649</span><br><span class=\"line\">/sbin</span><br><span class=\"line\">1</span><br><span class=\"line\">/srv</span><br><span class=\"line\">1</span><br><span class=\"line\">/sys</span><br><span class=\"line\">30834</span><br><span class=\"line\">/tmp</span><br><span class=\"line\">9</span><br><span class=\"line\">/usr</span><br><span class=\"line\">136673</span><br><span class=\"line\">/var</span><br><span class=\"line\">176741</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-dev jobhandler]# pwd</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler</span><br><span class=\"line\">[root@idszt-dev jobhandler]# for i in /data/applogs/xxl-job/jobhandler/*; do echo $i; find $i |wc -l; done</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-15</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-16</span><br><span class=\"line\">149756</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-17</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-18</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-19</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-20</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-21</span><br><span class=\"line\">149293</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-22</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-23</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-dev jobhandler]# ls</span><br><span class=\"line\">2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04</span><br><span class=\"line\">2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog</span><br><span class=\"line\">2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-[15-30]</span><br><span class=\"line\">[root@idszt-dev jobhandler]# ls</span><br><span class=\"line\">2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04</span><br><span class=\"line\">2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog</span><br><span class=\"line\">2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-15</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-18</span><br><span class=\"line\">[root@idszt-dev jobhandler]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 6254107  299493   96% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     649 2032641    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\">[root@idszt-dev jobhandler]# ls 2023-06*</span><br><span class=\"line\">2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-**</span><br><span class=\"line\">2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-**</span><br><span class=\"line\">[root@idszt-dev jobhandler]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 4224352 2329248   65% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     649 2032641    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@idszt-dev ~]# docker start 03fc94c2b9d5</span><br><span class=\"line\">Error response from daemon: mkdir /var/lib/docker/overlay2/2409d571b52865348ec99b52e6d3fdca07a2cca7b4cde2be63b6bb264c6adb58/merged: no space left on device</span><br><span class=\"line\">Error: failed to start containers: 03fc94c2b9d5</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@idszt-dev overlay2]# df -h</span><br><span class=\"line\">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class=\"line\">/dev/vda1        99G   72G   23G  76% /</span><br><span class=\"line\">devtmpfs        7.8G     0  7.8G   0% /dev</span><br><span class=\"line\">tmpfs           7.8G  4.0K  7.8G   1% /dev/shm</span><br><span class=\"line\">tmpfs           7.8G  1.7M  7.8G   1% /run</span><br><span class=\"line\">tmpfs           7.8G     0  7.8G   0% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs           1.6G     0  1.6G   0% /run/user/0</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay          99G   72G   23G  76% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\">[root@idszt-dev overlay2]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 6553600       0  100% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     784 2032506    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/16cc70551c2811f5821775984a801cdb4f06f825a557edb347862650628f66d5/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/1f9c213147c08ea2f6e7ad953043f4ae96279be391d223d5cedb769fc2f7e6bf/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b285f624b11407a137448e1c6e74759b52d59b2d049c84ee344247ee7136df05/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/412ab0e2af0495c08968d6ae14d3b6777ba33d15e3d59fe7d1eef5f474e2d81d/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/e4e4f808f6685ff3f525244ea2122c3de054c3ebd828a6c343dd6180a942758e/merged</span><br><span class=\"line\">overlay        6553600 6553600       0  100% /var/lib/docker/overlay2/b9a4fa2196a6980a21d59c4d14737e0fe566a82b8ce55c8e5d3a9452cc3d8419/merged</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@idszt-dev containers]# docker ps -a</span><br><span class=\"line\">CONTAINER ID   IMAGE                                                  COMMAND                  CREATED        STATUS                          PORTS                                                  NAMES</span><br><span class=\"line\">196fe0f44767   minio/minio:RELEASE.2023-05-04T21-44-30Z               &quot;/usr/bin/docker-ent…&quot;   42 hours ago   Exited (0) About a minute ago                                                          dev-minio-standalone-04</span><br><span class=\"line\">03fc94c2b9d5   wurstmeister/kafka:2.13-2.8.1                          &quot;start-kafka.sh&quot;         2 days ago     Exited (1) 11 hours ago                                                                dev-kafka-standalone-01</span><br><span class=\"line\">499cda90bd18   docker.elastic.co/elasticsearch/elasticsearch:7.15.2   &quot;/bin/tini -- /usr/l…&quot;   2 days ago     Up 47 hours                     0.0.0.0:9200-&gt;9200/tcp, 0.0.0.0:9300-&gt;9300/tcp         dev-es-standalone-01</span><br><span class=\"line\">c4639ca30b87   nacos/nacos-server:v2.1.1                              &quot;bin/docker-startup.…&quot;   2 days ago     Up 2 days                       0.0.0.0:8848-&gt;8848/tcp                                 dev-nacos-standalone-01</span><br><span class=\"line\">859f688f4f88   mysql:8.0.32                                           &quot;docker-entrypoint.s…&quot;   2 days ago     Exited (2) 9 hours ago                                                                 dev-mysql-standalone-01</span><br><span class=\"line\">f73314fd956e   docker.elastic.co/kibana/kibana:7.15.2                 &quot;/bin/tini -- /usr/l…&quot;   7 weeks ago    Exited (137) 2 days ago                                                                dev-kibana-standalone-01</span><br><span class=\"line\">edabda1c3642   zookeeper:3.7.1                                        &quot;/docker-entrypoint.…&quot;   7 weeks ago    Up 2 days                       2888/tcp, 3888/tcp, 0.0.0.0:2181-&gt;2181/tcp, 8080/tcp   dev-zookeeper-standalone-01</span><br><span class=\"line\">2269262cd40b   redis:7.0.11                                           &quot;docker-entrypoint.s…&quot;   7 weeks ago    Up 2 days                       0.0.0.0:6379-&gt;6379/tcp                                 dev-redis-standalone-01</span><br><span class=\"line\">c2c59fff741c   portainer/portainer                                    &quot;/portainer&quot;             5 months ago   Up 2 days                       0.0.0.0:9999-&gt;9000/tcp                                 portainer</span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-dev overlay2]# for i in /*; do echo $i; find $i | wc -l; done</span><br><span class=\"line\">/bin</span><br><span class=\"line\">1</span><br><span class=\"line\">/boot</span><br><span class=\"line\">332</span><br><span class=\"line\">/data</span><br><span class=\"line\">5956444</span><br><span class=\"line\">/dev</span><br><span class=\"line\">369</span><br><span class=\"line\">/etc</span><br><span class=\"line\">2469</span><br><span class=\"line\">/ftpdir</span><br><span class=\"line\">146</span><br><span class=\"line\">/ftpdir1</span><br><span class=\"line\">12</span><br><span class=\"line\">/ftpoffline</span><br><span class=\"line\">1</span><br><span class=\"line\">/home</span><br><span class=\"line\">28211</span><br><span class=\"line\">/lib</span><br><span class=\"line\">1</span><br><span class=\"line\">/lib64</span><br><span class=\"line\">1</span><br><span class=\"line\">/lost+found</span><br><span class=\"line\">1</span><br><span class=\"line\">/media</span><br><span class=\"line\">1</span><br><span class=\"line\">/mnt</span><br><span class=\"line\">1</span><br><span class=\"line\">/opt</span><br><span class=\"line\">263923</span><br><span class=\"line\">/proc</span><br><span class=\"line\">294447</span><br><span class=\"line\">/root</span><br><span class=\"line\">3651</span><br><span class=\"line\">/run</span><br><span class=\"line\">649</span><br><span class=\"line\">/sbin</span><br><span class=\"line\">1</span><br><span class=\"line\">/srv</span><br><span class=\"line\">1</span><br><span class=\"line\">/sys</span><br><span class=\"line\">30834</span><br><span class=\"line\">/tmp</span><br><span class=\"line\">9</span><br><span class=\"line\">/usr</span><br><span class=\"line\">136673</span><br><span class=\"line\">/var</span><br><span class=\"line\">176741</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-dev jobhandler]# pwd</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler</span><br><span class=\"line\">[root@idszt-dev jobhandler]# for i in /data/applogs/xxl-job/jobhandler/*; do echo $i; find $i |wc -l; done</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-15</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-16</span><br><span class=\"line\">149756</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-17</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-18</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-19</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-20</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-21</span><br><span class=\"line\">149293</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-22</span><br><span class=\"line\">149761</span><br><span class=\"line\">/data/applogs/xxl-job/jobhandler/2023-06-23</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-dev jobhandler]# ls</span><br><span class=\"line\">2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04</span><br><span class=\"line\">2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog</span><br><span class=\"line\">2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-[15-30]</span><br><span class=\"line\">[root@idszt-dev jobhandler]# ls</span><br><span class=\"line\">2023-06-15  2023-06-18  2023-06-21  2023-06-24  2023-06-27  2023-06-30  2023-07-03  2023-07-08  2023-07-11  2023-07-14  2023-07-17  2023-07-20  2023-07-23  2023-07-26  2023-07-29  2023-08-01  2023-08-04</span><br><span class=\"line\">2023-06-16  2023-06-19  2023-06-22  2023-06-25  2023-06-28  2023-07-01  2023-07-06  2023-07-09  2023-07-12  2023-07-15  2023-07-18  2023-07-21  2023-07-24  2023-07-27  2023-07-30  2023-08-02  callbacklog</span><br><span class=\"line\">2023-06-17  2023-06-20  2023-06-23  2023-06-26  2023-06-29  2023-07-02  2023-07-07  2023-07-10  2023-07-13  2023-07-16  2023-07-19  2023-07-22  2023-07-25  2023-07-28  2023-07-31  2023-08-03  gluesource</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-15</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-18</span><br><span class=\"line\">[root@idszt-dev jobhandler]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 6254107  299493   96% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     649 2032641    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\">[root@idszt-dev jobhandler]# ls 2023-06*</span><br><span class=\"line\">2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-**</span><br><span class=\"line\">2023-06-16/ 2023-06-17/ 2023-06-19/ 2023-06-20/ 2023-06-21/ 2023-06-22/ 2023-06-23/ 2023-06-24/ 2023-06-25/ 2023-06-26/ 2023-06-27/ 2023-06-28/ 2023-06-29/ 2023-06-30/</span><br><span class=\"line\">[root@idszt-dev jobhandler]# rm -rf 2023-06-**</span><br><span class=\"line\">[root@idszt-dev jobhandler]# df -i</span><br><span class=\"line\">Filesystem      Inodes   IUsed   IFree IUse% Mounted on</span><br><span class=\"line\">/dev/vda1      6553600 4224352 2329248   65% /</span><br><span class=\"line\">devtmpfs       2030601     360 2030241    1% /dev</span><br><span class=\"line\">tmpfs          2033290       3 2033287    1% /dev/shm</span><br><span class=\"line\">tmpfs          2033290     649 2032641    1% /run</span><br><span class=\"line\">tmpfs          2033290      16 2033274    1% /sys/fs/cgroup</span><br><span class=\"line\">tmpfs          2033290       1 2033289    1% /run/user/0</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"\n### 密码复杂度\nvi /etc/pam.d/system-auth\n```shell\n\npassword    requisite     pam_pwquality.so dcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8 try_first_pass local_users_only retry=10 authtok_type='设置账号（要求：大小写+特殊字符+数字>8位）'\n\ndcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8\n\nretry=5      定义登录、或修改密码失败后，可以重复的次数\ntype=        选项，定义用户修改密码时的提示内容，一般不管\ndcredit=-1   至少一个数字\nlcredit=-1   至少一个小写\nucredit=-1   至少一个大写\nocredit=-1   至少一个特殊字符\nminlen=8     密码最短长度为5位\nremember=5   不能重复使用前5次使用过的密码\n\n```\n验证\n[root@idszt-node005 ~]# vi /etc/pam.d/system-auth\n[root@idszt-node005 ~]# passwd idszt\n更改用户 idszt 的密码 。\n新的 '设置密码要求：大小写+特殊字符+数字' 密码：\n\n\n### 系统日志保存时间\nvi /etc/logrotate.conf\n```shell\n# see \"man logrotate\" for details\n# rotate log files weekly\nweekly\n\n# keep 4 weeks worth of backlogs\n# 保存6个月\nrotate 24\n\n# create new (empty) log files after rotating old ones\ncreate\n\n# use date as a suffix of the rotated file\ndateext\n\n# uncomment this if you want your log files compressed\n#compress\n\n# RPM packages drop log rotation information into this directory\ninclude /etc/logrotate.d\n\n# no packages own wtmp and btmp -- we'll rotate them here\n# 保存6个月\n/var/log/wtmp {\n    monthly\n    create 0664 root utmp\n        minsize 1M\n    rotate 6\n}\n# 保存6个月\n/var/log/btmp {\n    missingok\n    monthly\n    create 0600 root utmp\n    rotate 6\n}\n\n# system-specific logs may be also be configured here.\n\n\n```\nservice rsyslog restart\n\n### MySQL审计\n### 开启\nset global general_log=on\n### 检查\nshow variables like '%general_log%'\n\n\n自查结果反馈：\n1、46关于Redis远程代码执行漏洞：部署的Redis版本不在风险列表（当前redis版本为:7.0.11）\n2、68Linux Kernel TIPC 远程代码执行漏洞：版本不在风险列表（Linux version 3.10.0）\n3、111关于XXL-JOB未授权远程命令执行漏洞：版本不在风险列表（当前XXL-JOB版本为：2.3.1）\n4、Jackson-databind漏洞：版本不在风险列表（当前Jackson版本为：2.13.1）\n\n\n","source":"_posts/07中间件/F.系统加固/系统加固.md","raw":"\n### 密码复杂度\nvi /etc/pam.d/system-auth\n```shell\n\npassword    requisite     pam_pwquality.so dcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8 try_first_pass local_users_only retry=10 authtok_type='设置账号（要求：大小写+特殊字符+数字>8位）'\n\ndcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8\n\nretry=5      定义登录、或修改密码失败后，可以重复的次数\ntype=        选项，定义用户修改密码时的提示内容，一般不管\ndcredit=-1   至少一个数字\nlcredit=-1   至少一个小写\nucredit=-1   至少一个大写\nocredit=-1   至少一个特殊字符\nminlen=8     密码最短长度为5位\nremember=5   不能重复使用前5次使用过的密码\n\n```\n验证\n[root@idszt-node005 ~]# vi /etc/pam.d/system-auth\n[root@idszt-node005 ~]# passwd idszt\n更改用户 idszt 的密码 。\n新的 '设置密码要求：大小写+特殊字符+数字' 密码：\n\n\n### 系统日志保存时间\nvi /etc/logrotate.conf\n```shell\n# see \"man logrotate\" for details\n# rotate log files weekly\nweekly\n\n# keep 4 weeks worth of backlogs\n# 保存6个月\nrotate 24\n\n# create new (empty) log files after rotating old ones\ncreate\n\n# use date as a suffix of the rotated file\ndateext\n\n# uncomment this if you want your log files compressed\n#compress\n\n# RPM packages drop log rotation information into this directory\ninclude /etc/logrotate.d\n\n# no packages own wtmp and btmp -- we'll rotate them here\n# 保存6个月\n/var/log/wtmp {\n    monthly\n    create 0664 root utmp\n        minsize 1M\n    rotate 6\n}\n# 保存6个月\n/var/log/btmp {\n    missingok\n    monthly\n    create 0600 root utmp\n    rotate 6\n}\n\n# system-specific logs may be also be configured here.\n\n\n```\nservice rsyslog restart\n\n### MySQL审计\n### 开启\nset global general_log=on\n### 检查\nshow variables like '%general_log%'\n\n\n自查结果反馈：\n1、46关于Redis远程代码执行漏洞：部署的Redis版本不在风险列表（当前redis版本为:7.0.11）\n2、68Linux Kernel TIPC 远程代码执行漏洞：版本不在风险列表（Linux version 3.10.0）\n3、111关于XXL-JOB未授权远程命令执行漏洞：版本不在风险列表（当前XXL-JOB版本为：2.3.1）\n4、Jackson-databind漏洞：版本不在风险列表（当前Jackson版本为：2.13.1）\n\n\n","slug":"07中间件/F.系统加固/系统加固","published":1,"date":"2023-09-01T13:06:38.230Z","updated":"2023-08-24T02:29:14.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2a001nzb8ahd5c1ud5","content":"<h3 id=\"密码复杂度\">密码复杂度</h3>\n<p>vi /etc/pam.d/system-auth</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">password    requisite     pam_pwquality.so dcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8 try_first_pass local_users_only retry=10 authtok_type=&#x27;设置账号（要求：大小写+特殊字符+数字&gt;8位）&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">dcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8</span><br><span class=\"line\"></span><br><span class=\"line\">retry=5      定义登录、或修改密码失败后，可以重复的次数</span><br><span class=\"line\">type=        选项，定义用户修改密码时的提示内容，一般不管</span><br><span class=\"line\">dcredit=-1   至少一个数字</span><br><span class=\"line\">lcredit=-1   至少一个小写</span><br><span class=\"line\">ucredit=-1   至少一个大写</span><br><span class=\"line\">ocredit=-1   至少一个特殊字符</span><br><span class=\"line\">minlen=8     密码最短长度为5位</span><br><span class=\"line\">remember=5   不能重复使用前5次使用过的密码</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>验证<br>\n[root@idszt-node005 ~]# vi /etc/pam.d/system-auth<br>\n[root@idszt-node005 ~]# passwd idszt<br>\n更改用户 idszt 的密码 。<br>\n新的 ‘设置密码要求：大小写+特殊字符+数字’ 密码：</p>\n<h3 id=\"系统日志保存时间\">系统日志保存时间</h3>\n<p>vi /etc/logrotate.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">see <span class=\"string\">&quot;man logrotate&quot;</span> <span class=\"keyword\">for</span> details</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rotate <span class=\"built_in\">log</span> files weekly</span></span><br><span class=\"line\">weekly</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">keep 4 weeks worth of backlogs</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">保存6个月</span></span><br><span class=\"line\">rotate 24</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">create new (empty) <span class=\"built_in\">log</span> files after rotating old ones</span></span><br><span class=\"line\">create</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">use <span class=\"built_in\">date</span> as a suffix of the rotated file</span></span><br><span class=\"line\">dateext</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">uncomment this <span class=\"keyword\">if</span> you want your <span class=\"built_in\">log</span> files compressed</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">compress</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">RPM packages drop <span class=\"built_in\">log</span> rotation information into this directory</span></span><br><span class=\"line\">include /etc/logrotate.d</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">no packages own wtmp and btmp -- we<span class=\"string\">&#x27;ll rotate them here</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">保存6个月</span></span></span><br><span class=\"line\">/var/log/wtmp &#123;</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0664 root utmp</span><br><span class=\"line\">        minsize 1M</span><br><span class=\"line\">    rotate 6</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">保存6个月</span></span></span><br><span class=\"line\">/var/log/btmp &#123;</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0600 root utmp</span><br><span class=\"line\">    rotate 6</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">system-specific logs may be also be configured here.</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>service rsyslog restart</p>\n<h3 id=\"MySQL审计\">MySQL审计</h3>\n<h3 id=\"开启\">开启</h3>\n<p>set global general_log=on</p>\n<h3 id=\"检查\">检查</h3>\n<p>show variables like ‘%general_log%’</p>\n<p>自查结果反馈：<br>\n1、46关于Redis远程代码执行漏洞：部署的Redis版本不在风险列表（当前redis版本为:7.0.11）<br>\n2、68Linux Kernel TIPC 远程代码执行漏洞：版本不在风险列表（Linux version 3.10.0）<br>\n3、111关于XXL-JOB未授权远程命令执行漏洞：版本不在风险列表（当前XXL-JOB版本为：2.3.1）<br>\n4、Jackson-databind漏洞：版本不在风险列表（当前Jackson版本为：2.13.1）</p>\n","excerpt":"","more":"<h3 id=\"密码复杂度\">密码复杂度</h3>\n<p>vi /etc/pam.d/system-auth</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">password    requisite     pam_pwquality.so dcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8 try_first_pass local_users_only retry=10 authtok_type=&#x27;设置账号（要求：大小写+特殊字符+数字&gt;8位）&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">dcredit=-1 lcredit=-1 ucredit=-1 ocredit=-1 minlen=8</span><br><span class=\"line\"></span><br><span class=\"line\">retry=5      定义登录、或修改密码失败后，可以重复的次数</span><br><span class=\"line\">type=        选项，定义用户修改密码时的提示内容，一般不管</span><br><span class=\"line\">dcredit=-1   至少一个数字</span><br><span class=\"line\">lcredit=-1   至少一个小写</span><br><span class=\"line\">ucredit=-1   至少一个大写</span><br><span class=\"line\">ocredit=-1   至少一个特殊字符</span><br><span class=\"line\">minlen=8     密码最短长度为5位</span><br><span class=\"line\">remember=5   不能重复使用前5次使用过的密码</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>验证<br>\n[root@idszt-node005 ~]# vi /etc/pam.d/system-auth<br>\n[root@idszt-node005 ~]# passwd idszt<br>\n更改用户 idszt 的密码 。<br>\n新的 ‘设置密码要求：大小写+特殊字符+数字’ 密码：</p>\n<h3 id=\"系统日志保存时间\">系统日志保存时间</h3>\n<p>vi /etc/logrotate.conf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">see <span class=\"string\">&quot;man logrotate&quot;</span> <span class=\"keyword\">for</span> details</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">rotate <span class=\"built_in\">log</span> files weekly</span></span><br><span class=\"line\">weekly</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">keep 4 weeks worth of backlogs</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">保存6个月</span></span><br><span class=\"line\">rotate 24</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">create new (empty) <span class=\"built_in\">log</span> files after rotating old ones</span></span><br><span class=\"line\">create</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">use <span class=\"built_in\">date</span> as a suffix of the rotated file</span></span><br><span class=\"line\">dateext</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">uncomment this <span class=\"keyword\">if</span> you want your <span class=\"built_in\">log</span> files compressed</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">compress</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">RPM packages drop <span class=\"built_in\">log</span> rotation information into this directory</span></span><br><span class=\"line\">include /etc/logrotate.d</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">no packages own wtmp and btmp -- we<span class=\"string\">&#x27;ll rotate them here</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">保存6个月</span></span></span><br><span class=\"line\">/var/log/wtmp &#123;</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0664 root utmp</span><br><span class=\"line\">        minsize 1M</span><br><span class=\"line\">    rotate 6</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">保存6个月</span></span></span><br><span class=\"line\">/var/log/btmp &#123;</span><br><span class=\"line\">    missingok</span><br><span class=\"line\">    monthly</span><br><span class=\"line\">    create 0600 root utmp</span><br><span class=\"line\">    rotate 6</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">system-specific logs may be also be configured here.</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>service rsyslog restart</p>\n<h3 id=\"MySQL审计\">MySQL审计</h3>\n<h3 id=\"开启\">开启</h3>\n<p>set global general_log=on</p>\n<h3 id=\"检查\">检查</h3>\n<p>show variables like ‘%general_log%’</p>\n<p>自查结果反馈：<br>\n1、46关于Redis远程代码执行漏洞：部署的Redis版本不在风险列表（当前redis版本为:7.0.11）<br>\n2、68Linux Kernel TIPC 远程代码执行漏洞：版本不在风险列表（Linux version 3.10.0）<br>\n3、111关于XXL-JOB未授权远程命令执行漏洞：版本不在风险列表（当前XXL-JOB版本为：2.3.1）<br>\n4、Jackson-databind漏洞：版本不在风险列表（当前Jackson版本为：2.13.1）</p>\n"},{"_content":"\n\n\n\n\n\n\n\n分发文件到所有主机\n\n```\nansible all -m copy -a \"src=/etc/hosts dest=/tmp\"\n```\n\n\n\n","source":"_posts/07中间件/A.运维工具/2.1.Ansible使用说明.md","raw":"\n\n\n\n\n\n\n\n分发文件到所有主机\n\n```\nansible all -m copy -a \"src=/etc/hosts dest=/tmp\"\n```\n\n\n\n","slug":"07中间件/A.运维工具/2.1.Ansible使用说明","published":1,"date":"2023-09-01T13:06:37.750Z","updated":"2023-06-15T02:05:28.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2b001ozb8aeegs4hlz","content":"<p>分发文件到所有主机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible all -m copy -a &quot;src=/etc/hosts dest=/tmp&quot;</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>分发文件到所有主机</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible all -m copy -a &quot;src=/etc/hosts dest=/tmp&quot;</span><br></pre></td></tr></table></figure>\n"},{"_content":"### 版本\ndocker pull prom/prometheus:v2.45.0\ndocker pull prom/alertmanager:v0.25.0\ndocker pull prom/node-exporter:v1.6.1\ndocker pull grafana/grafana:10.0.2\n\n\ndocker pull docker.elastic.co/elasticsearch/elasticsearch:7.15.2\ndocker pull docker.elastic.co/logstash/logstash:7.15.2\ndocker pull docker.elastic.co/kibana/kibana:7.15.2\n\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.A总览.md","raw":"### 版本\ndocker pull prom/prometheus:v2.45.0\ndocker pull prom/alertmanager:v0.25.0\ndocker pull prom/node-exporter:v1.6.1\ndocker pull grafana/grafana:10.0.2\n\n\ndocker pull docker.elastic.co/elasticsearch/elasticsearch:7.15.2\ndocker pull docker.elastic.co/logstash/logstash:7.15.2\ndocker pull docker.elastic.co/kibana/kibana:7.15.2\n\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.A总览","published":1,"date":"2023-09-01T13:06:37.790Z","updated":"2023-07-22T06:20:46.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2b001pzb8a7v0l5q1i","content":"<h3 id=\"版本\">版本</h3>\n<p>docker pull prom/prometheus:v2.45.0<br>\ndocker pull prom/alertmanager:v0.25.0<br>\ndocker pull prom/node-exporter:v1.6.1<br>\ndocker pull grafana/grafana:10.0.2</p>\n<p>docker pull <a href=\"http://docker.elastic.co/elasticsearch/elasticsearch:7.15.2\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</a><br>\ndocker pull <a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a><br>\ndocker pull <a href=\"http://docker.elastic.co/kibana/kibana:7.15.2\">docker.elastic.co/kibana/kibana:7.15.2</a></p>\n","excerpt":"","more":"<h3 id=\"版本\">版本</h3>\n<p>docker pull prom/prometheus:v2.45.0<br>\ndocker pull prom/alertmanager:v0.25.0<br>\ndocker pull prom/node-exporter:v1.6.1<br>\ndocker pull grafana/grafana:10.0.2</p>\n<p>docker pull <a href=\"http://docker.elastic.co/elasticsearch/elasticsearch:7.15.2\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</a><br>\ndocker pull <a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a><br>\ndocker pull <a href=\"http://docker.elastic.co/kibana/kibana:7.15.2\">docker.elastic.co/kibana/kibana:7.15.2</a></p>\n"},{"_content":"docker swarm init --advertise-addr 192.168.10.187\n\n\nSwarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n\n\ndocker node ls\n\ndocker network create -d overlay --attachable swarm-net\n\n\ndocker-compose exec prod_cluster_zookeeper_02 bash\n\n\n\n\n\n\n\n安装docker-compose\n\nyum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose\n\n\n\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker-compose.md","raw":"docker swarm init --advertise-addr 192.168.10.187\n\n\nSwarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\n    docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n\nTo add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.\n\n\ndocker node ls\n\ndocker network create -d overlay --attachable swarm-net\n\n\ndocker-compose exec prod_cluster_zookeeper_02 bash\n\n\n\n\n\n\n\n安装docker-compose\n\nyum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose\n\n\n\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker-compose","published":1,"date":"2023-09-01T13:06:37.800Z","updated":"2023-08-15T11:24:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2c001qzb8a15t761u5","content":"<p>docker swarm init --advertise-addr 192.168.10.187</p>\n<p>Swarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.</p>\n<p>To add a worker to this swarm, run the following command:</p>\n<pre><code>docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n</code></pre>\n<p>To add a manager to this swarm, run ‘docker swarm join-token manager’ and follow the instructions.</p>\n<p>docker node ls</p>\n<p>docker network create -d overlay --attachable swarm-net</p>\n<p>docker-compose exec prod_cluster_zookeeper_02 bash</p>\n<p>安装docker-compose</p>\n<p>yum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose</p>\n","excerpt":"","more":"<p>docker swarm init --advertise-addr 192.168.10.187</p>\n<p>Swarm initialized: current node (2tllh25ye4tzdlzmdz7x6ssnq) is now a manager.</p>\n<p>To add a worker to this swarm, run the following command:</p>\n<pre><code>docker swarm join --token SWMTKN-1-1wve4hiyyit8bi5rhdumrx8lbcqcdv8duml2taupt1uvmozf2a-6m95zjdkgtj0yxsinp69g6fhs 192.168.10.187:2377\n</code></pre>\n<p>To add a manager to this swarm, run ‘docker swarm join-token manager’ and follow the instructions.</p>\n<p>docker node ls</p>\n<p>docker network create -d overlay --attachable swarm-net</p>\n<p>docker-compose exec prod_cluster_zookeeper_02 bash</p>\n<p>安装docker-compose</p>\n<p>yum install -y docker-compose --downloadonly --downloaddir=/root/software/docker-compose</p>\n"},{"_content":"\nhttps://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\n\n### 前置工作\n创建外置目录，修改进程可使用最大虚拟内存\n```\nmkdir -p /docker_data/elasticsearch/{config,data,plugins,logs}\necho \"vm.max_map_count=262144\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n#vm.max_map_count = 262144\n```\n### 创建配置文件\n每个节点`/docker_data/elasticsearch/config/elasticsearch.yml`,修改node.name，network.publish_host\n```\n#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。\ncluster.name: prod-env-es\n#节点名称\nnode.name: es-182\n#设置索引数据的存储路径\npath.data: ./data\n#设置日志的存储路径\npath.logs: ./logs\n#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中\nnetwork.host: 0.0.0.0\nnetwork.publish_host: 192.168.10.182\n#设置对外服务的http端口\nhttp.port: 9200\ntransport.tcp.port: 9300\n#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点\n#discovery.zen.ping.unicast.hosts: [\"0.0.0.0\"]\ndiscovery.seed_hosts: [\"192.168.10.181:9300\",\"192.168.10.182:9300\",\"192.168.10.183:9300\",\"192.168.10.184:9300\",\"192.168.10.185:9300\",\"192.168.10.186:9300\"]\ncluster.initial_master_nodes: [\"es-181\", \"es-182\",\"es-183\", \"es-184\", \"es-185\", \"es-186\"]\n\nnode.master: true\nnode.data: true\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n## java.lang.IllegalArgumentException: node settings must not contain any index level settings\n## 设置默认索引副本个数\n#index.number_of_replicas: 1\n## 设置默认索引分片个数 5\n#index.number_of_shards: 5\n## 索引缓存\n#indices.memory.index_buffer_size: 512m\n\n```\n\n\n### 创建实例\n```shell\n# 记得修改名称和ES_JAVA_OPTS\ndocker run  --name prod_es_cluster_01 \\\n--network=host --privileged=true --restart=always \\\n-v /docker_data/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\\n-v /docker_data/elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /docker_data/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-v /docker_data/elasticsearch/logs:/usr/share/elasticsearch/logs \\\n-e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n-e TAKE_FILE_OWNERSHIP=true \\\ndocker.elastic.co/elasticsearch/elasticsearch:7.15.2\n```\n\n### 生成密钥\n\n```\n# 进入容器\ndocker exec -it prod_es_cluster_01 /bin/bash\n\n\n# 生成密钥\nbin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass \"\"\ncd /usr/share/elasticsearch/config/\nchmod 777 elastic-certificates.p12\nexit\n\n# 复制到宿主机\ndocker cp prod_es_cluster_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/elasticsearch/config/elastic-certificates.p12 \n```\n\n### 分发密钥\n2-6主机均需复制\n```\ndocker cp /docker_data/elasticsearch/config/elastic-certificates.p12 prod_es_cluster_02:/usr/share/elasticsearch/config/elastic-certificates.p12\n\n# 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：\nxpack.security.enabled: true\nxpack.license.self_generated.type: basic\nxpack.security.transport.ssl.enabled: true\nxpack.security.transport.ssl.verification_mode: certificate\nxpack.security.transport.ssl.keystore.path: elastic-certificates.p12\nxpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n```\n重启docker-es实例\n\n\n### 修改密码\n\n```shell\ndocker-compose exec prod_middleware_es_02 bash\ndocker-compose exec prod_middleware_es_02 bash\n[root@node1 ~]# docker-compose exec prod_middleware_es_02 bash\nbash-4.4# bin/elasticsearch-setup-passwords interactive\nInitiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.\nYou will be prompted to enter passwords as the process progresses.\nPlease confirm that you would like to continue [y/N]y\nelastic#SZT5764\n```\n\n### 验证集群\n打开：http://192.168.240.214:19200/_cat/nodes?pretty，输入新设密码。\n\n```\n192.168.10.186 58 99 0 0.00 0.07 0.21 cdfhilmrstw - es-186\n192.168.10.185 66 68 0 0.00 0.10 0.28 cdfhilmrstw * es-185\n192.168.10.183 56 88 0 0.03 0.05 0.06 cdfhilmrstw - es-183\n192.168.10.184 42 98 0 0.07 0.07 0.08 cdfhilmrstw - es-184\n192.168.10.181 15 63 0 0.27 0.09 0.16 cdfhilmrstw - es-181\n192.168.10.182 54 57 9 1.39 0.63 0.56 cdfhilmrstw - es-182\n```\n\n### 可选安装kibana\n\n```\ndocker run -d --name dev-kibana-standalone-01  -p 5601:5601 -e \"ELASTICSEARCH_HOSTS=http://119.23.155.163:9200/\" docker.elastic.co/kibana/kibana:7.15.2\n\ndocker exec -it dev-kibana-standalone-01 /bin/bash\t\t# 进入容器内部\ncat /usr/share/kibana/config/kibana.yml\n\n\n# Default Kibana configuration for docker target\nserver.host: \"0\"\nserver.shutdownTimeout: \"5s\"\nelasticsearch.hosts: [ \"http://elasticsearch:9200\" ]\nmonitoring.ui.container.elasticsearch.enabled: true\n\ni18n.locale: zh-CN\n#elasticsearch.username: elastic\n#elasticsearch.password: szt@#es\n\n```\n\n### 错误处理\n原因：新实例共享使用了旧实例的数据文件夹\n解决方法：停止docker es实例，删除data和logs文件夹内数据，重新run.\n```\nException in thread \"main\" java.lang.RuntimeException: starting java failed with [1]\noutput:\n[0.000s][error][logging] Error opening log file 'logs/gc.log': Permission denied\n[0.000s][error][logging] Initialization of output 'file=logs/gc.log' using options 'filecount=32,filesize=64m' failed.\nerror:\nInvalid -Xlog option '-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m', see error log for details.\nError: Could not create the Java Virtual Machine.\nError: A fatal exception has occurred. Program will exit.\n        at org.elasticsearch.tools.launchers.JvmOption.flagsFinal(JvmOption.java:119)\n        at org.elasticsearch.tools.launchers.JvmOption.findFinalOptions(JvmOption.java:81)\n        at org.elasticsearch.tools.launchers.JvmErgonomics.choose(JvmErgonomics.java:38)\n        at org.elasticsearch.tools.launchers.JvmOptionsParser.jvmOptions(JvmOptionsParser.java:135)\n        at org.elasticsearch.tools.launchers.JvmOptionsParser.main(JvmOptionsParser.java:86)\n```\n\n原因：/usr/share/elasticsearch/config/elastic-certificates.p12创建后没有访问权限。\n解决方法：进入容器，chmod 777暴力授权。\n```\n\"stacktrace\": [\"org.elasticsearch.bootstrap.StartupException: ElasticsearchSecurityException[failed to load SSL configuration [xpack.security.transport.ssl]]; nested: ElasticsearchException[failed to initialize SSL TrustManager - not permitted to read truststore file [/usr/share/elasticsearch/config/elastic-certificates.p12]]; \n```\n\n\nprod_middleware_es_01_1  | {\"type\": \"server\", \"timestamp\": \"2023-07-21T06:46:19,857Z\", \"level\": \"ERROR\", \"component\": \"o.e.b.ElasticsearchUncaughtExceptionHandler\", \"cluster.name\": \"prod-middleware-elasticsearch\", \"node.name\": \"middleware-es-node001\", \"message\": \"uncaught exception in thread [main]\",\n\n\n解决方法：原来的docker没停掉。停止然后删除就行。\n\n\n\nnode settings must not contain any index level settings\n\n副本数\n分片数\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch.md","raw":"\nhttps://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\n\n### 前置工作\n创建外置目录，修改进程可使用最大虚拟内存\n```\nmkdir -p /docker_data/elasticsearch/{config,data,plugins,logs}\necho \"vm.max_map_count=262144\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n#vm.max_map_count = 262144\n```\n### 创建配置文件\n每个节点`/docker_data/elasticsearch/config/elasticsearch.yml`,修改node.name，network.publish_host\n```\n#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。\ncluster.name: prod-env-es\n#节点名称\nnode.name: es-182\n#设置索引数据的存储路径\npath.data: ./data\n#设置日志的存储路径\npath.logs: ./logs\n#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中\nnetwork.host: 0.0.0.0\nnetwork.publish_host: 192.168.10.182\n#设置对外服务的http端口\nhttp.port: 9200\ntransport.tcp.port: 9300\n#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点\n#discovery.zen.ping.unicast.hosts: [\"0.0.0.0\"]\ndiscovery.seed_hosts: [\"192.168.10.181:9300\",\"192.168.10.182:9300\",\"192.168.10.183:9300\",\"192.168.10.184:9300\",\"192.168.10.185:9300\",\"192.168.10.186:9300\"]\ncluster.initial_master_nodes: [\"es-181\", \"es-182\",\"es-183\", \"es-184\", \"es-185\", \"es-186\"]\n\nnode.master: true\nnode.data: true\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n## java.lang.IllegalArgumentException: node settings must not contain any index level settings\n## 设置默认索引副本个数\n#index.number_of_replicas: 1\n## 设置默认索引分片个数 5\n#index.number_of_shards: 5\n## 索引缓存\n#indices.memory.index_buffer_size: 512m\n\n```\n\n\n### 创建实例\n```shell\n# 记得修改名称和ES_JAVA_OPTS\ndocker run  --name prod_es_cluster_01 \\\n--network=host --privileged=true --restart=always \\\n-v /docker_data/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\\n-v /docker_data/elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /docker_data/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-v /docker_data/elasticsearch/logs:/usr/share/elasticsearch/logs \\\n-e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n-e TAKE_FILE_OWNERSHIP=true \\\ndocker.elastic.co/elasticsearch/elasticsearch:7.15.2\n```\n\n### 生成密钥\n\n```\n# 进入容器\ndocker exec -it prod_es_cluster_01 /bin/bash\n\n\n# 生成密钥\nbin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass \"\"\ncd /usr/share/elasticsearch/config/\nchmod 777 elastic-certificates.p12\nexit\n\n# 复制到宿主机\ndocker cp prod_es_cluster_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/elasticsearch/config/elastic-certificates.p12 \n```\n\n### 分发密钥\n2-6主机均需复制\n```\ndocker cp /docker_data/elasticsearch/config/elastic-certificates.p12 prod_es_cluster_02:/usr/share/elasticsearch/config/elastic-certificates.p12\n\n# 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：\nxpack.security.enabled: true\nxpack.license.self_generated.type: basic\nxpack.security.transport.ssl.enabled: true\nxpack.security.transport.ssl.verification_mode: certificate\nxpack.security.transport.ssl.keystore.path: elastic-certificates.p12\nxpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n```\n重启docker-es实例\n\n\n### 修改密码\n\n```shell\ndocker-compose exec prod_middleware_es_02 bash\ndocker-compose exec prod_middleware_es_02 bash\n[root@node1 ~]# docker-compose exec prod_middleware_es_02 bash\nbash-4.4# bin/elasticsearch-setup-passwords interactive\nInitiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.\nYou will be prompted to enter passwords as the process progresses.\nPlease confirm that you would like to continue [y/N]y\nelastic#SZT5764\n```\n\n### 验证集群\n打开：http://192.168.240.214:19200/_cat/nodes?pretty，输入新设密码。\n\n```\n192.168.10.186 58 99 0 0.00 0.07 0.21 cdfhilmrstw - es-186\n192.168.10.185 66 68 0 0.00 0.10 0.28 cdfhilmrstw * es-185\n192.168.10.183 56 88 0 0.03 0.05 0.06 cdfhilmrstw - es-183\n192.168.10.184 42 98 0 0.07 0.07 0.08 cdfhilmrstw - es-184\n192.168.10.181 15 63 0 0.27 0.09 0.16 cdfhilmrstw - es-181\n192.168.10.182 54 57 9 1.39 0.63 0.56 cdfhilmrstw - es-182\n```\n\n### 可选安装kibana\n\n```\ndocker run -d --name dev-kibana-standalone-01  -p 5601:5601 -e \"ELASTICSEARCH_HOSTS=http://119.23.155.163:9200/\" docker.elastic.co/kibana/kibana:7.15.2\n\ndocker exec -it dev-kibana-standalone-01 /bin/bash\t\t# 进入容器内部\ncat /usr/share/kibana/config/kibana.yml\n\n\n# Default Kibana configuration for docker target\nserver.host: \"0\"\nserver.shutdownTimeout: \"5s\"\nelasticsearch.hosts: [ \"http://elasticsearch:9200\" ]\nmonitoring.ui.container.elasticsearch.enabled: true\n\ni18n.locale: zh-CN\n#elasticsearch.username: elastic\n#elasticsearch.password: szt@#es\n\n```\n\n### 错误处理\n原因：新实例共享使用了旧实例的数据文件夹\n解决方法：停止docker es实例，删除data和logs文件夹内数据，重新run.\n```\nException in thread \"main\" java.lang.RuntimeException: starting java failed with [1]\noutput:\n[0.000s][error][logging] Error opening log file 'logs/gc.log': Permission denied\n[0.000s][error][logging] Initialization of output 'file=logs/gc.log' using options 'filecount=32,filesize=64m' failed.\nerror:\nInvalid -Xlog option '-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m', see error log for details.\nError: Could not create the Java Virtual Machine.\nError: A fatal exception has occurred. Program will exit.\n        at org.elasticsearch.tools.launchers.JvmOption.flagsFinal(JvmOption.java:119)\n        at org.elasticsearch.tools.launchers.JvmOption.findFinalOptions(JvmOption.java:81)\n        at org.elasticsearch.tools.launchers.JvmErgonomics.choose(JvmErgonomics.java:38)\n        at org.elasticsearch.tools.launchers.JvmOptionsParser.jvmOptions(JvmOptionsParser.java:135)\n        at org.elasticsearch.tools.launchers.JvmOptionsParser.main(JvmOptionsParser.java:86)\n```\n\n原因：/usr/share/elasticsearch/config/elastic-certificates.p12创建后没有访问权限。\n解决方法：进入容器，chmod 777暴力授权。\n```\n\"stacktrace\": [\"org.elasticsearch.bootstrap.StartupException: ElasticsearchSecurityException[failed to load SSL configuration [xpack.security.transport.ssl]]; nested: ElasticsearchException[failed to initialize SSL TrustManager - not permitted to read truststore file [/usr/share/elasticsearch/config/elastic-certificates.p12]]; \n```\n\n\nprod_middleware_es_01_1  | {\"type\": \"server\", \"timestamp\": \"2023-07-21T06:46:19,857Z\", \"level\": \"ERROR\", \"component\": \"o.e.b.ElasticsearchUncaughtExceptionHandler\", \"cluster.name\": \"prod-middleware-elasticsearch\", \"node.name\": \"middleware-es-node001\", \"message\": \"uncaught exception in thread [main]\",\n\n\n解决方法：原来的docker没停掉。停止然后删除就行。\n\n\n\nnode settings must not contain any index level settings\n\n副本数\n分片数\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch","published":1,"date":"2023-09-01T13:06:37.820Z","updated":"2023-08-26T07:59:00.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2c001rzb8a8gujczs3","content":"<p><a href=\"https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\">https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html</a></p>\n<h3 id=\"前置工作\">前置工作</h3>\n<p>创建外置目录，修改进程可使用最大虚拟内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/elasticsearch/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\">echo &quot;vm.max_map_count=262144&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">cat /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br><span class=\"line\"></span><br><span class=\"line\">#vm.max_map_count = 262144</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\">创建配置文件</h3>\n<p>每个节点<code>/docker_data/elasticsearch/config/elasticsearch.yml</code>,<a href=\"http://xn--node-486fx14i.name\">修改node.name</a>，network.publish_host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span><br><span class=\"line\">cluster.name: prod-env-es</span><br><span class=\"line\">#节点名称</span><br><span class=\"line\">node.name: es-182</span><br><span class=\"line\">#设置索引数据的存储路径</span><br><span class=\"line\">path.data: ./data</span><br><span class=\"line\">#设置日志的存储路径</span><br><span class=\"line\">path.logs: ./logs</span><br><span class=\"line\">#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中</span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\">network.publish_host: 192.168.10.182</span><br><span class=\"line\">#设置对外服务的http端口</span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\">transport.tcp.port: 9300</span><br><span class=\"line\">#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点</span><br><span class=\"line\">#discovery.zen.ping.unicast.hosts: [&quot;0.0.0.0&quot;]</span><br><span class=\"line\">discovery.seed_hosts: [&quot;192.168.10.181:9300&quot;,&quot;192.168.10.182:9300&quot;,&quot;192.168.10.183:9300&quot;,&quot;192.168.10.184:9300&quot;,&quot;192.168.10.185:9300&quot;,&quot;192.168.10.186:9300&quot;]</span><br><span class=\"line\">cluster.initial_master_nodes: [&quot;es-181&quot;, &quot;es-182&quot;,&quot;es-183&quot;, &quot;es-184&quot;, &quot;es-185&quot;, &quot;es-186&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">node.master: true</span><br><span class=\"line\">node.data: true</span><br><span class=\"line\"></span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\">http.cors.allow-origin: &quot;*&quot;</span><br><span class=\"line\">## java.lang.IllegalArgumentException: node settings must not contain any index level settings</span><br><span class=\"line\">## 设置默认索引副本个数</span><br><span class=\"line\">#index.number_of_replicas: 1</span><br><span class=\"line\">## 设置默认索引分片个数 5</span><br><span class=\"line\">#index.number_of_shards: 5</span><br><span class=\"line\">## 索引缓存</span><br><span class=\"line\">#indices.memory.index_buffer_size: 512m</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建实例\">创建实例</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">记得修改名称和ES_JAVA_OPTS</span></span><br><span class=\"line\">docker run  --name prod_es_cluster_01 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/data:/usr/share/elasticsearch/data \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/logs:/usr/share/elasticsearch/logs \\</span><br><span class=\"line\">-e ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; \\</span><br><span class=\"line\">-e TAKE_FILE_OWNERSHIP=true \\</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成密钥\">生成密钥</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入容器</span><br><span class=\"line\">docker exec -it prod_es_cluster_01 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 生成密钥</span><br><span class=\"line\">bin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass &quot;&quot;</span><br><span class=\"line\">cd /usr/share/elasticsearch/config/</span><br><span class=\"line\">chmod 777 elastic-certificates.p12</span><br><span class=\"line\">exit</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制到宿主机</span><br><span class=\"line\">docker cp prod_es_cluster_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/elasticsearch/config/elastic-certificates.p12 </span><br></pre></td></tr></table></figure>\n<h3 id=\"分发密钥\">分发密钥</h3>\n<p>2-6主机均需复制</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp /docker_data/elasticsearch/config/elastic-certificates.p12 prod_es_cluster_02:/usr/share/elasticsearch/config/elastic-certificates.p12</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：</span><br><span class=\"line\">xpack.security.enabled: true</span><br><span class=\"line\">xpack.license.self_generated.type: basic</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: true</span><br><span class=\"line\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br></pre></td></tr></table></figure>\n<p>重启docker-es实例</p>\n<h3 id=\"修改密码\">修改密码</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose exec prod_middleware_es_02 bash</span><br><span class=\"line\">docker-compose exec prod_middleware_es_02 bash</span><br><span class=\"line\">[root@node1 ~]# docker-compose exec prod_middleware_es_02 bash</span><br><span class=\"line\">bash-4.4# bin/elasticsearch-setup-passwords interactive</span><br><span class=\"line\">Initiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.</span><br><span class=\"line\">You will be prompted to enter passwords as the process progresses.</span><br><span class=\"line\">Please confirm that you would like to continue [y/N]y</span><br><span class=\"line\"><span class=\"meta prompt_\">elastic#</span><span class=\"language-bash\">SZT5764</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"验证集群\">验证集群</h3>\n<p>打开：<a href=\"http://192.168.240.214:19200/_cat/nodes?pretty%EF%BC%8C%E8%BE%93%E5%85%A5%E6%96%B0%E8%AE%BE%E5%AF%86%E7%A0%81%E3%80%82\">http://192.168.240.214:19200/_cat/nodes?pretty，输入新设密码。</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.10.186 58 99 0 0.00 0.07 0.21 cdfhilmrstw - es-186</span><br><span class=\"line\">192.168.10.185 66 68 0 0.00 0.10 0.28 cdfhilmrstw * es-185</span><br><span class=\"line\">192.168.10.183 56 88 0 0.03 0.05 0.06 cdfhilmrstw - es-183</span><br><span class=\"line\">192.168.10.184 42 98 0 0.07 0.07 0.08 cdfhilmrstw - es-184</span><br><span class=\"line\">192.168.10.181 15 63 0 0.27 0.09 0.16 cdfhilmrstw - es-181</span><br><span class=\"line\">192.168.10.182 54 57 9 1.39 0.63 0.56 cdfhilmrstw - es-182</span><br></pre></td></tr></table></figure>\n<h3 id=\"可选安装kibana\">可选安装kibana</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name dev-kibana-standalone-01  -p 5601:5601 -e &quot;ELASTICSEARCH_HOSTS=http://119.23.155.163:9200/&quot; docker.elastic.co/kibana/kibana:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it dev-kibana-standalone-01 /bin/bash\t\t# 进入容器内部</span><br><span class=\"line\">cat /usr/share/kibana/config/kibana.yml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Default Kibana configuration for docker target</span><br><span class=\"line\">server.host: &quot;0&quot;</span><br><span class=\"line\">server.shutdownTimeout: &quot;5s&quot;</span><br><span class=\"line\">elasticsearch.hosts: [ &quot;http://elasticsearch:9200&quot; ]</span><br><span class=\"line\">monitoring.ui.container.elasticsearch.enabled: true</span><br><span class=\"line\"></span><br><span class=\"line\">i18n.locale: zh-CN</span><br><span class=\"line\">#elasticsearch.username: elastic</span><br><span class=\"line\">#elasticsearch.password: szt@#es</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"错误处理\">错误处理</h3>\n<p>原因：新实例共享使用了旧实例的数据文件夹<br>\n解决方法：停止docker es实例，删除data和logs文件夹内数据，重新run.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread &quot;main&quot; java.lang.RuntimeException: starting java failed with [1]</span><br><span class=\"line\">output:</span><br><span class=\"line\">[0.000s][error][logging] Error opening log file &#x27;logs/gc.log&#x27;: Permission denied</span><br><span class=\"line\">[0.000s][error][logging] Initialization of output &#x27;file=logs/gc.log&#x27; using options &#x27;filecount=32,filesize=64m&#x27; failed.</span><br><span class=\"line\">error:</span><br><span class=\"line\">Invalid -Xlog option &#x27;-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m&#x27;, see error log for details.</span><br><span class=\"line\">Error: Could not create the Java Virtual Machine.</span><br><span class=\"line\">Error: A fatal exception has occurred. Program will exit.</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOption.flagsFinal(JvmOption.java:119)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOption.findFinalOptions(JvmOption.java:81)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmErgonomics.choose(JvmErgonomics.java:38)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOptionsParser.jvmOptions(JvmOptionsParser.java:135)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOptionsParser.main(JvmOptionsParser.java:86)</span><br></pre></td></tr></table></figure>\n<p>原因：/usr/share/elasticsearch/config/elastic-certificates.p12创建后没有访问权限。<br>\n解决方法：进入容器，chmod 777暴力授权。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;stacktrace&quot;: [&quot;org.elasticsearch.bootstrap.StartupException: ElasticsearchSecurityException[failed to load SSL configuration [xpack.security.transport.ssl]]; nested: ElasticsearchException[failed to initialize SSL TrustManager - not permitted to read truststore file [/usr/share/elasticsearch/config/elastic-certificates.p12]]; </span><br></pre></td></tr></table></figure>\n<p>prod_middleware_es_01_1  | {“type”: “server”, “timestamp”: “2023-07-21T06:46:19,857Z”, “level”: “ERROR”, “component”: “o.e.b.ElasticsearchUncaughtExceptionHandler”, “<a href=\"http://cluster.name\">cluster.name</a>”: “prod-middleware-elasticsearch”, “<a href=\"http://node.name\">node.name</a>”: “middleware-es-node001”, “message”: “uncaught exception in thread [main]”,</p>\n<p>解决方法：原来的docker没停掉。停止然后删除就行。</p>\n<p>node settings must not contain any index level settings</p>\n<p>副本数<br>\n分片数</p>\n","excerpt":"","more":"<p><a href=\"https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\">https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html</a></p>\n<h3 id=\"前置工作\">前置工作</h3>\n<p>创建外置目录，修改进程可使用最大虚拟内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/elasticsearch/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\">echo &quot;vm.max_map_count=262144&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">cat /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br><span class=\"line\"></span><br><span class=\"line\">#vm.max_map_count = 262144</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\">创建配置文件</h3>\n<p>每个节点<code>/docker_data/elasticsearch/config/elasticsearch.yml</code>,<a href=\"http://xn--node-486fx14i.name\">修改node.name</a>，network.publish_host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span><br><span class=\"line\">cluster.name: prod-env-es</span><br><span class=\"line\">#节点名称</span><br><span class=\"line\">node.name: es-182</span><br><span class=\"line\">#设置索引数据的存储路径</span><br><span class=\"line\">path.data: ./data</span><br><span class=\"line\">#设置日志的存储路径</span><br><span class=\"line\">path.logs: ./logs</span><br><span class=\"line\">#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中</span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\">network.publish_host: 192.168.10.182</span><br><span class=\"line\">#设置对外服务的http端口</span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\">transport.tcp.port: 9300</span><br><span class=\"line\">#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点</span><br><span class=\"line\">#discovery.zen.ping.unicast.hosts: [&quot;0.0.0.0&quot;]</span><br><span class=\"line\">discovery.seed_hosts: [&quot;192.168.10.181:9300&quot;,&quot;192.168.10.182:9300&quot;,&quot;192.168.10.183:9300&quot;,&quot;192.168.10.184:9300&quot;,&quot;192.168.10.185:9300&quot;,&quot;192.168.10.186:9300&quot;]</span><br><span class=\"line\">cluster.initial_master_nodes: [&quot;es-181&quot;, &quot;es-182&quot;,&quot;es-183&quot;, &quot;es-184&quot;, &quot;es-185&quot;, &quot;es-186&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">node.master: true</span><br><span class=\"line\">node.data: true</span><br><span class=\"line\"></span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\">http.cors.allow-origin: &quot;*&quot;</span><br><span class=\"line\">## java.lang.IllegalArgumentException: node settings must not contain any index level settings</span><br><span class=\"line\">## 设置默认索引副本个数</span><br><span class=\"line\">#index.number_of_replicas: 1</span><br><span class=\"line\">## 设置默认索引分片个数 5</span><br><span class=\"line\">#index.number_of_shards: 5</span><br><span class=\"line\">## 索引缓存</span><br><span class=\"line\">#indices.memory.index_buffer_size: 512m</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建实例\">创建实例</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">记得修改名称和ES_JAVA_OPTS</span></span><br><span class=\"line\">docker run  --name prod_es_cluster_01 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/data:/usr/share/elasticsearch/data \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/plugins:/usr/share/elasticsearch/plugins \\</span><br><span class=\"line\">-v /docker_data/elasticsearch/logs:/usr/share/elasticsearch/logs \\</span><br><span class=\"line\">-e ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; \\</span><br><span class=\"line\">-e TAKE_FILE_OWNERSHIP=true \\</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成密钥\">生成密钥</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入容器</span><br><span class=\"line\">docker exec -it prod_es_cluster_01 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 生成密钥</span><br><span class=\"line\">bin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass &quot;&quot;</span><br><span class=\"line\">cd /usr/share/elasticsearch/config/</span><br><span class=\"line\">chmod 777 elastic-certificates.p12</span><br><span class=\"line\">exit</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制到宿主机</span><br><span class=\"line\">docker cp prod_es_cluster_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/elasticsearch/config/elastic-certificates.p12 </span><br></pre></td></tr></table></figure>\n<h3 id=\"分发密钥\">分发密钥</h3>\n<p>2-6主机均需复制</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp /docker_data/elasticsearch/config/elastic-certificates.p12 prod_es_cluster_02:/usr/share/elasticsearch/config/elastic-certificates.p12</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：</span><br><span class=\"line\">xpack.security.enabled: true</span><br><span class=\"line\">xpack.license.self_generated.type: basic</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: true</span><br><span class=\"line\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br></pre></td></tr></table></figure>\n<p>重启docker-es实例</p>\n<h3 id=\"修改密码\">修改密码</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose exec prod_middleware_es_02 bash</span><br><span class=\"line\">docker-compose exec prod_middleware_es_02 bash</span><br><span class=\"line\">[root@node1 ~]# docker-compose exec prod_middleware_es_02 bash</span><br><span class=\"line\">bash-4.4# bin/elasticsearch-setup-passwords interactive</span><br><span class=\"line\">Initiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.</span><br><span class=\"line\">You will be prompted to enter passwords as the process progresses.</span><br><span class=\"line\">Please confirm that you would like to continue [y/N]y</span><br><span class=\"line\"><span class=\"meta prompt_\">elastic#</span><span class=\"language-bash\">SZT5764</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"验证集群\">验证集群</h3>\n<p>打开：<a href=\"http://192.168.240.214:19200/_cat/nodes?pretty%EF%BC%8C%E8%BE%93%E5%85%A5%E6%96%B0%E8%AE%BE%E5%AF%86%E7%A0%81%E3%80%82\">http://192.168.240.214:19200/_cat/nodes?pretty，输入新设密码。</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.10.186 58 99 0 0.00 0.07 0.21 cdfhilmrstw - es-186</span><br><span class=\"line\">192.168.10.185 66 68 0 0.00 0.10 0.28 cdfhilmrstw * es-185</span><br><span class=\"line\">192.168.10.183 56 88 0 0.03 0.05 0.06 cdfhilmrstw - es-183</span><br><span class=\"line\">192.168.10.184 42 98 0 0.07 0.07 0.08 cdfhilmrstw - es-184</span><br><span class=\"line\">192.168.10.181 15 63 0 0.27 0.09 0.16 cdfhilmrstw - es-181</span><br><span class=\"line\">192.168.10.182 54 57 9 1.39 0.63 0.56 cdfhilmrstw - es-182</span><br></pre></td></tr></table></figure>\n<h3 id=\"可选安装kibana\">可选安装kibana</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name dev-kibana-standalone-01  -p 5601:5601 -e &quot;ELASTICSEARCH_HOSTS=http://119.23.155.163:9200/&quot; docker.elastic.co/kibana/kibana:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it dev-kibana-standalone-01 /bin/bash\t\t# 进入容器内部</span><br><span class=\"line\">cat /usr/share/kibana/config/kibana.yml</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># Default Kibana configuration for docker target</span><br><span class=\"line\">server.host: &quot;0&quot;</span><br><span class=\"line\">server.shutdownTimeout: &quot;5s&quot;</span><br><span class=\"line\">elasticsearch.hosts: [ &quot;http://elasticsearch:9200&quot; ]</span><br><span class=\"line\">monitoring.ui.container.elasticsearch.enabled: true</span><br><span class=\"line\"></span><br><span class=\"line\">i18n.locale: zh-CN</span><br><span class=\"line\">#elasticsearch.username: elastic</span><br><span class=\"line\">#elasticsearch.password: szt@#es</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"错误处理\">错误处理</h3>\n<p>原因：新实例共享使用了旧实例的数据文件夹<br>\n解决方法：停止docker es实例，删除data和logs文件夹内数据，重新run.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread &quot;main&quot; java.lang.RuntimeException: starting java failed with [1]</span><br><span class=\"line\">output:</span><br><span class=\"line\">[0.000s][error][logging] Error opening log file &#x27;logs/gc.log&#x27;: Permission denied</span><br><span class=\"line\">[0.000s][error][logging] Initialization of output &#x27;file=logs/gc.log&#x27; using options &#x27;filecount=32,filesize=64m&#x27; failed.</span><br><span class=\"line\">error:</span><br><span class=\"line\">Invalid -Xlog option &#x27;-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m&#x27;, see error log for details.</span><br><span class=\"line\">Error: Could not create the Java Virtual Machine.</span><br><span class=\"line\">Error: A fatal exception has occurred. Program will exit.</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOption.flagsFinal(JvmOption.java:119)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOption.findFinalOptions(JvmOption.java:81)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmErgonomics.choose(JvmErgonomics.java:38)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOptionsParser.jvmOptions(JvmOptionsParser.java:135)</span><br><span class=\"line\">        at org.elasticsearch.tools.launchers.JvmOptionsParser.main(JvmOptionsParser.java:86)</span><br></pre></td></tr></table></figure>\n<p>原因：/usr/share/elasticsearch/config/elastic-certificates.p12创建后没有访问权限。<br>\n解决方法：进入容器，chmod 777暴力授权。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;stacktrace&quot;: [&quot;org.elasticsearch.bootstrap.StartupException: ElasticsearchSecurityException[failed to load SSL configuration [xpack.security.transport.ssl]]; nested: ElasticsearchException[failed to initialize SSL TrustManager - not permitted to read truststore file [/usr/share/elasticsearch/config/elastic-certificates.p12]]; </span><br></pre></td></tr></table></figure>\n<p>prod_middleware_es_01_1  | {“type”: “server”, “timestamp”: “2023-07-21T06:46:19,857Z”, “level”: “ERROR”, “component”: “o.e.b.ElasticsearchUncaughtExceptionHandler”, “<a href=\"http://cluster.name\">cluster.name</a>”: “prod-middleware-elasticsearch”, “<a href=\"http://node.name\">node.name</a>”: “middleware-es-node001”, “message”: “uncaught exception in thread [main]”,</p>\n<p>解决方法：原来的docker没停掉。停止然后删除就行。</p>\n<p>node settings must not contain any index level settings</p>\n<p>副本数<br>\n分片数</p>\n"},{"_content":"\nhttps://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\n\n### 前置工作\n创建外置目录，修改进程可使用最大虚拟内存\n```\nmkdir -p /docker_data/elasticsearch/{config,data,plugins,logs}\necho \"vm.max_map_count=655300\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n#vm.max_map_count = 655300\n```\n### 创建配置文件\n\n```shell\n#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。\ncluster.name: prod-env-es\n#节点名称\nnode.name: es-182\n#设置索引数据的存储路径\npath.data: ./data\n#设置日志的存储路径\npath.logs: ./logs\n#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中\nnetwork.host: 0.0.0.0\nnetwork.publish_host: 192.168.10.182\n#设置对外服务的http端口\nhttp.port: 9200\ntransport.tcp.port: 9300\n#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点\n#discovery.zen.ping.unicast.hosts: [\"0.0.0.0\"]\ndiscovery.seed_hosts: [\"192.168.10.181:9300\",\"192.168.10.182:9300\",\"192.168.10.183:9300\",\"192.168.10.184:9300\",\"192.168.10.185:9300\",\"192.168.10.186:9300\"]\ncluster.initial_master_nodes: [\"es-181\", \"es-182\",\"es-183\", \"es-184\", \"es-185\", \"es-186\"]\n\n# 指定该节点是否存储索引数据\nnode.master: true\nnode.data: true\n\n# 设置默认索引分片个数 6*3\nindex.number_of_shards: 18\n# 设置默认索引副本个数\nindex.number_of_replicas: 1\n# 设置为true来锁住内存不进行swapping\nbootstrap.mlockall: true\n# 支持跨域，不设置也不影响\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n# 集群证书相关\nxpack.security.enabled: true\nxpack.license.self_generated.type: basic\nxpack.security.transport.ssl.enabled: true\nxpack.security.transport.ssl.verification_mode: certificate\nxpack.security.transport.ssl.keystore.path: elastic-certificates.p12\nxpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n```\n\n\n\n\nPUT /_template/log\n{\n  \"template\": \"*\",\n  \"settings\": {\n    \"number_of_shards\": 5,\n    \"number_of_replicas\": \"1\"\n  }\n}","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch配置.md","raw":"\nhttps://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\n\n### 前置工作\n创建外置目录，修改进程可使用最大虚拟内存\n```\nmkdir -p /docker_data/elasticsearch/{config,data,plugins,logs}\necho \"vm.max_map_count=655300\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n#vm.max_map_count = 655300\n```\n### 创建配置文件\n\n```shell\n#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。\ncluster.name: prod-env-es\n#节点名称\nnode.name: es-182\n#设置索引数据的存储路径\npath.data: ./data\n#设置日志的存储路径\npath.logs: ./logs\n#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中\nnetwork.host: 0.0.0.0\nnetwork.publish_host: 192.168.10.182\n#设置对外服务的http端口\nhttp.port: 9200\ntransport.tcp.port: 9300\n#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点\n#discovery.zen.ping.unicast.hosts: [\"0.0.0.0\"]\ndiscovery.seed_hosts: [\"192.168.10.181:9300\",\"192.168.10.182:9300\",\"192.168.10.183:9300\",\"192.168.10.184:9300\",\"192.168.10.185:9300\",\"192.168.10.186:9300\"]\ncluster.initial_master_nodes: [\"es-181\", \"es-182\",\"es-183\", \"es-184\", \"es-185\", \"es-186\"]\n\n# 指定该节点是否存储索引数据\nnode.master: true\nnode.data: true\n\n# 设置默认索引分片个数 6*3\nindex.number_of_shards: 18\n# 设置默认索引副本个数\nindex.number_of_replicas: 1\n# 设置为true来锁住内存不进行swapping\nbootstrap.mlockall: true\n# 支持跨域，不设置也不影响\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n\n# 集群证书相关\nxpack.security.enabled: true\nxpack.license.self_generated.type: basic\nxpack.security.transport.ssl.enabled: true\nxpack.security.transport.ssl.verification_mode: certificate\nxpack.security.transport.ssl.keystore.path: elastic-certificates.p12\nxpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n```\n\n\n\n\nPUT /_template/log\n{\n  \"template\": \"*\",\n  \"settings\": {\n    \"number_of_shards\": 5,\n    \"number_of_replicas\": \"1\"\n  }\n}","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Elasticsearch配置","published":1,"date":"2023-09-01T13:06:37.820Z","updated":"2023-08-26T07:55:16.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2d001szb8a2et5f07y","content":"<p><a href=\"https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\">https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html</a></p>\n<h3 id=\"前置工作\">前置工作</h3>\n<p>创建外置目录，修改进程可使用最大虚拟内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/elasticsearch/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\">echo &quot;vm.max_map_count=655300&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">cat /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br><span class=\"line\"></span><br><span class=\"line\">#vm.max_map_count = 655300</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\">创建配置文件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span></span><br><span class=\"line\">cluster.name: prod-env-es</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">节点名称</span></span><br><span class=\"line\">node.name: es-182</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置索引数据的存储路径</span></span><br><span class=\"line\">path.data: ./data</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置日志的存储路径</span></span><br><span class=\"line\">path.logs: ./logs</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中</span></span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\">network.publish_host: 192.168.10.182</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置对外服务的http端口</span></span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\">transport.tcp.port: 9300</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">discovery.zen.ping.unicast.hosts: [<span class=\"string\">&quot;0.0.0.0&quot;</span>]</span></span><br><span class=\"line\">discovery.seed_hosts: [&quot;192.168.10.181:9300&quot;,&quot;192.168.10.182:9300&quot;,&quot;192.168.10.183:9300&quot;,&quot;192.168.10.184:9300&quot;,&quot;192.168.10.185:9300&quot;,&quot;192.168.10.186:9300&quot;]</span><br><span class=\"line\">cluster.initial_master_nodes: [&quot;es-181&quot;, &quot;es-182&quot;,&quot;es-183&quot;, &quot;es-184&quot;, &quot;es-185&quot;, &quot;es-186&quot;]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定该节点是否存储索引数据</span></span><br><span class=\"line\">node.master: true</span><br><span class=\"line\">node.data: true</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置默认索引分片个数 6*3</span></span><br><span class=\"line\">index.number_of_shards: 18</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置默认索引副本个数</span></span><br><span class=\"line\">index.number_of_replicas: 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置为<span class=\"literal\">true</span>来锁住内存不进行swapping</span></span><br><span class=\"line\">bootstrap.mlockall: true</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">支持跨域，不设置也不影响</span></span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\">http.cors.allow-origin: &quot;*&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">集群证书相关</span></span><br><span class=\"line\">xpack.security.enabled: true</span><br><span class=\"line\">xpack.license.self_generated.type: basic</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: true</span><br><span class=\"line\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br></pre></td></tr></table></figure>\n<p>PUT /_template/log<br>\n{<br>\n“template”: “*”,<br>\n“settings”: {<br>\n“number_of_shards”: 5,<br>\n“number_of_replicas”: “1”<br>\n}<br>\n}</p>\n","excerpt":"","more":"<p><a href=\"https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\">https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html</a></p>\n<h3 id=\"前置工作\">前置工作</h3>\n<p>创建外置目录，修改进程可使用最大虚拟内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/elasticsearch/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\">echo &quot;vm.max_map_count=655300&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">cat /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br><span class=\"line\"></span><br><span class=\"line\">#vm.max_map_count = 655300</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\">创建配置文件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span></span><br><span class=\"line\">cluster.name: prod-env-es</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">节点名称</span></span><br><span class=\"line\">node.name: es-182</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置索引数据的存储路径</span></span><br><span class=\"line\">path.data: ./data</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置日志的存储路径</span></span><br><span class=\"line\">path.logs: ./logs</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中</span></span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\">network.publish_host: 192.168.10.182</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置对外服务的http端口</span></span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\">transport.tcp.port: 9300</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">discovery.zen.ping.unicast.hosts: [<span class=\"string\">&quot;0.0.0.0&quot;</span>]</span></span><br><span class=\"line\">discovery.seed_hosts: [&quot;192.168.10.181:9300&quot;,&quot;192.168.10.182:9300&quot;,&quot;192.168.10.183:9300&quot;,&quot;192.168.10.184:9300&quot;,&quot;192.168.10.185:9300&quot;,&quot;192.168.10.186:9300&quot;]</span><br><span class=\"line\">cluster.initial_master_nodes: [&quot;es-181&quot;, &quot;es-182&quot;,&quot;es-183&quot;, &quot;es-184&quot;, &quot;es-185&quot;, &quot;es-186&quot;]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">指定该节点是否存储索引数据</span></span><br><span class=\"line\">node.master: true</span><br><span class=\"line\">node.data: true</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置默认索引分片个数 6*3</span></span><br><span class=\"line\">index.number_of_shards: 18</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置默认索引副本个数</span></span><br><span class=\"line\">index.number_of_replicas: 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">设置为<span class=\"literal\">true</span>来锁住内存不进行swapping</span></span><br><span class=\"line\">bootstrap.mlockall: true</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">支持跨域，不设置也不影响</span></span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\">http.cors.allow-origin: &quot;*&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">集群证书相关</span></span><br><span class=\"line\">xpack.security.enabled: true</span><br><span class=\"line\">xpack.license.self_generated.type: basic</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: true</span><br><span class=\"line\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br></pre></td></tr></table></figure>\n<p>PUT /_template/log<br>\n{<br>\n“template”: “*”,<br>\n“settings”: {<br>\n“number_of_shards”: 5,<br>\n“number_of_replicas”: “1”<br>\n}<br>\n}</p>\n"},{"_content":"参考：https://zhuanlan.zhihu.com/p/137720038\n官网：https://kafka.apache.org/documentation/#java\n\n\n\n\n```shell\n#JVM参数\n-Xmx6g -Xms6g -XX:MetaspaceSize=96m -XX:+UseG1GC\n-XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M\n-XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+ExplicitGCInvokesConcurrent\n# ----------------------------------------------------------\n#                        Kafka配置\n# 1、两个副本\n# 2、日志，消息保留14天\n# ----------------------------------------------------------\n\n# 单独配置端口\nport=19092\n\n#在服务器上启用主题的自动创建\nauto.create.topics.enable=true\n#默认创建topic的副本数\ndefault.replication.factor=2\n# 表示消息至少要被写入副本数才算是“已提交”,设置1<min.insync.replicas<default.replication.factor的值\nmin.insync.replicas=1\n# follower拉取leader副本消息的线程数\nnum.replica.fetchers=16\n# borker处理磁盘io的线程数\nnum.io.threads=16\n\n# broker的负载均衡（可以开启），因为数据量不大\nauto.leader.rebalance.enable=true\n# log数据留存时间2周\nlog.retention.hours=336\n# 当producer写入10000条消息时，刷数据到磁盘\nlog.flush.interval.messages=10000\n# 每隔1s刷数据到磁盘\nlog.flush.interval.ms=1000\n# 日志文件大小2G\nlog.segment.bytes = 2147483647\n# 200m，防止oom\nsocket.request.max.bytes=2147483600\n\n\n# topic消息保存时长，此处设14天\nretention.ms=1209600000\n# topic消息总磁盘空间，默认值：1073741824byte即1GB,此处设8G\nretention.bytes=8589934592\n```\n\n\n```shell\n#测试\n\ndocker exec -it prod_loganalysis_kafka_03 /bin/bash\ncd /opt/kafka_2.13-2.8.1/bin\n\n\n#生产消息，总数2000W，吞吐量20000，每条消息1000字节\n./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092\n\n#消费消息，16线程，2000W消息，1MB一次请求\n./kafka-consumer-perf-test.sh --broker-list 192.168.10.182:9092 --topic test_of_kongkong --fetch-size 1048576 --messages 20000000 --threads 16 --reporting-interval 2000 --timeout 10000\n\n```\n\n## 测试记录\n\n```shell\nbash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092\n99962 records sent, 19984.4 records/sec (19.06 MB/sec), 82.5 ms avg latency, 452.0 ms max latency.\n100080 records sent, 20016.0 records/sec (19.09 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.\n99980 records sent, 19992.0 records/sec (19.07 MB/sec), 2.0 ms avg latency, 12.0 ms max latency.\n100060 records sent, 20012.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.\n100012 records sent, 20002.4 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.\n100004 records sent, 19996.8 records/sec (19.07 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 9.0 ms max latency.\n99964 records sent, 19992.8 records/sec (19.07 MB/sec), 45.6 ms avg latency, 222.0 ms max latency.\n100036 records sent, 20003.2 records/sec (19.08 MB/sec), 2.0 ms avg latency, 10.0 ms max latency.\n100056 records sent, 20011.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 11.0 ms max latency.\n99968 records sent, 19989.6 records/sec (19.06 MB/sec), 3.0 ms avg latency, 37.0 ms max latency.\n100036 records sent, 20007.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.\n99936 records sent, 19983.2 records/sec (19.06 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.\n100108 records sent, 20017.6 records/sec (19.09 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.\n99972 records sent, 19994.4 records/sec (19.07 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.\n100044 records sent, 20000.8 records/sec (19.07 MB/sec), 2.1 ms avg latency, 13.0 ms max latency.\n100040 records sent, 20008.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 13.0 ms max latency.\n100000 records sent, 19996.0 records/sec (19.07 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.\n\n\n\nstart.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec\n2023-07-04 11:11:44:634, 2023-07-04 11:13:59:020, 19073.4863, 141.9306, 20000000, 148825.0264, 421, 133965, 142.3766, 149292.7257\n\n\n```\n\n\nprod_cluster_kafka_01_1  | [Configuring] 'default.replication.factor' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'advertised.listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'port' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'log.dirs' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'zookeeper.connect' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'broker.id' in '/opt/kafka/config/server.properties'\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka配置.md","raw":"参考：https://zhuanlan.zhihu.com/p/137720038\n官网：https://kafka.apache.org/documentation/#java\n\n\n\n\n```shell\n#JVM参数\n-Xmx6g -Xms6g -XX:MetaspaceSize=96m -XX:+UseG1GC\n-XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M\n-XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+ExplicitGCInvokesConcurrent\n# ----------------------------------------------------------\n#                        Kafka配置\n# 1、两个副本\n# 2、日志，消息保留14天\n# ----------------------------------------------------------\n\n# 单独配置端口\nport=19092\n\n#在服务器上启用主题的自动创建\nauto.create.topics.enable=true\n#默认创建topic的副本数\ndefault.replication.factor=2\n# 表示消息至少要被写入副本数才算是“已提交”,设置1<min.insync.replicas<default.replication.factor的值\nmin.insync.replicas=1\n# follower拉取leader副本消息的线程数\nnum.replica.fetchers=16\n# borker处理磁盘io的线程数\nnum.io.threads=16\n\n# broker的负载均衡（可以开启），因为数据量不大\nauto.leader.rebalance.enable=true\n# log数据留存时间2周\nlog.retention.hours=336\n# 当producer写入10000条消息时，刷数据到磁盘\nlog.flush.interval.messages=10000\n# 每隔1s刷数据到磁盘\nlog.flush.interval.ms=1000\n# 日志文件大小2G\nlog.segment.bytes = 2147483647\n# 200m，防止oom\nsocket.request.max.bytes=2147483600\n\n\n# topic消息保存时长，此处设14天\nretention.ms=1209600000\n# topic消息总磁盘空间，默认值：1073741824byte即1GB,此处设8G\nretention.bytes=8589934592\n```\n\n\n```shell\n#测试\n\ndocker exec -it prod_loganalysis_kafka_03 /bin/bash\ncd /opt/kafka_2.13-2.8.1/bin\n\n\n#生产消息，总数2000W，吞吐量20000，每条消息1000字节\n./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092\n\n#消费消息，16线程，2000W消息，1MB一次请求\n./kafka-consumer-perf-test.sh --broker-list 192.168.10.182:9092 --topic test_of_kongkong --fetch-size 1048576 --messages 20000000 --threads 16 --reporting-interval 2000 --timeout 10000\n\n```\n\n## 测试记录\n\n```shell\nbash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092\n99962 records sent, 19984.4 records/sec (19.06 MB/sec), 82.5 ms avg latency, 452.0 ms max latency.\n100080 records sent, 20016.0 records/sec (19.09 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.\n99980 records sent, 19992.0 records/sec (19.07 MB/sec), 2.0 ms avg latency, 12.0 ms max latency.\n100060 records sent, 20012.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.\n100012 records sent, 20002.4 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.\n100004 records sent, 19996.8 records/sec (19.07 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.\n100020 records sent, 20004.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 9.0 ms max latency.\n99964 records sent, 19992.8 records/sec (19.07 MB/sec), 45.6 ms avg latency, 222.0 ms max latency.\n100036 records sent, 20003.2 records/sec (19.08 MB/sec), 2.0 ms avg latency, 10.0 ms max latency.\n100056 records sent, 20011.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 11.0 ms max latency.\n99968 records sent, 19989.6 records/sec (19.06 MB/sec), 3.0 ms avg latency, 37.0 ms max latency.\n100036 records sent, 20007.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.\n99936 records sent, 19983.2 records/sec (19.06 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.\n100108 records sent, 20017.6 records/sec (19.09 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.\n99972 records sent, 19994.4 records/sec (19.07 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.\n100044 records sent, 20000.8 records/sec (19.07 MB/sec), 2.1 ms avg latency, 13.0 ms max latency.\n100040 records sent, 20008.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 13.0 ms max latency.\n100000 records sent, 19996.0 records/sec (19.07 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.\n\n\n\nstart.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec\n2023-07-04 11:11:44:634, 2023-07-04 11:13:59:020, 19073.4863, 141.9306, 20000000, 148825.0264, 421, 133965, 142.3766, 149292.7257\n\n\n```\n\n\nprod_cluster_kafka_01_1  | [Configuring] 'default.replication.factor' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'advertised.listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'port' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'log.dirs' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'listeners' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config\nprod_cluster_kafka_01_1  | [Configuring] 'zookeeper.connect' in '/opt/kafka/config/server.properties'\nprod_cluster_kafka_01_1  | [Configuring] 'broker.id' in '/opt/kafka/config/server.properties'\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka配置","published":1,"date":"2023-09-01T13:06:37.830Z","updated":"2023-08-26T07:23:34.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2d001tzb8aa0ox7u24","content":"<p>参考：<a href=\"https://zhuanlan.zhihu.com/p/137720038\">https://zhuanlan.zhihu.com/p/137720038</a><br>\n官网：<a href=\"https://kafka.apache.org/documentation/#java\">https://kafka.apache.org/documentation/#java</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">JVM参数</span></span><br><span class=\"line\">-Xmx6g -Xms6g -XX:MetaspaceSize=96m -XX:+UseG1GC</span><br><span class=\"line\">-XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M</span><br><span class=\"line\">-XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+ExplicitGCInvokesConcurrent</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">                       Kafka配置</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1、两个副本</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2、日志，消息保留14天</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">单独配置端口</span></span><br><span class=\"line\">port=19092</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">在服务器上启用主题的自动创建</span></span><br><span class=\"line\">auto.create.topics.enable=true</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认创建topic的副本数</span></span><br><span class=\"line\">default.replication.factor=2</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">表示消息至少要被写入副本数才算是“已提交”,设置1&lt;min.insync.replicas&lt;default.replication.factor的值</span></span><br><span class=\"line\">min.insync.replicas=1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">follower拉取leader副本消息的线程数</span></span><br><span class=\"line\">num.replica.fetchers=16</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">borker处理磁盘io的线程数</span></span><br><span class=\"line\">num.io.threads=16</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">broker的负载均衡（可以开启），因为数据量不大</span></span><br><span class=\"line\">auto.leader.rebalance.enable=true</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">log</span>数据留存时间2周</span></span><br><span class=\"line\">log.retention.hours=336</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">当producer写入10000条消息时，刷数据到磁盘</span></span><br><span class=\"line\">log.flush.interval.messages=10000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每隔1s刷数据到磁盘</span></span><br><span class=\"line\">log.flush.interval.ms=1000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">日志文件大小2G</span></span><br><span class=\"line\">log.segment.bytes = 2147483647</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">200m，防止oom</span></span><br><span class=\"line\">socket.request.max.bytes=2147483600</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">topic消息保存时长，此处设14天</span></span><br><span class=\"line\">retention.ms=1209600000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">topic消息总磁盘空间，默认值：1073741824byte即1GB,此处设8G</span></span><br><span class=\"line\">retention.bytes=8589934592</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">测试</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it prod_loganalysis_kafka_03 /bin/bash</span><br><span class=\"line\">cd /opt/kafka_2.13-2.8.1/bin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">生产消息，总数2000W，吞吐量20000，每条消息1000字节</span></span><br><span class=\"line\">./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">消费消息，16线程，2000W消息，1MB一次请求</span></span><br><span class=\"line\">./kafka-consumer-perf-test.sh --broker-list 192.168.10.182:9092 --topic test_of_kongkong --fetch-size 1048576 --messages 20000000 --threads 16 --reporting-interval 2000 --timeout 10000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"测试记录\">测试记录</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092</span><br><span class=\"line\">99962 records sent, 19984.4 records/sec (19.06 MB/sec), 82.5 ms avg latency, 452.0 ms max latency.</span><br><span class=\"line\">100080 records sent, 20016.0 records/sec (19.09 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.</span><br><span class=\"line\">99980 records sent, 19992.0 records/sec (19.07 MB/sec), 2.0 ms avg latency, 12.0 ms max latency.</span><br><span class=\"line\">100060 records sent, 20012.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.</span><br><span class=\"line\">100012 records sent, 20002.4 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.</span><br><span class=\"line\">100004 records sent, 19996.8 records/sec (19.07 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 9.0 ms max latency.</span><br><span class=\"line\">99964 records sent, 19992.8 records/sec (19.07 MB/sec), 45.6 ms avg latency, 222.0 ms max latency.</span><br><span class=\"line\">100036 records sent, 20003.2 records/sec (19.08 MB/sec), 2.0 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">100056 records sent, 20011.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 11.0 ms max latency.</span><br><span class=\"line\">99968 records sent, 19989.6 records/sec (19.06 MB/sec), 3.0 ms avg latency, 37.0 ms max latency.</span><br><span class=\"line\">100036 records sent, 20007.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.</span><br><span class=\"line\">99936 records sent, 19983.2 records/sec (19.06 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">100108 records sent, 20017.6 records/sec (19.09 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">99972 records sent, 19994.4 records/sec (19.07 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">100044 records sent, 20000.8 records/sec (19.07 MB/sec), 2.1 ms avg latency, 13.0 ms max latency.</span><br><span class=\"line\">100040 records sent, 20008.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 13.0 ms max latency.</span><br><span class=\"line\">100000 records sent, 19996.0 records/sec (19.07 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">start.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec</span><br><span class=\"line\">2023-07-04 11:11:44:634, 2023-07-04 11:13:59:020, 19073.4863, 141.9306, 20000000, 148825.0264, 421, 133965, 142.3766, 149292.7257</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>prod_cluster_kafka_01_1  | [Configuring] ‘default.replication.factor’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘advertised.listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘port’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘log.dirs’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘zookeeper.connect’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘<a href=\"http://broker.id\">broker.id</a>’ in ‘/opt/kafka/config/server.properties’</p>\n","excerpt":"","more":"<p>参考：<a href=\"https://zhuanlan.zhihu.com/p/137720038\">https://zhuanlan.zhihu.com/p/137720038</a><br>\n官网：<a href=\"https://kafka.apache.org/documentation/#java\">https://kafka.apache.org/documentation/#java</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">JVM参数</span></span><br><span class=\"line\">-Xmx6g -Xms6g -XX:MetaspaceSize=96m -XX:+UseG1GC</span><br><span class=\"line\">-XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M</span><br><span class=\"line\">-XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80 -XX:+ExplicitGCInvokesConcurrent</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">                       Kafka配置</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1、两个副本</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2、日志，消息保留14天</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">----------------------------------------------------------</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">单独配置端口</span></span><br><span class=\"line\">port=19092</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">在服务器上启用主题的自动创建</span></span><br><span class=\"line\">auto.create.topics.enable=true</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认创建topic的副本数</span></span><br><span class=\"line\">default.replication.factor=2</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">表示消息至少要被写入副本数才算是“已提交”,设置1&lt;min.insync.replicas&lt;default.replication.factor的值</span></span><br><span class=\"line\">min.insync.replicas=1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">follower拉取leader副本消息的线程数</span></span><br><span class=\"line\">num.replica.fetchers=16</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">borker处理磁盘io的线程数</span></span><br><span class=\"line\">num.io.threads=16</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">broker的负载均衡（可以开启），因为数据量不大</span></span><br><span class=\"line\">auto.leader.rebalance.enable=true</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">log</span>数据留存时间2周</span></span><br><span class=\"line\">log.retention.hours=336</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">当producer写入10000条消息时，刷数据到磁盘</span></span><br><span class=\"line\">log.flush.interval.messages=10000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">每隔1s刷数据到磁盘</span></span><br><span class=\"line\">log.flush.interval.ms=1000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">日志文件大小2G</span></span><br><span class=\"line\">log.segment.bytes = 2147483647</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">200m，防止oom</span></span><br><span class=\"line\">socket.request.max.bytes=2147483600</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">topic消息保存时长，此处设14天</span></span><br><span class=\"line\">retention.ms=1209600000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">topic消息总磁盘空间，默认值：1073741824byte即1GB,此处设8G</span></span><br><span class=\"line\">retention.bytes=8589934592</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">测试</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it prod_loganalysis_kafka_03 /bin/bash</span><br><span class=\"line\">cd /opt/kafka_2.13-2.8.1/bin</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">生产消息，总数2000W，吞吐量20000，每条消息1000字节</span></span><br><span class=\"line\">./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">消费消息，16线程，2000W消息，1MB一次请求</span></span><br><span class=\"line\">./kafka-consumer-perf-test.sh --broker-list 192.168.10.182:9092 --topic test_of_kongkong --fetch-size 1048576 --messages 20000000 --threads 16 --reporting-interval 2000 --timeout 10000</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"测试记录\">测试记录</h2>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash-5.1# ./kafka-producer-perf-test.sh --topic test_of_kongkong --num-records 20000000 --record-size 1000  --throughput 20000 --producer-props bootstrap.servers=192.168.10.182:9092</span><br><span class=\"line\">99962 records sent, 19984.4 records/sec (19.06 MB/sec), 82.5 ms avg latency, 452.0 ms max latency.</span><br><span class=\"line\">100080 records sent, 20016.0 records/sec (19.09 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.</span><br><span class=\"line\">99980 records sent, 19992.0 records/sec (19.07 MB/sec), 2.0 ms avg latency, 12.0 ms max latency.</span><br><span class=\"line\">100060 records sent, 20012.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.</span><br><span class=\"line\">100012 records sent, 20002.4 records/sec (19.08 MB/sec), 2.0 ms avg latency, 11.0 ms max latency.</span><br><span class=\"line\">100004 records sent, 19996.8 records/sec (19.07 MB/sec), 2.0 ms avg latency, 8.0 ms max latency.</span><br><span class=\"line\">100020 records sent, 20004.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 9.0 ms max latency.</span><br><span class=\"line\">99964 records sent, 19992.8 records/sec (19.07 MB/sec), 45.6 ms avg latency, 222.0 ms max latency.</span><br><span class=\"line\">100036 records sent, 20003.2 records/sec (19.08 MB/sec), 2.0 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">100056 records sent, 20011.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 11.0 ms max latency.</span><br><span class=\"line\">99968 records sent, 19989.6 records/sec (19.06 MB/sec), 3.0 ms avg latency, 37.0 ms max latency.</span><br><span class=\"line\">100036 records sent, 20007.2 records/sec (19.08 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.</span><br><span class=\"line\">99936 records sent, 19983.2 records/sec (19.06 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">100108 records sent, 20017.6 records/sec (19.09 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">99972 records sent, 19994.4 records/sec (19.07 MB/sec), 2.1 ms avg latency, 10.0 ms max latency.</span><br><span class=\"line\">100044 records sent, 20000.8 records/sec (19.07 MB/sec), 2.1 ms avg latency, 13.0 ms max latency.</span><br><span class=\"line\">100040 records sent, 20008.0 records/sec (19.08 MB/sec), 2.0 ms avg latency, 13.0 ms max latency.</span><br><span class=\"line\">100000 records sent, 19996.0 records/sec (19.07 MB/sec), 2.1 ms avg latency, 12.0 ms max latency.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">start.time, end.time, data.consumed.in.MB, MB.sec, data.consumed.in.nMsg, nMsg.sec, rebalance.time.ms, fetch.time.ms, fetch.MB.sec, fetch.nMsg.sec</span><br><span class=\"line\">2023-07-04 11:11:44:634, 2023-07-04 11:13:59:020, 19073.4863, 141.9306, 20000000, 148825.0264, 421, 133965, 142.3766, 149292.7257</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>prod_cluster_kafka_01_1  | [Configuring] ‘default.replication.factor’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘advertised.listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘port’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_HOME from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘log.dirs’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘listeners’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | Excluding KAFKA_VERSION from broker config<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘zookeeper.connect’ in ‘/opt/kafka/config/server.properties’<br>\nprod_cluster_kafka_01_1  | [Configuring] ‘<a href=\"http://broker.id\">broker.id</a>’ in ‘/opt/kafka/config/server.properties’</p>\n"},{"_content":"\n````shell\nmkdir -p /docker_data/kafka/{config,data,plugins,logs}\n\ndocker stop prod_kafka_cluster_01 && docker rm prod_kafka_cluster_01\ndocker logs prod_kafka_cluster_02\n```\n\n\n需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS\n\n```shell\ndocker run --name prod_kafka_cluster_01 \\\n-e KAFKA_BROKER_ID=1 \\\n-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.181:9092 \\\n-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.181:2181,192.168.10.182:2181,192.168.10.183:2181,192.168.10.184:2181,192.168.10.185:2181,192.168.10.186:2181 \\\n-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\\n-e KAFKA_HEAP_OPTS=\"-Xmx1024m -Xms1024m\" \\\n-e TZ='Asia/Shanghai' \\\n-e LANG=\"en_US.UTF-8\" \\\n-v /docker_data/kafka:/kafka \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /etc/localtime:/etc/localtime \\\n--network=host --privileged=true --restart=always \\\n-d wurstmeister/kafka:2.13-2.8.1\n```","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka.md","raw":"\n````shell\nmkdir -p /docker_data/kafka/{config,data,plugins,logs}\n\ndocker stop prod_kafka_cluster_01 && docker rm prod_kafka_cluster_01\ndocker logs prod_kafka_cluster_02\n```\n\n\n需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS\n\n```shell\ndocker run --name prod_kafka_cluster_01 \\\n-e KAFKA_BROKER_ID=1 \\\n-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.181:9092 \\\n-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.181:2181,192.168.10.182:2181,192.168.10.183:2181,192.168.10.184:2181,192.168.10.185:2181,192.168.10.186:2181 \\\n-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\\n-e KAFKA_HEAP_OPTS=\"-Xmx1024m -Xms1024m\" \\\n-e TZ='Asia/Shanghai' \\\n-e LANG=\"en_US.UTF-8\" \\\n-v /docker_data/kafka:/kafka \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /etc/localtime:/etc/localtime \\\n--network=host --privileged=true --restart=always \\\n-d wurstmeister/kafka:2.13-2.8.1\n```","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Kafka","published":1,"date":"2023-09-01T13:06:37.830Z","updated":"2023-07-03T09:31:28.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2e001uzb8afd6gc202","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/kafka/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">docker stop prod_kafka_cluster_01 &amp;&amp; docker rm prod_kafka_cluster_01</span><br><span class=\"line\">docker logs prod_kafka_cluster_02</span><br></pre></td></tr></table></figure>\n<p>需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name prod_kafka_cluster_01 \\</span><br><span class=\"line\">-e KAFKA_BROKER_ID=1 \\</span><br><span class=\"line\">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.181:9092 \\</span><br><span class=\"line\">-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.181:2181,192.168.10.182:2181,192.168.10.183:2181,192.168.10.184:2181,192.168.10.185:2181,192.168.10.186:2181 \\</span><br><span class=\"line\">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\</span><br><span class=\"line\">-e KAFKA_HEAP_OPTS=&quot;-Xmx1024m -Xms1024m&quot; \\</span><br><span class=\"line\">-e TZ=&#x27;Asia/Shanghai&#x27; \\</span><br><span class=\"line\">-e LANG=&quot;en_US.UTF-8&quot; \\</span><br><span class=\"line\">-v /docker_data/kafka:/kafka \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-d wurstmeister/kafka:2.13-2.8.1</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/kafka/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">docker stop prod_kafka_cluster_01 &amp;&amp; docker rm prod_kafka_cluster_01</span><br><span class=\"line\">docker logs prod_kafka_cluster_02</span><br></pre></td></tr></table></figure>\n<p>需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name prod_kafka_cluster_01 \\</span><br><span class=\"line\">-e KAFKA_BROKER_ID=1 \\</span><br><span class=\"line\">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.181:9092 \\</span><br><span class=\"line\">-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.181:2181,192.168.10.182:2181,192.168.10.183:2181,192.168.10.184:2181,192.168.10.185:2181,192.168.10.186:2181 \\</span><br><span class=\"line\">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\</span><br><span class=\"line\">-e KAFKA_HEAP_OPTS=&quot;-Xmx1024m -Xms1024m&quot; \\</span><br><span class=\"line\">-e TZ=&#x27;Asia/Shanghai&#x27; \\</span><br><span class=\"line\">-e LANG=&quot;en_US.UTF-8&quot; \\</span><br><span class=\"line\">-v /docker_data/kafka:/kafka \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-d wurstmeister/kafka:2.13-2.8.1</span><br></pre></td></tr></table></figure>"},{"_content":"\n### 前置说明\n仅挂载一个文件夹作为存储区。\n\n\n\n```\nmkdir -p /docker_data/minio/{config,data}\n\n\ndocker run -d --name prod_minio_cluster_01 \\\n--restart=always --net=host \\\n-e \"MINIO_ROOT_USER=minioadmin\" \\\n-e \"MINIO_ROOT_PASSWORD=minioadmin\" \\\n-e \"MINIO_PROMETHEUS_AUTH_TYPE=public\" \\\n-v /docker_data/minio/data:/data \\\n-v /docker_data/minio/config:/root/.minio \\\n minio/minio:RELEASE.2023-05-04T21-44-30Z server \\\n --address 192.168.10.181:9000 http://192.168.10.18{1...6}/data\n\n\n\n\nUse `mc admin info` to look for latest server/drive info\n Status:         3 Online, 3 Offline.\nS3-API: http://192.168.10.181:9000\nConsole: http://192.168.10.181:35788 http://172.17.0.1:35788 http://192.168.122.1:35788 http://127.0.0.1:35788\n\nDocumentation: https://min.io/docs/minio/linux/index.html\n\n```\n\n\ndocker stop prod_minio_cluster_01 && docker rm prod_minio_cluster_01\n\n\n### 防火墙\n```\nfirewall-cmd  --permanent --zone=public --add-port=9000/tcp\nfirewall-cmd  --state\nfirewall-cmd  --reload\n```\n\n\n### docker compose\n```shell\nversion: '3'\nservices:\n  minio1:\n    image: minio/minio:RELEASE.2023-05-04T21-44-30Z\n    hostname: prod_minio_cluster_01\n    volumes:\n      - /docker_data/minio/data:/data\n      - /docker_data/minio/config:/root/.minio\n    expose:\n      - \"9000:9000\"\n      - \"9001:9001\"\n    environment:\n      MINIO_ROOT_USER: minioadmin\n      MINIO_ROOT_PASSWORD: minioadmin\n      MINIO_PROMETHEUS_AUTH_TYPE: public\n    command: server --address 192.168.10.181:9000 http://192.168.10.18{1...6}/data\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n```\n\n\ndocker run  --name prod_minio_cluster_06 \\\n--restart=always --net=host \\\n-e \"MINIO_ROOT_USER=minioadmin\" \\\n-e \"MINIO_ROOT_PASSWORD=minioadmin\" \\\n-e \"MINIO_PROMETHEUS_AUTH_TYPE=public\" \\\n-v /data/middleware/minio/data:/data \\\n-v /data/middleware/minio/config:/root/.minio \\\n minio/minio:RELEASE.2023-05-04T21-44-30Z server  http://192.168.139.1{1...4}/data","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Minio.md","raw":"\n### 前置说明\n仅挂载一个文件夹作为存储区。\n\n\n\n```\nmkdir -p /docker_data/minio/{config,data}\n\n\ndocker run -d --name prod_minio_cluster_01 \\\n--restart=always --net=host \\\n-e \"MINIO_ROOT_USER=minioadmin\" \\\n-e \"MINIO_ROOT_PASSWORD=minioadmin\" \\\n-e \"MINIO_PROMETHEUS_AUTH_TYPE=public\" \\\n-v /docker_data/minio/data:/data \\\n-v /docker_data/minio/config:/root/.minio \\\n minio/minio:RELEASE.2023-05-04T21-44-30Z server \\\n --address 192.168.10.181:9000 http://192.168.10.18{1...6}/data\n\n\n\n\nUse `mc admin info` to look for latest server/drive info\n Status:         3 Online, 3 Offline.\nS3-API: http://192.168.10.181:9000\nConsole: http://192.168.10.181:35788 http://172.17.0.1:35788 http://192.168.122.1:35788 http://127.0.0.1:35788\n\nDocumentation: https://min.io/docs/minio/linux/index.html\n\n```\n\n\ndocker stop prod_minio_cluster_01 && docker rm prod_minio_cluster_01\n\n\n### 防火墙\n```\nfirewall-cmd  --permanent --zone=public --add-port=9000/tcp\nfirewall-cmd  --state\nfirewall-cmd  --reload\n```\n\n\n### docker compose\n```shell\nversion: '3'\nservices:\n  minio1:\n    image: minio/minio:RELEASE.2023-05-04T21-44-30Z\n    hostname: prod_minio_cluster_01\n    volumes:\n      - /docker_data/minio/data:/data\n      - /docker_data/minio/config:/root/.minio\n    expose:\n      - \"9000:9000\"\n      - \"9001:9001\"\n    environment:\n      MINIO_ROOT_USER: minioadmin\n      MINIO_ROOT_PASSWORD: minioadmin\n      MINIO_PROMETHEUS_AUTH_TYPE: public\n    command: server --address 192.168.10.181:9000 http://192.168.10.18{1...6}/data\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost:9000/minio/health/live\"]\n      interval: 30s\n      timeout: 20s\n      retries: 3\n```\n\n\ndocker run  --name prod_minio_cluster_06 \\\n--restart=always --net=host \\\n-e \"MINIO_ROOT_USER=minioadmin\" \\\n-e \"MINIO_ROOT_PASSWORD=minioadmin\" \\\n-e \"MINIO_PROMETHEUS_AUTH_TYPE=public\" \\\n-v /data/middleware/minio/data:/data \\\n-v /data/middleware/minio/config:/root/.minio \\\n minio/minio:RELEASE.2023-05-04T21-44-30Z server  http://192.168.139.1{1...4}/data","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Minio","published":1,"date":"2023-09-01T13:06:37.840Z","updated":"2023-07-13T09:10:04.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2e001vzb8aedqp4nlr","content":"<h3 id=\"前置说明\">前置说明</h3>\n<p>仅挂载一个文件夹作为存储区。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/minio/&#123;config,data&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d --name prod_minio_cluster_01 \\</span><br><span class=\"line\">--restart=always --net=host \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_USER=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_PASSWORD=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_PROMETHEUS_AUTH_TYPE=public&quot; \\</span><br><span class=\"line\">-v /docker_data/minio/data:/data \\</span><br><span class=\"line\">-v /docker_data/minio/config:/root/.minio \\</span><br><span class=\"line\"> minio/minio:RELEASE.2023-05-04T21-44-30Z server \\</span><br><span class=\"line\"> --address 192.168.10.181:9000 http://192.168.10.18&#123;1...6&#125;/data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Use `mc admin info` to look for latest server/drive info</span><br><span class=\"line\"> Status:         3 Online, 3 Offline.</span><br><span class=\"line\">S3-API: http://192.168.10.181:9000</span><br><span class=\"line\">Console: http://192.168.10.181:35788 http://172.17.0.1:35788 http://192.168.122.1:35788 http://127.0.0.1:35788</span><br><span class=\"line\"></span><br><span class=\"line\">Documentation: https://min.io/docs/minio/linux/index.html</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>docker stop prod_minio_cluster_01 &amp;&amp; docker rm prod_minio_cluster_01</p>\n<h3 id=\"防火墙\">防火墙</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd  --permanent --zone=public --add-port=9000/tcp</span><br><span class=\"line\">firewall-cmd  --state</span><br><span class=\"line\">firewall-cmd  --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker-compose\">docker compose</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  minio1:</span><br><span class=\"line\">    image: minio/minio:RELEASE.2023-05-04T21-44-30Z</span><br><span class=\"line\">    hostname: prod_minio_cluster_01</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /docker_data/minio/data:/data</span><br><span class=\"line\">      - /docker_data/minio/config:/root/.minio</span><br><span class=\"line\">    expose:</span><br><span class=\"line\">      - &quot;9000:9000&quot;</span><br><span class=\"line\">      - &quot;9001:9001&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      MINIO_ROOT_USER: minioadmin</span><br><span class=\"line\">      MINIO_ROOT_PASSWORD: minioadmin</span><br><span class=\"line\">      MINIO_PROMETHEUS_AUTH_TYPE: public</span><br><span class=\"line\">    command: server --address 192.168.10.181:9000 http://192.168.10.18&#123;1...6&#125;/data</span><br><span class=\"line\">    healthcheck:</span><br><span class=\"line\">      test: [&quot;CMD&quot;, &quot;curl&quot;, &quot;-f&quot;, &quot;http://localhost:9000/minio/health/live&quot;]</span><br><span class=\"line\">      interval: 30s</span><br><span class=\"line\">      timeout: 20s</span><br><span class=\"line\">      retries: 3</span><br></pre></td></tr></table></figure>\n<p>docker run  --name prod_minio_cluster_06 <br>\n–restart=always --net=host <br>\n-e “MINIO_ROOT_USER=minioadmin” <br>\n-e “MINIO_ROOT_PASSWORD=minioadmin” <br>\n-e “MINIO_PROMETHEUS_AUTH_TYPE=public” <br>\n-v /data/middleware/minio/data:/data <br>\n-v /data/middleware/minio/config:/root/.minio <br>\nminio/minio:RELEASE.2023-05-04T21-44-30Z server  <a href=\"http://192.168.139.1\">http://192.168.139.1</a>{1…4}/data</p>\n","excerpt":"","more":"<h3 id=\"前置说明\">前置说明</h3>\n<p>仅挂载一个文件夹作为存储区。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/minio/&#123;config,data&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d --name prod_minio_cluster_01 \\</span><br><span class=\"line\">--restart=always --net=host \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_USER=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_PASSWORD=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_PROMETHEUS_AUTH_TYPE=public&quot; \\</span><br><span class=\"line\">-v /docker_data/minio/data:/data \\</span><br><span class=\"line\">-v /docker_data/minio/config:/root/.minio \\</span><br><span class=\"line\"> minio/minio:RELEASE.2023-05-04T21-44-30Z server \\</span><br><span class=\"line\"> --address 192.168.10.181:9000 http://192.168.10.18&#123;1...6&#125;/data</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Use `mc admin info` to look for latest server/drive info</span><br><span class=\"line\"> Status:         3 Online, 3 Offline.</span><br><span class=\"line\">S3-API: http://192.168.10.181:9000</span><br><span class=\"line\">Console: http://192.168.10.181:35788 http://172.17.0.1:35788 http://192.168.122.1:35788 http://127.0.0.1:35788</span><br><span class=\"line\"></span><br><span class=\"line\">Documentation: https://min.io/docs/minio/linux/index.html</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>docker stop prod_minio_cluster_01 &amp;&amp; docker rm prod_minio_cluster_01</p>\n<h3 id=\"防火墙\">防火墙</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd  --permanent --zone=public --add-port=9000/tcp</span><br><span class=\"line\">firewall-cmd  --state</span><br><span class=\"line\">firewall-cmd  --reload</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker-compose\">docker compose</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  minio1:</span><br><span class=\"line\">    image: minio/minio:RELEASE.2023-05-04T21-44-30Z</span><br><span class=\"line\">    hostname: prod_minio_cluster_01</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /docker_data/minio/data:/data</span><br><span class=\"line\">      - /docker_data/minio/config:/root/.minio</span><br><span class=\"line\">    expose:</span><br><span class=\"line\">      - &quot;9000:9000&quot;</span><br><span class=\"line\">      - &quot;9001:9001&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      MINIO_ROOT_USER: minioadmin</span><br><span class=\"line\">      MINIO_ROOT_PASSWORD: minioadmin</span><br><span class=\"line\">      MINIO_PROMETHEUS_AUTH_TYPE: public</span><br><span class=\"line\">    command: server --address 192.168.10.181:9000 http://192.168.10.18&#123;1...6&#125;/data</span><br><span class=\"line\">    healthcheck:</span><br><span class=\"line\">      test: [&quot;CMD&quot;, &quot;curl&quot;, &quot;-f&quot;, &quot;http://localhost:9000/minio/health/live&quot;]</span><br><span class=\"line\">      interval: 30s</span><br><span class=\"line\">      timeout: 20s</span><br><span class=\"line\">      retries: 3</span><br></pre></td></tr></table></figure>\n<p>docker run  --name prod_minio_cluster_06 <br>\n–restart=always --net=host <br>\n-e “MINIO_ROOT_USER=minioadmin” <br>\n-e “MINIO_ROOT_PASSWORD=minioadmin” <br>\n-e “MINIO_PROMETHEUS_AUTH_TYPE=public” <br>\n-v /data/middleware/minio/data:/data <br>\n-v /data/middleware/minio/config:/root/.minio <br>\nminio/minio:RELEASE.2023-05-04T21-44-30Z server  <a href=\"http://192.168.139.1\">http://192.168.139.1</a>{1…4}/data</p>\n"},{"_content":"## Docker\n\nLinux离线下载包\n\n```shell\nyum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software\n\n## 安装docker-compose\nyum install -y epel-release && yum install -y docker-compose --downloadonly --downloaddir=/root/software\n[root@idszt-node002 software]# docker-compose --version\ndocker-compose version 1.18.0, build 8dd22a9\n\n\n\n[root@localhost ~]# cd software/\n[root@localhost software]# yum localinstall *.rpm -y\n[root@localhost software]# docker --version\nDocker version 24.0.2, build cb74dfc\n\nsystemctl enable docker.service\nsystemctl start docker.service\n```\n\n## 微服务中间件\n部署之前请核对开发环境版本\n```shell\nredis               7.0.11     0ec8ab59a35f       117MB\nzookeeper           3.7.1      2665a3b2800b       273MB\nwurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB\nnacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB\nminio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB\n```\n\n### tag标签\ndocker save d4cdde7ce77b > /root/docker_image/grafana-10.0.2.tar\ndocker save e1fbd49323c6 > /root/docker_image/prometheus-v2.45.0.tar\ndocker save c8568f914cd2 > /root/docker_image/alertmanager-v0.25.0.tar\n\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\n\n```shell\ndocker load < redis-7.0.11.tar\ndocker tag 0ec8ab59a35f redis:7.0.11\n\ndocker load < zookeeper-3.7.1.tar\ndocker tag 2665a3b2800b zookeeper:3.7.1\n\n\ndocker load < kafka-2.13_2.8.1.tar\ndocker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1\n\ndocker load < nacos-server-v2.1.1.tar\ndocker tag 7c38e05f6228 nacos/nacos-server:v2.1.1\n\ndocker load < minio-RELEASE.2023-05-04T21-44-30Z.tar\ndocker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z\n\ndocker load < elasticsearch-7.15.2.tar\ndocker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2\n\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd\n\n\n```\n\n```shell\n\n\n\ndocker images\n\n[root@idszt-node007 docker_mirror]# docker images\nREPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE\nredis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB\nminio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB\nnacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB\nzookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB\nwurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2                         9cd5b752c86e   20 months ago   791MB\n\n```\n\n\n\n\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker.md","raw":"## Docker\n\nLinux离线下载包\n\n```shell\nyum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software\n\n## 安装docker-compose\nyum install -y epel-release && yum install -y docker-compose --downloadonly --downloaddir=/root/software\n[root@idszt-node002 software]# docker-compose --version\ndocker-compose version 1.18.0, build 8dd22a9\n\n\n\n[root@localhost ~]# cd software/\n[root@localhost software]# yum localinstall *.rpm -y\n[root@localhost software]# docker --version\nDocker version 24.0.2, build cb74dfc\n\nsystemctl enable docker.service\nsystemctl start docker.service\n```\n\n## 微服务中间件\n部署之前请核对开发环境版本\n```shell\nredis               7.0.11     0ec8ab59a35f       117MB\nzookeeper           3.7.1      2665a3b2800b       273MB\nwurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB\nnacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB\nminio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB\n```\n\n### tag标签\ndocker save d4cdde7ce77b > /root/docker_image/grafana-10.0.2.tar\ndocker save e1fbd49323c6 > /root/docker_image/prometheus-v2.45.0.tar\ndocker save c8568f914cd2 > /root/docker_image/alertmanager-v0.25.0.tar\n\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\n\n```shell\ndocker load < redis-7.0.11.tar\ndocker tag 0ec8ab59a35f redis:7.0.11\n\ndocker load < zookeeper-3.7.1.tar\ndocker tag 2665a3b2800b zookeeper:3.7.1\n\n\ndocker load < kafka-2.13_2.8.1.tar\ndocker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1\n\ndocker load < nacos-server-v2.1.1.tar\ndocker tag 7c38e05f6228 nacos/nacos-server:v2.1.1\n\ndocker load < minio-RELEASE.2023-05-04T21-44-30Z.tar\ndocker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z\n\ndocker load < elasticsearch-7.15.2.tar\ndocker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2\n\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd\n\n\n```\n\n```shell\n\n\n\ndocker images\n\n[root@idszt-node007 docker_mirror]# docker images\nREPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE\nredis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB\nminio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB\nnacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB\nzookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB\nwurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB\ndocker.elastic.co/elasticsearch/elasticsearch   7.15.2                         9cd5b752c86e   20 months ago   791MB\n\n```\n\n\n\n\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Docker","published":1,"date":"2023-09-01T13:06:37.810Z","updated":"2023-08-05T02:51:00.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2f001wzb8a5o2h17v9","content":"<h2 id=\"Docker\">Docker</h2>\n<p>Linux离线下载包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 安装docker-compose</span></span></span><br><span class=\"line\">yum install -y epel-release &amp;&amp; yum install -y docker-compose --downloadonly --downloaddir=/root/software</span><br><span class=\"line\">[root@idszt-node002 software]# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.18.0, build 8dd22a9</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# cd software/</span><br><span class=\"line\">[root@localhost software]# yum localinstall *.rpm -y</span><br><span class=\"line\">[root@localhost software]# docker --version</span><br><span class=\"line\">Docker version 24.0.2, build cb74dfc</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable docker.service</span><br><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"微服务中间件\">微服务中间件</h2>\n<p>部署之前请核对开发环境版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis               7.0.11     0ec8ab59a35f       117MB</span><br><span class=\"line\">zookeeper           3.7.1      2665a3b2800b       273MB</span><br><span class=\"line\">wurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB</span><br><span class=\"line\">nacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB</span><br><span class=\"line\">minio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB</span><br></pre></td></tr></table></figure>\n<h3 id=\"tag标签\">tag标签</h3>\n<p>docker save d4cdde7ce77b &gt; /root/docker_image/grafana-10.0.2.tar<br>\ndocker save e1fbd49323c6 &gt; /root/docker_image/prometheus-v2.45.0.tar<br>\ndocker save c8568f914cd2 &gt; /root/docker_image/alertmanager-v0.25.0.tar</p>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25<br>\ndocker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load &lt; redis-7.0.11.tar</span><br><span class=\"line\">docker tag 0ec8ab59a35f redis:7.0.11</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; zookeeper-3.7.1.tar</span><br><span class=\"line\">docker tag 2665a3b2800b zookeeper:3.7.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; kafka-2.13_2.8.1.tar</span><br><span class=\"line\">docker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nacos-server-v2.1.1.tar</span><br><span class=\"line\">docker tag 7c38e05f6228 nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; minio-RELEASE.2023-05-04T21-44-30Z.tar</span><br><span class=\"line\">docker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; elasticsearch-7.15.2.tar</span><br><span class=\"line\">docker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nginx-1.25.tar</span><br><span class=\"line\">docker tag 021283c8eb95 nginx:1.25</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; vsftpd-3.0.tar</span><br><span class=\"line\">docker tag 9bfb39139661 fauria/vsftpd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker images</span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-node007 docker_mirror]# docker images</span><br><span class=\"line\">REPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE</span><br><span class=\"line\">redis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB</span><br><span class=\"line\">minio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB</span><br><span class=\"line\">nacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB</span><br><span class=\"line\">zookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB</span><br><span class=\"line\">wurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch   7.15.2                         9cd5b752c86e   20 months ago   791MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"Docker\">Docker</h2>\n<p>Linux离线下载包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install docker-ce docker-ce-cli containerd.io --downloadonly --downloaddir=/root/software</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 安装docker-compose</span></span></span><br><span class=\"line\">yum install -y epel-release &amp;&amp; yum install -y docker-compose --downloadonly --downloaddir=/root/software</span><br><span class=\"line\">[root@idszt-node002 software]# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.18.0, build 8dd22a9</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[root@localhost ~]# cd software/</span><br><span class=\"line\">[root@localhost software]# yum localinstall *.rpm -y</span><br><span class=\"line\">[root@localhost software]# docker --version</span><br><span class=\"line\">Docker version 24.0.2, build cb74dfc</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl enable docker.service</span><br><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"微服务中间件\">微服务中间件</h2>\n<p>部署之前请核对开发环境版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis               7.0.11     0ec8ab59a35f       117MB</span><br><span class=\"line\">zookeeper           3.7.1      2665a3b2800b       273MB</span><br><span class=\"line\">wurstmeister/kafka  2.13-2.8.1 2dd91ce2efe1       508MB</span><br><span class=\"line\">nacos/nacos-server  v2.1.1     7c38e05f6228       1.06GB</span><br><span class=\"line\">minio/minio         RELEASE.2023-05-04T21-44-30Z   3067751629ce    257MB</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch   7.15.2     9cd5b752c86e      791MB</span><br></pre></td></tr></table></figure>\n<h3 id=\"tag标签\">tag标签</h3>\n<p>docker save d4cdde7ce77b &gt; /root/docker_image/grafana-10.0.2.tar<br>\ndocker save e1fbd49323c6 &gt; /root/docker_image/prometheus-v2.45.0.tar<br>\ndocker save c8568f914cd2 &gt; /root/docker_image/alertmanager-v0.25.0.tar</p>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25<br>\ndocker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker load &lt; redis-7.0.11.tar</span><br><span class=\"line\">docker tag 0ec8ab59a35f redis:7.0.11</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; zookeeper-3.7.1.tar</span><br><span class=\"line\">docker tag 2665a3b2800b zookeeper:3.7.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; kafka-2.13_2.8.1.tar</span><br><span class=\"line\">docker tag 2dd91ce2efe1 wurstmeister/kafka:2.13-2.8.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nacos-server-v2.1.1.tar</span><br><span class=\"line\">docker tag 7c38e05f6228 nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; minio-RELEASE.2023-05-04T21-44-30Z.tar</span><br><span class=\"line\">docker tag 3067751629ce minio/minio:RELEASE.2023-05-04T21-44-30Z</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; elasticsearch-7.15.2.tar</span><br><span class=\"line\">docker tag 9cd5b752c86e docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; nginx-1.25.tar</span><br><span class=\"line\">docker tag 021283c8eb95 nginx:1.25</span><br><span class=\"line\"></span><br><span class=\"line\">docker load &lt; vsftpd-3.0.tar</span><br><span class=\"line\">docker tag 9bfb39139661 fauria/vsftpd</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker images</span><br><span class=\"line\"></span><br><span class=\"line\">[root@idszt-node007 docker_mirror]# docker images</span><br><span class=\"line\">REPOSITORY                                      TAG                            IMAGE ID       CREATED         SIZE</span><br><span class=\"line\">redis                                           7.0.11                         0ec8ab59a35f   7 weeks ago     117MB</span><br><span class=\"line\">minio/minio                                     RELEASE.2023-05-04T21-44-30Z   3067751629ce   2 months ago    257MB</span><br><span class=\"line\">nacos/nacos-server                              v2.1.1                         7c38e05f6228   7 months ago    1.06GB</span><br><span class=\"line\">zookeeper                                       3.7.1                          2665a3b2800b   11 months ago   273MB</span><br><span class=\"line\">wurstmeister/kafka                              2.13-2.8.1                     2dd91ce2efe1   18 months ago   508MB</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch   7.15.2                         9cd5b752c86e   20 months ago   791MB</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"### 前置说明\nnacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。\n\n\n### 下载数据库脚本\n\n```\nhttps://raw.githubusercontent.com/alibaba/nacos/develop/distribution/conf/mysql-schema.sql\n\nutf8mb4/utf8mb4_bin\n```\n\ndocker stop prod_nacos_cluster_01 && docker rm prod_nacos_cluster_01\n### 配置说明\nhttps://github.com/nacos-group/nacos-docker\n\n修改集群NACOS_SERVERS，MYSQL_SERVICE_HOST，NACOS_SERVER_IP（有变动，使用node006配置）\n```shell\n\ndocker-compose exec prod_cluster_nacos_01 bash\n\ndocker run -d \\\n-e MODE=cluster \\\n-e NACOS_APPLICATION_PORT=8848 \\\n-e NACOS_SERVERS=\"192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848\" \\\n-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\\n\n-e SPRING_DATASOURCE_PLATFORM=mysql \\\n-e MYSQL_SERVICE_HOST=192.168.10.186 \\\n-e MYSQL_SERVICE_PORT=3306 \\\n-e MYSQL_SERVICE_USER=root \\\n-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\\n-e MYSQL_SERVICE_DB_NAME=dev_nacos \\\n-e NACOS_SERVER_IP=192.168.10.181 \\\n--network=host --privileged=true --restart=always \\\n--name prod_nacos_cluster_01 \\\nnacos/nacos-server:v2.1.1\n\n\ndocker run -d \\\n-e MODE=cluster \\\n-e NACOS_APPLICATION_PORT=8848 \\\n-e NACOS_SERVERS=\"192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848\" \\\n-e SPRING_DATASOURCE_PLATFORM=mysql \\\n-e MYSQL_SERVICE_HOST=192.168.10.186 \\\n-e MYSQL_SERVICE_PORT=3306 \\\n-e MYSQL_SERVICE_USER=root \\\n-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\\n-e MYSQL_SERVICE_DB_NAME=dev_nacos \\\n-e NACOS_SERVER_IP=192.168.10.186 \\\n--network=host --privileged=true --restart=always \\\n--name prod_nacos_cluster_06 \\\nnacos/nacos-server:v2.1.1\n\n```\n\n\n\n\n\n### 验证集群\n登录任意节点：http://192.168.10.186:8848/nacos/#/login（nacos/nacos）\n\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Nacos.md","raw":"### 前置说明\nnacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。\n\n\n### 下载数据库脚本\n\n```\nhttps://raw.githubusercontent.com/alibaba/nacos/develop/distribution/conf/mysql-schema.sql\n\nutf8mb4/utf8mb4_bin\n```\n\ndocker stop prod_nacos_cluster_01 && docker rm prod_nacos_cluster_01\n### 配置说明\nhttps://github.com/nacos-group/nacos-docker\n\n修改集群NACOS_SERVERS，MYSQL_SERVICE_HOST，NACOS_SERVER_IP（有变动，使用node006配置）\n```shell\n\ndocker-compose exec prod_cluster_nacos_01 bash\n\ndocker run -d \\\n-e MODE=cluster \\\n-e NACOS_APPLICATION_PORT=8848 \\\n-e NACOS_SERVERS=\"192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848\" \\\n-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\\n\n-e SPRING_DATASOURCE_PLATFORM=mysql \\\n-e MYSQL_SERVICE_HOST=192.168.10.186 \\\n-e MYSQL_SERVICE_PORT=3306 \\\n-e MYSQL_SERVICE_USER=root \\\n-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\\n-e MYSQL_SERVICE_DB_NAME=dev_nacos \\\n-e NACOS_SERVER_IP=192.168.10.181 \\\n--network=host --privileged=true --restart=always \\\n--name prod_nacos_cluster_01 \\\nnacos/nacos-server:v2.1.1\n\n\ndocker run -d \\\n-e MODE=cluster \\\n-e NACOS_APPLICATION_PORT=8848 \\\n-e NACOS_SERVERS=\"192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848\" \\\n-e SPRING_DATASOURCE_PLATFORM=mysql \\\n-e MYSQL_SERVICE_HOST=192.168.10.186 \\\n-e MYSQL_SERVICE_PORT=3306 \\\n-e MYSQL_SERVICE_USER=root \\\n-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\\n-e MYSQL_SERVICE_DB_NAME=dev_nacos \\\n-e NACOS_SERVER_IP=192.168.10.186 \\\n--network=host --privileged=true --restart=always \\\n--name prod_nacos_cluster_06 \\\nnacos/nacos-server:v2.1.1\n\n```\n\n\n\n\n\n### 验证集群\n登录任意节点：http://192.168.10.186:8848/nacos/#/login（nacos/nacos）\n\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Nacos","published":1,"date":"2023-09-01T13:06:37.850Z","updated":"2023-07-21T08:48:56.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2f001xzb8a962ofaal","content":"<h3 id=\"前置说明\">前置说明</h3>\n<p>nacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。</p>\n<h3 id=\"下载数据库脚本\">下载数据库脚本</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://raw.githubusercontent.com/alibaba/nacos/develop/distribution/conf/mysql-schema.sql</span><br><span class=\"line\"></span><br><span class=\"line\">utf8mb4/utf8mb4_bin</span><br></pre></td></tr></table></figure>\n<p>docker stop prod_nacos_cluster_01 &amp;&amp; docker rm prod_nacos_cluster_01</p>\n<h3 id=\"配置说明\">配置说明</h3>\n<p><a href=\"https://github.com/nacos-group/nacos-docker\">https://github.com/nacos-group/nacos-docker</a></p>\n<p>修改集群NACOS_SERVERS，MYSQL_SERVICE_HOST，NACOS_SERVER_IP（有变动，使用node006配置）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">docker-compose exec prod_cluster_nacos_01 bash</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">-e MODE=cluster \\</span><br><span class=\"line\">-e NACOS_APPLICATION_PORT=8848 \\</span><br><span class=\"line\">-e NACOS_SERVERS=&quot;192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848&quot; \\</span><br><span class=\"line\">-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\</span><br><span class=\"line\"></span><br><span class=\"line\">-e SPRING_DATASOURCE_PLATFORM=mysql \\</span><br><span class=\"line\">-e MYSQL_SERVICE_HOST=192.168.10.186 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PORT=3306 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_USER=root \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_DB_NAME=dev_nacos \\</span><br><span class=\"line\">-e NACOS_SERVER_IP=192.168.10.181 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">--name prod_nacos_cluster_01 \\</span><br><span class=\"line\">nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">-e MODE=cluster \\</span><br><span class=\"line\">-e NACOS_APPLICATION_PORT=8848 \\</span><br><span class=\"line\">-e NACOS_SERVERS=&quot;192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848&quot; \\</span><br><span class=\"line\">-e SPRING_DATASOURCE_PLATFORM=mysql \\</span><br><span class=\"line\">-e MYSQL_SERVICE_HOST=192.168.10.186 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PORT=3306 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_USER=root \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_DB_NAME=dev_nacos \\</span><br><span class=\"line\">-e NACOS_SERVER_IP=192.168.10.186 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">--name prod_nacos_cluster_06 \\</span><br><span class=\"line\">nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"验证集群\">验证集群</h3>\n<p>登录任意节点：<a href=\"http://192.168.10.186:8848/nacos/#/login%EF%BC%88nacos/nacos%EF%BC%89\">http://192.168.10.186:8848/nacos/#/login（nacos/nacos）</a></p>\n","excerpt":"","more":"<h3 id=\"前置说明\">前置说明</h3>\n<p>nacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。</p>\n<h3 id=\"下载数据库脚本\">下载数据库脚本</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://raw.githubusercontent.com/alibaba/nacos/develop/distribution/conf/mysql-schema.sql</span><br><span class=\"line\"></span><br><span class=\"line\">utf8mb4/utf8mb4_bin</span><br></pre></td></tr></table></figure>\n<p>docker stop prod_nacos_cluster_01 &amp;&amp; docker rm prod_nacos_cluster_01</p>\n<h3 id=\"配置说明\">配置说明</h3>\n<p><a href=\"https://github.com/nacos-group/nacos-docker\">https://github.com/nacos-group/nacos-docker</a></p>\n<p>修改集群NACOS_SERVERS，MYSQL_SERVICE_HOST，NACOS_SERVER_IP（有变动，使用node006配置）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">docker-compose exec prod_cluster_nacos_01 bash</span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">-e MODE=cluster \\</span><br><span class=\"line\">-e NACOS_APPLICATION_PORT=8848 \\</span><br><span class=\"line\">-e NACOS_SERVERS=&quot;192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848&quot; \\</span><br><span class=\"line\">-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\</span><br><span class=\"line\"></span><br><span class=\"line\">-e SPRING_DATASOURCE_PLATFORM=mysql \\</span><br><span class=\"line\">-e MYSQL_SERVICE_HOST=192.168.10.186 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PORT=3306 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_USER=root \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_DB_NAME=dev_nacos \\</span><br><span class=\"line\">-e NACOS_SERVER_IP=192.168.10.181 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">--name prod_nacos_cluster_01 \\</span><br><span class=\"line\">nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker run -d \\</span><br><span class=\"line\">-e MODE=cluster \\</span><br><span class=\"line\">-e NACOS_APPLICATION_PORT=8848 \\</span><br><span class=\"line\">-e NACOS_SERVERS=&quot;192.168.10.181:8848 192.168.10.182:8848 192.168.10.183:8848 192.168.10.184:8848 192.168.10.185:8848 192.168.10.186:8848&quot; \\</span><br><span class=\"line\">-e SPRING_DATASOURCE_PLATFORM=mysql \\</span><br><span class=\"line\">-e MYSQL_SERVICE_HOST=192.168.10.186 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PORT=3306 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_USER=root \\</span><br><span class=\"line\">-e MYSQL_SERVICE_PASSWORD=mysql@SZT2021 \\</span><br><span class=\"line\">-e MYSQL_SERVICE_DB_NAME=dev_nacos \\</span><br><span class=\"line\">-e NACOS_SERVER_IP=192.168.10.186 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">--name prod_nacos_cluster_06 \\</span><br><span class=\"line\">nacos/nacos-server:v2.1.1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"验证集群\">验证集群</h3>\n<p>登录任意节点：<a href=\"http://192.168.10.186:8848/nacos/#/login%EF%BC%88nacos/nacos%EF%BC%89\">http://192.168.10.186:8848/nacos/#/login（nacos/nacos）</a></p>\n"},{"_content":"### 前置说明\nnacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。\n\n\nhttps://nacos.io/zh-cn/docs/quick-start-docker.html\n\n\n```shell\n#默认JVM配置\nJVM_XMS\t-Xms\t默认 :1g\nJVM_XMX\t-Xmx\t默认 :1g\nJVM_XMN\t-Xmn\t默认 :512m\nJVM_MS\t-XX:MetaspaceSize\t默认 :128m\nJVM_MMS\t-XX:MaxMetaspaceSize\t默认 :320m\n\n#设置年轻代大小为2G。整个JVM内存大小=年轻代大小xmn + 年老代大小 + 持久代大小。元空间与永久代最大的区别在于：元空间并不在虚拟机中，而是使用本机内存。\nJVM_XMS\t-Xms\t4g\nJVM_XMX\t-Xmx\t4g\nJVM_XMN\t-Xmn\t2g\nJVM_MS\t-XX:MetaspaceSize\t4g\nJVM_MMS\t-XX:MaxMetaspaceSize\t4g\n\n# docker配置\n-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\\n```\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Naco配置.md","raw":"### 前置说明\nnacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。\n\n\nhttps://nacos.io/zh-cn/docs/quick-start-docker.html\n\n\n```shell\n#默认JVM配置\nJVM_XMS\t-Xms\t默认 :1g\nJVM_XMX\t-Xmx\t默认 :1g\nJVM_XMN\t-Xmn\t默认 :512m\nJVM_MS\t-XX:MetaspaceSize\t默认 :128m\nJVM_MMS\t-XX:MaxMetaspaceSize\t默认 :320m\n\n#设置年轻代大小为2G。整个JVM内存大小=年轻代大小xmn + 年老代大小 + 持久代大小。元空间与永久代最大的区别在于：元空间并不在虚拟机中，而是使用本机内存。\nJVM_XMS\t-Xms\t4g\nJVM_XMX\t-Xmx\t4g\nJVM_XMN\t-Xmn\t2g\nJVM_MS\t-XX:MetaspaceSize\t4g\nJVM_MMS\t-XX:MaxMetaspaceSize\t4g\n\n# docker配置\n-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\\n```\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Naco配置","published":1,"date":"2023-09-01T13:06:37.860Z","updated":"2023-07-03T09:19:06.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2g001yzb8a3x4e4dat","content":"<h3 id=\"前置说明\">前置说明</h3>\n<p>nacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。</p>\n<p><a href=\"https://nacos.io/zh-cn/docs/quick-start-docker.html\">https://nacos.io/zh-cn/docs/quick-start-docker.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认JVM配置</span></span><br><span class=\"line\">JVM_XMS\t-Xms\t默认 :1g</span><br><span class=\"line\">JVM_XMX\t-Xmx\t默认 :1g</span><br><span class=\"line\">JVM_XMN\t-Xmn\t默认 :512m</span><br><span class=\"line\">JVM_MS\t-XX:MetaspaceSize\t默认 :128m</span><br><span class=\"line\">JVM_MMS\t-XX:MaxMetaspaceSize\t默认 :320m</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置年轻代大小为2G。整个JVM内存大小=年轻代大小xmn + 年老代大小 + 持久代大小。元空间与永久代最大的区别在于：元空间并不在虚拟机中，而是使用本机内存。</span></span><br><span class=\"line\">JVM_XMS\t-Xms\t4g</span><br><span class=\"line\">JVM_XMX\t-Xmx\t4g</span><br><span class=\"line\">JVM_XMN\t-Xmn\t2g</span><br><span class=\"line\">JVM_MS\t-XX:MetaspaceSize\t4g</span><br><span class=\"line\">JVM_MMS\t-XX:MaxMetaspaceSize\t4g</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">docker配置</span></span><br><span class=\"line\">-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"前置说明\">前置说明</h3>\n<p>nacos数据保存在MySQL，故直接配置运行即可。无单独data和config目录。</p>\n<p><a href=\"https://nacos.io/zh-cn/docs/quick-start-docker.html\">https://nacos.io/zh-cn/docs/quick-start-docker.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">默认JVM配置</span></span><br><span class=\"line\">JVM_XMS\t-Xms\t默认 :1g</span><br><span class=\"line\">JVM_XMX\t-Xmx\t默认 :1g</span><br><span class=\"line\">JVM_XMN\t-Xmn\t默认 :512m</span><br><span class=\"line\">JVM_MS\t-XX:MetaspaceSize\t默认 :128m</span><br><span class=\"line\">JVM_MMS\t-XX:MaxMetaspaceSize\t默认 :320m</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置年轻代大小为2G。整个JVM内存大小=年轻代大小xmn + 年老代大小 + 持久代大小。元空间与永久代最大的区别在于：元空间并不在虚拟机中，而是使用本机内存。</span></span><br><span class=\"line\">JVM_XMS\t-Xms\t4g</span><br><span class=\"line\">JVM_XMX\t-Xmx\t4g</span><br><span class=\"line\">JVM_XMN\t-Xmn\t2g</span><br><span class=\"line\">JVM_MS\t-XX:MetaspaceSize\t4g</span><br><span class=\"line\">JVM_MMS\t-XX:MaxMetaspaceSize\t4g</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">docker配置</span></span><br><span class=\"line\">-e JVM_XMS=4g -e JVM_XMX=4g JVM_XMN=2g \\</span><br></pre></td></tr></table></figure>\n"},{"_content":"### 配置持久化目录\n```\n#确认没有data\nrm -rf /docker_data/redis/data/\nmkdir -p /docker_data/redis/data3\n\nmkdir -p /docker_data/redis/{conf,data}\ncd  /docker_data/redis/conf/\nvi redis.conf\n#粘贴以下配置文件\n\n```\n\n### 配置文件\n```\nbind 0.0.0.0\ncluster-enabled yes\ncluster-config-file nodes-6379.conf\ncluster-node-timeout 15000\nappendonly yes\n# in product enviroment maxmemory set 64gb\nmaxmemory 400mb\n\n# when 10 keys changed, take a snapshotting every 10 mins\nsave 600 1\n\n# set the passward\nmasterauth 'redis@szt2023nomeaning'\nrequirepass 'redis@szt2023nomeaning'\n```\n\n\n\n### 配置防火墙\n\n```\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n\n```\n\n\n\n\n\n### 启动docker\n\n```\n#若有docker请先删除\ndocker stop dev-redis-cluster-01 && docker rm dev-redis-cluster-01\ndocker stop dev-redis-cluster-02 && docker rm dev-redis-cluster-02\ndocker stop dev-redis-cluster-03 && docker rm dev-redis-cluster-03\ndocker stop dev-redis-cluster-04 && docker rm dev-redis-cluster-04\ndocker stop dev-redis-cluster-05 && docker rm dev-redis-cluster-05\ndocker stop dev-redis-cluster-06 && docker rm dev-redis-cluster-06\ndocker stop dev-redis-cluster-07 && docker rm dev-redis-cluster-07\ndocker stop dev-redis-cluster-08 && docker rm dev-redis-cluster-08\n\n# 创建pod\ndocker run --restart=always \\\n--name dev-redis-cluster-8 \\\n-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\\n--net host  \\\n-d redis:7.0.11 redis-server /etc/redis/redis.conf\n-v /docker_data/redis/data3:/data \\\n\n```\n\n### 创建集群\n\n```\ndocker exec -it dev-redis-cluster-04 /bin/bash\n\n\nredis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning cluster nodes\n\n\nredis-cli --cluster create 192.168.10.181:6379 192.168.10.182:6379 192.168.10.183:6379 192.168.10.184:6379 192.168.10.185:6379 192.168.10.186:6379 192.168.10.187:6379 192.168.10.188:6379 --cluster-replicas 1 -a redis@szt2023nomeaning\n\n\n```\n\n\n\n### 加入集群\n\n```\n#确认集群信息\nroot@node1:/data# redis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.181:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\n\n\n192.168.10.181:6379> cluster nodes\ne0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383\n\n#新节点加入集群\nredis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning\n\n```\n\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis.md","raw":"### 配置持久化目录\n```\n#确认没有data\nrm -rf /docker_data/redis/data/\nmkdir -p /docker_data/redis/data3\n\nmkdir -p /docker_data/redis/{conf,data}\ncd  /docker_data/redis/conf/\nvi redis.conf\n#粘贴以下配置文件\n\n```\n\n### 配置文件\n```\nbind 0.0.0.0\ncluster-enabled yes\ncluster-config-file nodes-6379.conf\ncluster-node-timeout 15000\nappendonly yes\n# in product enviroment maxmemory set 64gb\nmaxmemory 400mb\n\n# when 10 keys changed, take a snapshotting every 10 mins\nsave 600 1\n\n# set the passward\nmasterauth 'redis@szt2023nomeaning'\nrequirepass 'redis@szt2023nomeaning'\n```\n\n\n\n### 配置防火墙\n\n```\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n\n```\n\n\n\n\n\n### 启动docker\n\n```\n#若有docker请先删除\ndocker stop dev-redis-cluster-01 && docker rm dev-redis-cluster-01\ndocker stop dev-redis-cluster-02 && docker rm dev-redis-cluster-02\ndocker stop dev-redis-cluster-03 && docker rm dev-redis-cluster-03\ndocker stop dev-redis-cluster-04 && docker rm dev-redis-cluster-04\ndocker stop dev-redis-cluster-05 && docker rm dev-redis-cluster-05\ndocker stop dev-redis-cluster-06 && docker rm dev-redis-cluster-06\ndocker stop dev-redis-cluster-07 && docker rm dev-redis-cluster-07\ndocker stop dev-redis-cluster-08 && docker rm dev-redis-cluster-08\n\n# 创建pod\ndocker run --restart=always \\\n--name dev-redis-cluster-8 \\\n-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\\n--net host  \\\n-d redis:7.0.11 redis-server /etc/redis/redis.conf\n-v /docker_data/redis/data3:/data \\\n\n```\n\n### 创建集群\n\n```\ndocker exec -it dev-redis-cluster-04 /bin/bash\n\n\nredis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning cluster nodes\n\n\nredis-cli --cluster create 192.168.10.181:6379 192.168.10.182:6379 192.168.10.183:6379 192.168.10.184:6379 192.168.10.185:6379 192.168.10.186:6379 192.168.10.187:6379 192.168.10.188:6379 --cluster-replicas 1 -a redis@szt2023nomeaning\n\n\n```\n\n\n\n### 加入集群\n\n```\n#确认集群信息\nroot@node1:/data# redis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.181:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\n\n\n192.168.10.181:6379> cluster nodes\ne0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383\n\n#新节点加入集群\nredis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning\n\n```\n\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis","published":1,"date":"2023-09-01T13:06:37.860Z","updated":"2023-06-25T09:14:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2g001zzb8aghjv0neo","content":"<h3 id=\"配置持久化目录\">配置持久化目录</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#确认没有data</span><br><span class=\"line\">rm -rf /docker_data/redis/data/</span><br><span class=\"line\">mkdir -p /docker_data/redis/data3</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p /docker_data/redis/&#123;conf,data&#125;</span><br><span class=\"line\">cd  /docker_data/redis/conf/</span><br><span class=\"line\">vi redis.conf</span><br><span class=\"line\">#粘贴以下配置文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件\">配置文件</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 0.0.0.0</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">cluster-config-file nodes-6379.conf</span><br><span class=\"line\">cluster-node-timeout 15000</span><br><span class=\"line\">appendonly yes</span><br><span class=\"line\"># in product enviroment maxmemory set 64gb</span><br><span class=\"line\">maxmemory 400mb</span><br><span class=\"line\"></span><br><span class=\"line\"># when 10 keys changed, take a snapshotting every 10 mins</span><br><span class=\"line\">save 600 1</span><br><span class=\"line\"></span><br><span class=\"line\"># set the passward</span><br><span class=\"line\">masterauth &#x27;redis@szt2023nomeaning&#x27;</span><br><span class=\"line\">requirepass &#x27;redis@szt2023nomeaning&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动docker\">启动docker</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#若有docker请先删除</span><br><span class=\"line\">docker stop dev-redis-cluster-01 &amp;&amp; docker rm dev-redis-cluster-01</span><br><span class=\"line\">docker stop dev-redis-cluster-02 &amp;&amp; docker rm dev-redis-cluster-02</span><br><span class=\"line\">docker stop dev-redis-cluster-03 &amp;&amp; docker rm dev-redis-cluster-03</span><br><span class=\"line\">docker stop dev-redis-cluster-04 &amp;&amp; docker rm dev-redis-cluster-04</span><br><span class=\"line\">docker stop dev-redis-cluster-05 &amp;&amp; docker rm dev-redis-cluster-05</span><br><span class=\"line\">docker stop dev-redis-cluster-06 &amp;&amp; docker rm dev-redis-cluster-06</span><br><span class=\"line\">docker stop dev-redis-cluster-07 &amp;&amp; docker rm dev-redis-cluster-07</span><br><span class=\"line\">docker stop dev-redis-cluster-08 &amp;&amp; docker rm dev-redis-cluster-08</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建pod</span><br><span class=\"line\">docker run --restart=always \\</span><br><span class=\"line\">--name dev-redis-cluster-8 \\</span><br><span class=\"line\">-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\</span><br><span class=\"line\">--net host  \\</span><br><span class=\"line\">-d redis:7.0.11 redis-server /etc/redis/redis.conf</span><br><span class=\"line\">-v /docker_data/redis/data3:/data \\</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建集群\">创建集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it dev-redis-cluster-04 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">redis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning cluster nodes</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">redis-cli --cluster create 192.168.10.181:6379 192.168.10.182:6379 192.168.10.183:6379 192.168.10.184:6379 192.168.10.185:6379 192.168.10.186:6379 192.168.10.187:6379 192.168.10.188:6379 --cluster-replicas 1 -a redis@szt2023nomeaning</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"加入集群\">加入集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#确认集群信息</span><br><span class=\"line\">root@node1:/data# redis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.181:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.181:6379&gt; cluster nodes</span><br><span class=\"line\">e0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383</span><br><span class=\"line\"></span><br><span class=\"line\">#新节点加入集群</span><br><span class=\"line\">redis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"配置持久化目录\">配置持久化目录</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#确认没有data</span><br><span class=\"line\">rm -rf /docker_data/redis/data/</span><br><span class=\"line\">mkdir -p /docker_data/redis/data3</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p /docker_data/redis/&#123;conf,data&#125;</span><br><span class=\"line\">cd  /docker_data/redis/conf/</span><br><span class=\"line\">vi redis.conf</span><br><span class=\"line\">#粘贴以下配置文件</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件\">配置文件</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 0.0.0.0</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">cluster-config-file nodes-6379.conf</span><br><span class=\"line\">cluster-node-timeout 15000</span><br><span class=\"line\">appendonly yes</span><br><span class=\"line\"># in product enviroment maxmemory set 64gb</span><br><span class=\"line\">maxmemory 400mb</span><br><span class=\"line\"></span><br><span class=\"line\"># when 10 keys changed, take a snapshotting every 10 mins</span><br><span class=\"line\">save 600 1</span><br><span class=\"line\"></span><br><span class=\"line\"># set the passward</span><br><span class=\"line\">masterauth &#x27;redis@szt2023nomeaning&#x27;</span><br><span class=\"line\">requirepass &#x27;redis@szt2023nomeaning&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动docker\">启动docker</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#若有docker请先删除</span><br><span class=\"line\">docker stop dev-redis-cluster-01 &amp;&amp; docker rm dev-redis-cluster-01</span><br><span class=\"line\">docker stop dev-redis-cluster-02 &amp;&amp; docker rm dev-redis-cluster-02</span><br><span class=\"line\">docker stop dev-redis-cluster-03 &amp;&amp; docker rm dev-redis-cluster-03</span><br><span class=\"line\">docker stop dev-redis-cluster-04 &amp;&amp; docker rm dev-redis-cluster-04</span><br><span class=\"line\">docker stop dev-redis-cluster-05 &amp;&amp; docker rm dev-redis-cluster-05</span><br><span class=\"line\">docker stop dev-redis-cluster-06 &amp;&amp; docker rm dev-redis-cluster-06</span><br><span class=\"line\">docker stop dev-redis-cluster-07 &amp;&amp; docker rm dev-redis-cluster-07</span><br><span class=\"line\">docker stop dev-redis-cluster-08 &amp;&amp; docker rm dev-redis-cluster-08</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建pod</span><br><span class=\"line\">docker run --restart=always \\</span><br><span class=\"line\">--name dev-redis-cluster-8 \\</span><br><span class=\"line\">-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\</span><br><span class=\"line\">--net host  \\</span><br><span class=\"line\">-d redis:7.0.11 redis-server /etc/redis/redis.conf</span><br><span class=\"line\">-v /docker_data/redis/data3:/data \\</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建集群\">创建集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it dev-redis-cluster-04 /bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">redis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning cluster nodes</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">redis-cli --cluster create 192.168.10.181:6379 192.168.10.182:6379 192.168.10.183:6379 192.168.10.184:6379 192.168.10.185:6379 192.168.10.186:6379 192.168.10.187:6379 192.168.10.188:6379 --cluster-replicas 1 -a redis@szt2023nomeaning</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"加入集群\">加入集群</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#确认集群信息</span><br><span class=\"line\">root@node1:/data# redis-cli -h 192.168.10.181 -p 6379 -a redis@szt2023nomeaning -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.181:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.181:6379&gt; cluster nodes</span><br><span class=\"line\">e0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383</span><br><span class=\"line\"></span><br><span class=\"line\">#新节点加入集群</span><br><span class=\"line\">redis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"### 说明\n\nRedis客户端分单机和集群模式\n\n```shell\nredis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c\n```\n\n\n\n### 检查集群主从状态\n```shell\ndocker exec -it 7202ff1285d6 /bin/bash\n# 或者\ndocker-compose exec prod_cluster_redis_06 bash\n\n# 进入集群\nredis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c\n\nroot@docker-node001:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n8aafb13878e2ec78c751808882c9605ee03e0716 192.168.240.215:16379@26379 master - 0 1691544277000 7 connected 0-5460\n200db90e992c9b9b3f63d56aa562470e500b32e8 192.168.240.213:16379@26379 master - 0 1691544278832 3 connected 10923-16383\n69023301118e3f09059f74c38ad261294b0a6d93 192.168.240.211:16379@26379 myself,slave 8aafb13878e2ec78c751808882c9605ee03e0716 0 1691544278000 7 connected\n9ce84b0e4447131f45084153882841332f3b89e2 192.168.240.212:16379@26379 master - 0 1691544277828 2 connected 5461-10922\n25b34a35e8ecaf25fff0f5ac3e45dfabaa5ab69d 192.168.240.214:16379@26379 slave 200db90e992c9b9b3f63d56aa562470e500b32e8 0 1691544279837 3 connected\nba5c57df2ebf64b38afa06dc70a7a29db13f49cb 192.168.240.216:16379@26379 slave 9ce84b0e4447131f45084153882841332f3b89e2 0 1691544276000 2 connected\n```\n\n\n\n### key检查\n\n```shell\n192.168.240.211:16379> info keyspace\n# Keyspace\ndb0:keys=42,expires=8,avg_ttl=0\n\n# 慎重使用\n192.168.240.211:16379> keys *\n 1) \"merchant_app_info\"\n 2) \"sys_config:succDataTime\"\n\n\n```\n\n\n### 集群模式获取key值\n```shell\n# 单机模式进入node212\n192.168.240.212:16379> get airport_three_code\n\"FZX\"\n\n# 单机模式进入node213查询失败\n192.168.240.213:16379> get key SYSTEM:DICT:CODE_TYPE\n(error) ERR wrong number of arguments for 'get' command\n192.168.240.213:16379> get airport_three_code\n(error) MOVED 7223 192.168.240.212:16379\n192.168.240.213:16379> exit\n\n# 集群模式进入redis\nroot@docker-node003:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.240.211:16379> get airport_three_code\n-> Redirected to slot [7223] located at 192.168.240.212:16379\n\"FZX\"\n192.168.240.212:16379> info keyspace\n# Keyspace\ndb0:keys=55,expires=8,avg_ttl=166024718750\n\n```","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis检查.md","raw":"### 说明\n\nRedis客户端分单机和集群模式\n\n```shell\nredis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c\n```\n\n\n\n### 检查集群主从状态\n```shell\ndocker exec -it 7202ff1285d6 /bin/bash\n# 或者\ndocker-compose exec prod_cluster_redis_06 bash\n\n# 进入集群\nredis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c\n\nroot@docker-node001:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n8aafb13878e2ec78c751808882c9605ee03e0716 192.168.240.215:16379@26379 master - 0 1691544277000 7 connected 0-5460\n200db90e992c9b9b3f63d56aa562470e500b32e8 192.168.240.213:16379@26379 master - 0 1691544278832 3 connected 10923-16383\n69023301118e3f09059f74c38ad261294b0a6d93 192.168.240.211:16379@26379 myself,slave 8aafb13878e2ec78c751808882c9605ee03e0716 0 1691544278000 7 connected\n9ce84b0e4447131f45084153882841332f3b89e2 192.168.240.212:16379@26379 master - 0 1691544277828 2 connected 5461-10922\n25b34a35e8ecaf25fff0f5ac3e45dfabaa5ab69d 192.168.240.214:16379@26379 slave 200db90e992c9b9b3f63d56aa562470e500b32e8 0 1691544279837 3 connected\nba5c57df2ebf64b38afa06dc70a7a29db13f49cb 192.168.240.216:16379@26379 slave 9ce84b0e4447131f45084153882841332f3b89e2 0 1691544276000 2 connected\n```\n\n\n\n### key检查\n\n```shell\n192.168.240.211:16379> info keyspace\n# Keyspace\ndb0:keys=42,expires=8,avg_ttl=0\n\n# 慎重使用\n192.168.240.211:16379> keys *\n 1) \"merchant_app_info\"\n 2) \"sys_config:succDataTime\"\n\n\n```\n\n\n### 集群模式获取key值\n```shell\n# 单机模式进入node212\n192.168.240.212:16379> get airport_three_code\n\"FZX\"\n\n# 单机模式进入node213查询失败\n192.168.240.213:16379> get key SYSTEM:DICT:CODE_TYPE\n(error) ERR wrong number of arguments for 'get' command\n192.168.240.213:16379> get airport_three_code\n(error) MOVED 7223 192.168.240.212:16379\n192.168.240.213:16379> exit\n\n# 集群模式进入redis\nroot@docker-node003:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.240.211:16379> get airport_three_code\n-> Redirected to slot [7223] located at 192.168.240.212:16379\n\"FZX\"\n192.168.240.212:16379> info keyspace\n# Keyspace\ndb0:keys=55,expires=8,avg_ttl=166024718750\n\n```","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis检查","published":1,"date":"2023-09-01T13:06:37.870Z","updated":"2023-08-10T09:06:50.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2h0020zb8adgmqdzr6","content":"<h3 id=\"说明\">说明</h3>\n<p>Redis客户端分单机和集群模式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c</span><br></pre></td></tr></table></figure>\n<h3 id=\"检查集群主从状态\">检查集群主从状态</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it 7202ff1285d6 /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">或者</span></span><br><span class=\"line\">docker-compose exec prod_cluster_redis_06 bash</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入集群</span></span><br><span class=\"line\">redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c</span><br><span class=\"line\"></span><br><span class=\"line\">root@docker-node001:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">8aafb13878e2ec78c751808882c9605ee03e0716 192.168.240.215:16379@26379 master - 0 1691544277000 7 connected 0-5460</span><br><span class=\"line\">200db90e992c9b9b3f63d56aa562470e500b32e8 192.168.240.213:16379@26379 master - 0 1691544278832 3 connected 10923-16383</span><br><span class=\"line\">69023301118e3f09059f74c38ad261294b0a6d93 192.168.240.211:16379@26379 myself,slave 8aafb13878e2ec78c751808882c9605ee03e0716 0 1691544278000 7 connected</span><br><span class=\"line\">9ce84b0e4447131f45084153882841332f3b89e2 192.168.240.212:16379@26379 master - 0 1691544277828 2 connected 5461-10922</span><br><span class=\"line\">25b34a35e8ecaf25fff0f5ac3e45dfabaa5ab69d 192.168.240.214:16379@26379 slave 200db90e992c9b9b3f63d56aa562470e500b32e8 0 1691544279837 3 connected</span><br><span class=\"line\">ba5c57df2ebf64b38afa06dc70a7a29db13f49cb 192.168.240.216:16379@26379 slave 9ce84b0e4447131f45084153882841332f3b89e2 0 1691544276000 2 connected</span><br></pre></td></tr></table></figure>\n<h3 id=\"key检查\">key检查</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.240.211:16379&gt; info keyspace</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Keyspace</span></span><br><span class=\"line\">db0:keys=42,expires=8,avg_ttl=0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">慎重使用</span></span><br><span class=\"line\">192.168.240.211:16379&gt; keys *</span><br><span class=\"line\"> 1) &quot;merchant_app_info&quot;</span><br><span class=\"line\"> 2) &quot;sys_config:succDataTime&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"集群模式获取key值\">集群模式获取key值</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">单机模式进入node212</span></span><br><span class=\"line\">192.168.240.212:16379&gt; get airport_three_code</span><br><span class=\"line\">&quot;FZX&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">单机模式进入node213查询失败</span></span><br><span class=\"line\">192.168.240.213:16379&gt; get key SYSTEM:DICT:CODE_TYPE</span><br><span class=\"line\">(error) ERR wrong number of arguments for &#x27;get&#x27; command</span><br><span class=\"line\">192.168.240.213:16379&gt; get airport_three_code</span><br><span class=\"line\">(error) MOVED 7223 192.168.240.212:16379</span><br><span class=\"line\">192.168.240.213:16379&gt; exit</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">集群模式进入redis</span></span><br><span class=\"line\">root@docker-node003:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.240.211:16379&gt; get airport_three_code</span><br><span class=\"line\"><span class=\"meta prompt_\">-&gt; </span><span class=\"language-bash\">Redirected to slot [7223] located at 192.168.240.212:16379</span></span><br><span class=\"line\">&quot;FZX&quot;</span><br><span class=\"line\">192.168.240.212:16379&gt; info keyspace</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Keyspace</span></span><br><span class=\"line\">db0:keys=55,expires=8,avg_ttl=166024718750</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"说明\">说明</h3>\n<p>Redis客户端分单机和集群模式</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c</span><br></pre></td></tr></table></figure>\n<h3 id=\"检查集群主从状态\">检查集群主从状态</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it 7202ff1285d6 /bin/bash</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">或者</span></span><br><span class=\"line\">docker-compose exec prod_cluster_redis_06 bash</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">进入集群</span></span><br><span class=\"line\">redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c</span><br><span class=\"line\"></span><br><span class=\"line\">root@docker-node001:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 cluster nodes</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">8aafb13878e2ec78c751808882c9605ee03e0716 192.168.240.215:16379@26379 master - 0 1691544277000 7 connected 0-5460</span><br><span class=\"line\">200db90e992c9b9b3f63d56aa562470e500b32e8 192.168.240.213:16379@26379 master - 0 1691544278832 3 connected 10923-16383</span><br><span class=\"line\">69023301118e3f09059f74c38ad261294b0a6d93 192.168.240.211:16379@26379 myself,slave 8aafb13878e2ec78c751808882c9605ee03e0716 0 1691544278000 7 connected</span><br><span class=\"line\">9ce84b0e4447131f45084153882841332f3b89e2 192.168.240.212:16379@26379 master - 0 1691544277828 2 connected 5461-10922</span><br><span class=\"line\">25b34a35e8ecaf25fff0f5ac3e45dfabaa5ab69d 192.168.240.214:16379@26379 slave 200db90e992c9b9b3f63d56aa562470e500b32e8 0 1691544279837 3 connected</span><br><span class=\"line\">ba5c57df2ebf64b38afa06dc70a7a29db13f49cb 192.168.240.216:16379@26379 slave 9ce84b0e4447131f45084153882841332f3b89e2 0 1691544276000 2 connected</span><br></pre></td></tr></table></figure>\n<h3 id=\"key检查\">key检查</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.240.211:16379&gt; info keyspace</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Keyspace</span></span><br><span class=\"line\">db0:keys=42,expires=8,avg_ttl=0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">慎重使用</span></span><br><span class=\"line\">192.168.240.211:16379&gt; keys *</span><br><span class=\"line\"> 1) &quot;merchant_app_info&quot;</span><br><span class=\"line\"> 2) &quot;sys_config:succDataTime&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"集群模式获取key值\">集群模式获取key值</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">单机模式进入node212</span></span><br><span class=\"line\">192.168.240.212:16379&gt; get airport_three_code</span><br><span class=\"line\">&quot;FZX&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">单机模式进入node213查询失败</span></span><br><span class=\"line\">192.168.240.213:16379&gt; get key SYSTEM:DICT:CODE_TYPE</span><br><span class=\"line\">(error) ERR wrong number of arguments for &#x27;get&#x27; command</span><br><span class=\"line\">192.168.240.213:16379&gt; get airport_three_code</span><br><span class=\"line\">(error) MOVED 7223 192.168.240.212:16379</span><br><span class=\"line\">192.168.240.213:16379&gt; exit</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">集群模式进入redis</span></span><br><span class=\"line\">root@docker-node003:/data# redis-cli -h 192.168.240.211 -p 16379 -a redis#SZT7658 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.240.211:16379&gt; get airport_three_code</span><br><span class=\"line\"><span class=\"meta prompt_\">-&gt; </span><span class=\"language-bash\">Redirected to slot [7223] located at 192.168.240.212:16379</span></span><br><span class=\"line\">&quot;FZX&quot;</span><br><span class=\"line\">192.168.240.212:16379&gt; info keyspace</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Keyspace</span></span><br><span class=\"line\">db0:keys=55,expires=8,avg_ttl=166024718750</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"\n\n### 创建配置数据存放目录\n```\nmkdir -p /docker_data/zookeeper/{conf,data,datalog}\nconf：zoo.cfg\ndata：myid\n```\n\n```\n# /etc/localtime为系统时区，无需修改挂在路径\ndocker run --name prod_zookeeper_cluster_09 \\\n-v /docker_data/zookeeper/conf:/conf \\\n-v /docker_data/zookeeper/data:/data \\\n-v /docker_data/zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n--net=host \\\n--restart=always \\\n--privileged=true \\\n-d zookeeper:3.7.1\n```\n\n### 修改集群配置文件\n每台都一样\nzoo.cfg\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/data\nclientPort=2181\n\n\nserver.1=192.168.10.181:2888:3888\nserver.2=192.168.10.182:2888:3888\nserver.3=192.168.10.183:2888:3888\nserver.4=192.168.10.184:2888:3888\nserver.5=192.168.10.185:2888:3888\nserver.6=192.168.10.186:2888:3888\n```\n\n### 查看集群\n正常情况下node3应该成为leader\n\ndocker exec -it prod_zookeeper_cluster_01 /bin/bash\nzkServer.sh status\ndocker exec -it prod_cluster_zookeeper_01 zkServer.sh status\n\n\n\ndocker run --name prod_zookeeper_cluster_06 \\\n-v /data/middleware/zookeeper/config:/conf \\\n-v /data/middleware/zookeeper/data:/data \\\n-v /data/middleware/zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n-e ZOO_LOG4J_PROP = \"INFO,ROLLINGFILE\" \\\n--net=host \\\n--restart=always \\\n--privileged=true \\\n-d zookeeper:3.7.1\n\n -e ZOO_MY_ID = 4\n\n\ndocker run --name prod_zookeeper_cluster_06 \\\n-v /data/middleware/zookeeper/config:/conf \\\n-v /data/middleware/zookeeper/data:/data \\\n-v /data/middleware/zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n-e ZOO_LOG4J_PROP=\"INFO,ROLLINGFILE\" \\\n-e ZOO_MY_ID=1 \\\n--net=host \\\n--restart=always  \\\n--privileged=true  zookeeper:3.7.1\n\ndocker stop  prod_zookeeper_cluster_06 && docker rm  prod_zookeeper_cluster_06\ndocker exec -it prod_zookeeper_cluster_06 /bin/bash\n\ndocker start prod_zookeeper_cluster_06\n\ndocker-compose exec prod_cluster_zookeeper_01 bash","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper.md","raw":"\n\n### 创建配置数据存放目录\n```\nmkdir -p /docker_data/zookeeper/{conf,data,datalog}\nconf：zoo.cfg\ndata：myid\n```\n\n```\n# /etc/localtime为系统时区，无需修改挂在路径\ndocker run --name prod_zookeeper_cluster_09 \\\n-v /docker_data/zookeeper/conf:/conf \\\n-v /docker_data/zookeeper/data:/data \\\n-v /docker_data/zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n--net=host \\\n--restart=always \\\n--privileged=true \\\n-d zookeeper:3.7.1\n```\n\n### 修改集群配置文件\n每台都一样\nzoo.cfg\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/data\nclientPort=2181\n\n\nserver.1=192.168.10.181:2888:3888\nserver.2=192.168.10.182:2888:3888\nserver.3=192.168.10.183:2888:3888\nserver.4=192.168.10.184:2888:3888\nserver.5=192.168.10.185:2888:3888\nserver.6=192.168.10.186:2888:3888\n```\n\n### 查看集群\n正常情况下node3应该成为leader\n\ndocker exec -it prod_zookeeper_cluster_01 /bin/bash\nzkServer.sh status\ndocker exec -it prod_cluster_zookeeper_01 zkServer.sh status\n\n\n\ndocker run --name prod_zookeeper_cluster_06 \\\n-v /data/middleware/zookeeper/config:/conf \\\n-v /data/middleware/zookeeper/data:/data \\\n-v /data/middleware/zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n-e ZOO_LOG4J_PROP = \"INFO,ROLLINGFILE\" \\\n--net=host \\\n--restart=always \\\n--privileged=true \\\n-d zookeeper:3.7.1\n\n -e ZOO_MY_ID = 4\n\n\ndocker run --name prod_zookeeper_cluster_06 \\\n-v /data/middleware/zookeeper/config:/conf \\\n-v /data/middleware/zookeeper/data:/data \\\n-v /data/middleware/zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n-e ZOO_LOG4J_PROP=\"INFO,ROLLINGFILE\" \\\n-e ZOO_MY_ID=1 \\\n--net=host \\\n--restart=always  \\\n--privileged=true  zookeeper:3.7.1\n\ndocker stop  prod_zookeeper_cluster_06 && docker rm  prod_zookeeper_cluster_06\ndocker exec -it prod_zookeeper_cluster_06 /bin/bash\n\ndocker start prod_zookeeper_cluster_06\n\ndocker-compose exec prod_cluster_zookeeper_01 bash","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper","published":1,"date":"2023-09-01T13:06:37.880Z","updated":"2023-07-21T06:35:42.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2h0021zb8adzx5200p","content":"<h3 id=\"创建配置数据存放目录\">创建配置数据存放目录</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/zookeeper/&#123;conf,data,datalog&#125;</span><br><span class=\"line\">conf：zoo.cfg</span><br><span class=\"line\">data：myid</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/localtime为系统时区，无需修改挂在路径</span><br><span class=\"line\">docker run --name prod_zookeeper_cluster_09 \\</span><br><span class=\"line\">-v /docker_data/zookeeper/conf:/conf \\</span><br><span class=\"line\">-v /docker_data/zookeeper/data:/data \\</span><br><span class=\"line\">-v /docker_data/zookeeper/datalog:/datalog \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--net=host \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">--privileged=true \\</span><br><span class=\"line\">-d zookeeper:3.7.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改集群配置文件\">修改集群配置文件</h3>\n<p>每台都一样<br>\nzoo.cfg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/data</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server.1=192.168.10.181:2888:3888</span><br><span class=\"line\">server.2=192.168.10.182:2888:3888</span><br><span class=\"line\">server.3=192.168.10.183:2888:3888</span><br><span class=\"line\">server.4=192.168.10.184:2888:3888</span><br><span class=\"line\">server.5=192.168.10.185:2888:3888</span><br><span class=\"line\">server.6=192.168.10.186:2888:3888</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看集群\">查看集群</h3>\n<p>正常情况下node3应该成为leader</p>\n<p>docker exec -it prod_zookeeper_cluster_01 /bin/bash<br>\n<a href=\"http://zkServer.sh\">zkServer.sh</a> status<br>\ndocker exec -it prod_cluster_zookeeper_01 <a href=\"http://zkServer.sh\">zkServer.sh</a> status</p>\n<p>docker run --name prod_zookeeper_cluster_06 <br>\n-v /data/middleware/zookeeper/config:/conf <br>\n-v /data/middleware/zookeeper/data:/data <br>\n-v /data/middleware/zookeeper/datalog:/datalog <br>\n-v /etc/localtime:/etc/localtime <br>\n-e ZOO_LOG4J_PROP = “INFO,ROLLINGFILE” <br>\n–net=host <br>\n–restart=always <br>\n–privileged=true <br>\n-d zookeeper:3.7.1</p>\n<p>-e ZOO_MY_ID = 4</p>\n<p>docker run --name prod_zookeeper_cluster_06 <br>\n-v /data/middleware/zookeeper/config:/conf <br>\n-v /data/middleware/zookeeper/data:/data <br>\n-v /data/middleware/zookeeper/datalog:/datalog <br>\n-v /etc/localtime:/etc/localtime <br>\n-e ZOO_LOG4J_PROP=“INFO,ROLLINGFILE” <br>\n-e ZOO_MY_ID=1 <br>\n–net=host <br>\n–restart=always  <br>\n–privileged=true  zookeeper:3.7.1</p>\n<p>docker stop  prod_zookeeper_cluster_06 &amp;&amp; docker rm  prod_zookeeper_cluster_06<br>\ndocker exec -it prod_zookeeper_cluster_06 /bin/bash</p>\n<p>docker start prod_zookeeper_cluster_06</p>\n<p>docker-compose exec prod_cluster_zookeeper_01 bash</p>\n","excerpt":"","more":"<h3 id=\"创建配置数据存放目录\">创建配置数据存放目录</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/zookeeper/&#123;conf,data,datalog&#125;</span><br><span class=\"line\">conf：zoo.cfg</span><br><span class=\"line\">data：myid</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/localtime为系统时区，无需修改挂在路径</span><br><span class=\"line\">docker run --name prod_zookeeper_cluster_09 \\</span><br><span class=\"line\">-v /docker_data/zookeeper/conf:/conf \\</span><br><span class=\"line\">-v /docker_data/zookeeper/data:/data \\</span><br><span class=\"line\">-v /docker_data/zookeeper/datalog:/datalog \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--net=host \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">--privileged=true \\</span><br><span class=\"line\">-d zookeeper:3.7.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改集群配置文件\">修改集群配置文件</h3>\n<p>每台都一样<br>\nzoo.cfg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/data</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">server.1=192.168.10.181:2888:3888</span><br><span class=\"line\">server.2=192.168.10.182:2888:3888</span><br><span class=\"line\">server.3=192.168.10.183:2888:3888</span><br><span class=\"line\">server.4=192.168.10.184:2888:3888</span><br><span class=\"line\">server.5=192.168.10.185:2888:3888</span><br><span class=\"line\">server.6=192.168.10.186:2888:3888</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看集群\">查看集群</h3>\n<p>正常情况下node3应该成为leader</p>\n<p>docker exec -it prod_zookeeper_cluster_01 /bin/bash<br>\n<a href=\"http://zkServer.sh\">zkServer.sh</a> status<br>\ndocker exec -it prod_cluster_zookeeper_01 <a href=\"http://zkServer.sh\">zkServer.sh</a> status</p>\n<p>docker run --name prod_zookeeper_cluster_06 <br>\n-v /data/middleware/zookeeper/config:/conf <br>\n-v /data/middleware/zookeeper/data:/data <br>\n-v /data/middleware/zookeeper/datalog:/datalog <br>\n-v /etc/localtime:/etc/localtime <br>\n-e ZOO_LOG4J_PROP = “INFO,ROLLINGFILE” <br>\n–net=host <br>\n–restart=always <br>\n–privileged=true <br>\n-d zookeeper:3.7.1</p>\n<p>-e ZOO_MY_ID = 4</p>\n<p>docker run --name prod_zookeeper_cluster_06 <br>\n-v /data/middleware/zookeeper/config:/conf <br>\n-v /data/middleware/zookeeper/data:/data <br>\n-v /data/middleware/zookeeper/datalog:/datalog <br>\n-v /etc/localtime:/etc/localtime <br>\n-e ZOO_LOG4J_PROP=“INFO,ROLLINGFILE” <br>\n-e ZOO_MY_ID=1 <br>\n–net=host <br>\n–restart=always  <br>\n–privileged=true  zookeeper:3.7.1</p>\n<p>docker stop  prod_zookeeper_cluster_06 &amp;&amp; docker rm  prod_zookeeper_cluster_06<br>\ndocker exec -it prod_zookeeper_cluster_06 /bin/bash</p>\n<p>docker start prod_zookeeper_cluster_06</p>\n<p>docker-compose exec prod_cluster_zookeeper_01 bash</p>\n"},{"_content":"\n### 配置文件\n```\n# ----------------------------------------------------------\n#                        Redis配置\n# 1、生产环境需修改maxmemory\n# 2、端口修改为16379，通信端口会自动+10000\n# 3、别配置logfile /logs/redis.log && loglevel warning，docker会起不来\n# 4、配置了daemonize yes一样起不了\n# ----------------------------------------------------------\n\n\n# 绑定本机\nbind 0.0.0.0\n# 修改默认端口\nport 16379\n# 启用守护进程\ndaemonize yes\n# 指定本地数据库存放目录\ndir /data\n\n# 集群配置\ncluster-enabled yes\ncluster-config-file nodes-16379.conf\ncluster-node-timeout 15000\n# 打开AOF配置\nappendonly yes\n\n\n# 至少15分钟内有一个key变化；或者5分钟有100个变化；或者60秒有10000个变化，保存一次\nsave 900 1\nsave 300 100\nsave 60 10000\n\n# 设置密码，masterauth从机用，requirepass客户端用\nmasterauth 'redis#SZT7658'\nrequirepass 'redis#SZT7658'\n\n# 内存：生产环境设置为64gb\nmaxmemory 2048mb\n```\n\n\n\n### 配置防火墙\n\n```shell\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n\n```\n\n\n\n\n\n### 启动docker\n\n```shell\n#若有docker请先删除\ndocker stop dev-redis-cluster-01 && docker rm dev-redis-cluster-01\ndocker stop dev-redis-cluster-02 && docker rm dev-redis-cluster-02\ndocker stop dev-redis-cluster-03 && docker rm dev-redis-cluster-03\ndocker stop dev-redis-cluster-04 && docker rm dev-redis-cluster-04\ndocker stop dev-redis-cluster-05 && docker rm dev-redis-cluster-05\ndocker stop dev-redis-cluster-06 && docker rm dev-redis-cluster-06\ndocker stop dev-redis-cluster-07 && docker rm dev-redis-cluster-07\ndocker stop dev-redis-cluster-08 && docker rm dev-redis-cluster-08\n\n# 创建pod\ndocker run --restart=always \\\n--name dev-redis-cluster-8 \\\n-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\\n--net host  \\\n-d redis:7.0.11 redis-server /etc/redis/redis.conf\n-v /docker_data/redis/data3:/data \\\n\n```\n\n### 创建集群\n删除\nrm -rf /data/middleware/redis/data/* && docker-compose down --remove-orphans && docker-compose up -d\n\n\n```shell\ndocker exec -it dev-redis-cluster-04 /bin/bash\ndocker-compose exec prod_cluster_redis_06 bash\n\nredis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 cluster nodes\n\n# cluster-replicas 1 表示每个主节点需要1个从节点\nredis-cli --cluster create 192.168.10.181:16379 192.168.10.182:16379 192.168.10.183:16379 192.168.10.184:16379 192.168.10.185:16379 192.168.10.186:16379 --cluster-replicas 1 -a redis#SZT7658\n\n\n```\n\n\n\n### 加入集群\n\n```shell\n#确认集群信息\nroot@node1:/data# redis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.181:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\n\n\n192.168.10.181:6379> cluster nodes\ne0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383\n\n#新节点加入集群\nredis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning\n\n```\n\n\n\n\n### 问题处理\n```shell\nWARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\n将vm.overcommit_memory = 1添加到/etc/sysctl.conf中，然后执行sysctl -p生效配置。\n\nWARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\n\n将net.core.somaxconn = 1024添加到/etc/sysctl.conf中，然后执行`sysctl -p`生效配置。\n\n\n redis.conf 中设置了 daemonize yes\n\n 当daemonize 设置了yes，表示redis在后台运行，当执行docker-compose执行启动redis进程时，docker发现自己无事可做，容器自动结束，所以导致redis启动失败。\n\n\n\n https://blog.csdn.net/zyxzj/article/details/106905270\n```","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis配置.md","raw":"\n### 配置文件\n```\n# ----------------------------------------------------------\n#                        Redis配置\n# 1、生产环境需修改maxmemory\n# 2、端口修改为16379，通信端口会自动+10000\n# 3、别配置logfile /logs/redis.log && loglevel warning，docker会起不来\n# 4、配置了daemonize yes一样起不了\n# ----------------------------------------------------------\n\n\n# 绑定本机\nbind 0.0.0.0\n# 修改默认端口\nport 16379\n# 启用守护进程\ndaemonize yes\n# 指定本地数据库存放目录\ndir /data\n\n# 集群配置\ncluster-enabled yes\ncluster-config-file nodes-16379.conf\ncluster-node-timeout 15000\n# 打开AOF配置\nappendonly yes\n\n\n# 至少15分钟内有一个key变化；或者5分钟有100个变化；或者60秒有10000个变化，保存一次\nsave 900 1\nsave 300 100\nsave 60 10000\n\n# 设置密码，masterauth从机用，requirepass客户端用\nmasterauth 'redis#SZT7658'\nrequirepass 'redis#SZT7658'\n\n# 内存：生产环境设置为64gb\nmaxmemory 2048mb\n```\n\n\n\n### 配置防火墙\n\n```shell\nfirewall-cmd --add-port=6379/tcp --permanent\nfirewall-cmd --add-port=6380/tcp --permanent\nfirewall-cmd --add-port=16379/tcp --permanent\nfirewall-cmd --reload\n\n```\n\n\n\n\n\n### 启动docker\n\n```shell\n#若有docker请先删除\ndocker stop dev-redis-cluster-01 && docker rm dev-redis-cluster-01\ndocker stop dev-redis-cluster-02 && docker rm dev-redis-cluster-02\ndocker stop dev-redis-cluster-03 && docker rm dev-redis-cluster-03\ndocker stop dev-redis-cluster-04 && docker rm dev-redis-cluster-04\ndocker stop dev-redis-cluster-05 && docker rm dev-redis-cluster-05\ndocker stop dev-redis-cluster-06 && docker rm dev-redis-cluster-06\ndocker stop dev-redis-cluster-07 && docker rm dev-redis-cluster-07\ndocker stop dev-redis-cluster-08 && docker rm dev-redis-cluster-08\n\n# 创建pod\ndocker run --restart=always \\\n--name dev-redis-cluster-8 \\\n-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\\n--net host  \\\n-d redis:7.0.11 redis-server /etc/redis/redis.conf\n-v /docker_data/redis/data3:/data \\\n\n```\n\n### 创建集群\n删除\nrm -rf /data/middleware/redis/data/* && docker-compose down --remove-orphans && docker-compose up -d\n\n\n```shell\ndocker exec -it dev-redis-cluster-04 /bin/bash\ndocker-compose exec prod_cluster_redis_06 bash\n\nredis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 cluster nodes\n\n# cluster-replicas 1 表示每个主节点需要1个从节点\nredis-cli --cluster create 192.168.10.181:16379 192.168.10.182:16379 192.168.10.183:16379 192.168.10.184:16379 192.168.10.185:16379 192.168.10.186:16379 --cluster-replicas 1 -a redis#SZT7658\n\n\n```\n\n\n\n### 加入集群\n\n```shell\n#确认集群信息\nroot@node1:/data# redis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 -c\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n192.168.10.181:6379> cluster info\ncluster_state:ok\ncluster_slots_assigned:16384\n\n\n192.168.10.181:6379> cluster nodes\ne0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383\n\n#新节点加入集群\nredis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning\n\n```\n\n\n\n\n### 问题处理\n```shell\nWARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.\n\n将vm.overcommit_memory = 1添加到/etc/sysctl.conf中，然后执行sysctl -p生效配置。\n\nWARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.\n\n将net.core.somaxconn = 1024添加到/etc/sysctl.conf中，然后执行`sysctl -p`生效配置。\n\n\n redis.conf 中设置了 daemonize yes\n\n 当daemonize 设置了yes，表示redis在后台运行，当执行docker-compose执行启动redis进程时，docker发现自己无事可做，容器自动结束，所以导致redis启动失败。\n\n\n\n https://blog.csdn.net/zyxzj/article/details/106905270\n```","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Redis配置","published":1,"date":"2023-09-01T13:06:37.870Z","updated":"2023-07-15T13:57:14.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2i0022zb8ab4d5dqei","content":"<h3 id=\"配置文件\">配置文件</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ----------------------------------------------------------</span><br><span class=\"line\">#                        Redis配置</span><br><span class=\"line\"># 1、生产环境需修改maxmemory</span><br><span class=\"line\"># 2、端口修改为16379，通信端口会自动+10000</span><br><span class=\"line\"># 3、别配置logfile /logs/redis.log &amp;&amp; loglevel warning，docker会起不来</span><br><span class=\"line\"># 4、配置了daemonize yes一样起不了</span><br><span class=\"line\"># ----------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 绑定本机</span><br><span class=\"line\">bind 0.0.0.0</span><br><span class=\"line\"># 修改默认端口</span><br><span class=\"line\">port 16379</span><br><span class=\"line\"># 启用守护进程</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\"># 指定本地数据库存放目录</span><br><span class=\"line\">dir /data</span><br><span class=\"line\"></span><br><span class=\"line\"># 集群配置</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">cluster-config-file nodes-16379.conf</span><br><span class=\"line\">cluster-node-timeout 15000</span><br><span class=\"line\"># 打开AOF配置</span><br><span class=\"line\">appendonly yes</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 至少15分钟内有一个key变化；或者5分钟有100个变化；或者60秒有10000个变化，保存一次</span><br><span class=\"line\">save 900 1</span><br><span class=\"line\">save 300 100</span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置密码，masterauth从机用，requirepass客户端用</span><br><span class=\"line\">masterauth &#x27;redis#SZT7658&#x27;</span><br><span class=\"line\">requirepass &#x27;redis#SZT7658&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 内存：生产环境设置为64gb</span><br><span class=\"line\">maxmemory 2048mb</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动docker\">启动docker</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">若有docker请先删除</span></span><br><span class=\"line\">docker stop dev-redis-cluster-01 &amp;&amp; docker rm dev-redis-cluster-01</span><br><span class=\"line\">docker stop dev-redis-cluster-02 &amp;&amp; docker rm dev-redis-cluster-02</span><br><span class=\"line\">docker stop dev-redis-cluster-03 &amp;&amp; docker rm dev-redis-cluster-03</span><br><span class=\"line\">docker stop dev-redis-cluster-04 &amp;&amp; docker rm dev-redis-cluster-04</span><br><span class=\"line\">docker stop dev-redis-cluster-05 &amp;&amp; docker rm dev-redis-cluster-05</span><br><span class=\"line\">docker stop dev-redis-cluster-06 &amp;&amp; docker rm dev-redis-cluster-06</span><br><span class=\"line\">docker stop dev-redis-cluster-07 &amp;&amp; docker rm dev-redis-cluster-07</span><br><span class=\"line\">docker stop dev-redis-cluster-08 &amp;&amp; docker rm dev-redis-cluster-08</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建pod</span></span><br><span class=\"line\">docker run --restart=always \\</span><br><span class=\"line\">--name dev-redis-cluster-8 \\</span><br><span class=\"line\">-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\</span><br><span class=\"line\">--net host  \\</span><br><span class=\"line\">-d redis:7.0.11 redis-server /etc/redis/redis.conf</span><br><span class=\"line\">-v /docker_data/redis/data3:/data \\</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建集群\">创建集群</h3>\n<p>删除<br>\nrm -rf /data/middleware/redis/data/* &amp;&amp; docker-compose down --remove-orphans &amp;&amp; docker-compose up -d</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it dev-redis-cluster-04 /bin/bash</span><br><span class=\"line\">docker-compose exec prod_cluster_redis_06 bash</span><br><span class=\"line\"></span><br><span class=\"line\">redis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 cluster nodes</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">cluster-replicas 1 表示每个主节点需要1个从节点</span></span><br><span class=\"line\">redis-cli --cluster create 192.168.10.181:16379 192.168.10.182:16379 192.168.10.183:16379 192.168.10.184:16379 192.168.10.185:16379 192.168.10.186:16379 --cluster-replicas 1 -a redis#SZT7658</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"加入集群\">加入集群</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">确认集群信息</span></span><br><span class=\"line\">root@node1:/data# redis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.181:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.181:6379&gt; cluster nodes</span><br><span class=\"line\">e0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">新节点加入集群</span></span><br><span class=\"line\">redis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"问题处理\">问题处理</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br><span class=\"line\"></span><br><span class=\"line\">将vm.overcommit_memory = 1添加到/etc/sysctl.conf中，然后执行sysctl -p生效配置。</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class=\"line\"></span><br><span class=\"line\">将net.core.somaxconn = 1024添加到/etc/sysctl.conf中，然后执行`sysctl -p`生效配置。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> redis.conf 中设置了 daemonize yes</span><br><span class=\"line\"></span><br><span class=\"line\"> 当daemonize 设置了yes，表示redis在后台运行，当执行docker-compose执行启动redis进程时，docker发现自己无事可做，容器自动结束，所以导致redis启动失败。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> https://blog.csdn.net/zyxzj/article/details/106905270</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"配置文件\">配置文件</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ----------------------------------------------------------</span><br><span class=\"line\">#                        Redis配置</span><br><span class=\"line\"># 1、生产环境需修改maxmemory</span><br><span class=\"line\"># 2、端口修改为16379，通信端口会自动+10000</span><br><span class=\"line\"># 3、别配置logfile /logs/redis.log &amp;&amp; loglevel warning，docker会起不来</span><br><span class=\"line\"># 4、配置了daemonize yes一样起不了</span><br><span class=\"line\"># ----------------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 绑定本机</span><br><span class=\"line\">bind 0.0.0.0</span><br><span class=\"line\"># 修改默认端口</span><br><span class=\"line\">port 16379</span><br><span class=\"line\"># 启用守护进程</span><br><span class=\"line\">daemonize yes</span><br><span class=\"line\"># 指定本地数据库存放目录</span><br><span class=\"line\">dir /data</span><br><span class=\"line\"></span><br><span class=\"line\"># 集群配置</span><br><span class=\"line\">cluster-enabled yes</span><br><span class=\"line\">cluster-config-file nodes-16379.conf</span><br><span class=\"line\">cluster-node-timeout 15000</span><br><span class=\"line\"># 打开AOF配置</span><br><span class=\"line\">appendonly yes</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 至少15分钟内有一个key变化；或者5分钟有100个变化；或者60秒有10000个变化，保存一次</span><br><span class=\"line\">save 900 1</span><br><span class=\"line\">save 300 100</span><br><span class=\"line\">save 60 10000</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置密码，masterauth从机用，requirepass客户端用</span><br><span class=\"line\">masterauth &#x27;redis#SZT7658&#x27;</span><br><span class=\"line\">requirepass &#x27;redis#SZT7658&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\"># 内存：生产环境设置为64gb</span><br><span class=\"line\">maxmemory 2048mb</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置防火墙\">配置防火墙</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=6379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=6380/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=16379/tcp --permanent</span><br><span class=\"line\">firewall-cmd --reload</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"启动docker\">启动docker</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">若有docker请先删除</span></span><br><span class=\"line\">docker stop dev-redis-cluster-01 &amp;&amp; docker rm dev-redis-cluster-01</span><br><span class=\"line\">docker stop dev-redis-cluster-02 &amp;&amp; docker rm dev-redis-cluster-02</span><br><span class=\"line\">docker stop dev-redis-cluster-03 &amp;&amp; docker rm dev-redis-cluster-03</span><br><span class=\"line\">docker stop dev-redis-cluster-04 &amp;&amp; docker rm dev-redis-cluster-04</span><br><span class=\"line\">docker stop dev-redis-cluster-05 &amp;&amp; docker rm dev-redis-cluster-05</span><br><span class=\"line\">docker stop dev-redis-cluster-06 &amp;&amp; docker rm dev-redis-cluster-06</span><br><span class=\"line\">docker stop dev-redis-cluster-07 &amp;&amp; docker rm dev-redis-cluster-07</span><br><span class=\"line\">docker stop dev-redis-cluster-08 &amp;&amp; docker rm dev-redis-cluster-08</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建pod</span></span><br><span class=\"line\">docker run --restart=always \\</span><br><span class=\"line\">--name dev-redis-cluster-8 \\</span><br><span class=\"line\">-v /docker_data/redis/conf/redis.conf:/etc/redis/redis.conf \\</span><br><span class=\"line\">--net host  \\</span><br><span class=\"line\">-d redis:7.0.11 redis-server /etc/redis/redis.conf</span><br><span class=\"line\">-v /docker_data/redis/data3:/data \\</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建集群\">创建集群</h3>\n<p>删除<br>\nrm -rf /data/middleware/redis/data/* &amp;&amp; docker-compose down --remove-orphans &amp;&amp; docker-compose up -d</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it dev-redis-cluster-04 /bin/bash</span><br><span class=\"line\">docker-compose exec prod_cluster_redis_06 bash</span><br><span class=\"line\"></span><br><span class=\"line\">redis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 cluster nodes</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">cluster-replicas 1 表示每个主节点需要1个从节点</span></span><br><span class=\"line\">redis-cli --cluster create 192.168.10.181:16379 192.168.10.182:16379 192.168.10.183:16379 192.168.10.184:16379 192.168.10.185:16379 192.168.10.186:16379 --cluster-replicas 1 -a redis#SZT7658</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"加入集群\">加入集群</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">确认集群信息</span></span><br><span class=\"line\">root@node1:/data# redis-cli -h 192.168.10.181 -p 16379 -a redis#SZT7658 -c</span><br><span class=\"line\">Warning: Using a password with &#x27;-a&#x27; or &#x27;-u&#x27; option on the command line interface may not be safe.</span><br><span class=\"line\">192.168.10.181:6379&gt; cluster info</span><br><span class=\"line\">cluster_state:ok</span><br><span class=\"line\">cluster_slots_assigned:16384</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">192.168.10.181:6379&gt; cluster nodes</span><br><span class=\"line\">e0a18a1f85d514f49983c53ed43f043bcd912e33 192.168.10.184:6379@16379 master - 0 1687140733539 4 connected 12288-16383</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">新节点加入集群</span></span><br><span class=\"line\">redis-cli --cluster add-node 192.168.10.182:6379 192.168.10.181:6379 -a redis@szt2023nomeaning</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"问题处理\">问题处理</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add &#x27;vm.overcommit_memory = 1&#x27; to /etc/sysctl.conf and then reboot or run the command &#x27;sysctl vm.overcommit_memory=1&#x27; for this to take effect.</span><br><span class=\"line\"></span><br><span class=\"line\">将vm.overcommit_memory = 1添加到/etc/sysctl.conf中，然后执行sysctl -p生效配置。</span><br><span class=\"line\"></span><br><span class=\"line\">WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.</span><br><span class=\"line\"></span><br><span class=\"line\">将net.core.somaxconn = 1024添加到/etc/sysctl.conf中，然后执行`sysctl -p`生效配置。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> redis.conf 中设置了 daemonize yes</span><br><span class=\"line\"></span><br><span class=\"line\"> 当daemonize 设置了yes，表示redis在后台运行，当执行docker-compose执行启动redis进程时，docker发现自己无事可做，容器自动结束，所以导致redis启动失败。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> https://blog.csdn.net/zyxzj/article/details/106905270</span><br></pre></td></tr></table></figure>"},{"_content":"\n\n### docker-compose\n```shell\n  prod_cluster_zookeeper_01:\n    hostname: idszt-node001\n    image: ${zookeeper_image}\n    network_mode: host\n    volumes:\n      - /docker_data/zookeeper/conf:/conf\n      - /docker_data/zookeeper/data:/data\n      - /docker_data/zookeeper/datalog:/datalog\n      - /etc/localtime:/etc/localtime\n\n```\n\n### 统一集群配置文件\n每台都一样\nzoo.cfg\n```shell\n# CS通信心跳\ntickTime=2000\n# 初始通信时限\ninitLimit=10\n# 服务器之间请求和应答\nsyncLimit=5\n\ndataDir=/data\ndataLogDir=/datalog\n# 端口，默认2181\nclientPort=2181\n# 最大客户端链接数量，0不限制，默认是0\nmaxClientCnxns=100\n# 关闭启动内置的管理器8080端口\nadmin.enableServer=false\n# 开启自动清理，保留10天，500个文件\nautopurge.snapRetainCount=500\nautopurge.purgeInterval=240\n\nserver.1=192.168.10.181:2888:3888\nserver.2=192.168.10.182:2888:3888\nserver.3=192.168.10.183:2888:3888\nserver.4=192.168.10.184:2888:3888\nserver.5=192.168.10.185:2888:3888\nserver.6=192.168.10.186:2888:3888\n\n# 打开prometheus监控\nmetricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider\nmetricsProvider.httpPort=7000\nmetricsProvider.exportJvmInfo=true\n```\n\n防火墙\nhttps://www.cnblogs.com/zlonger/p/16195799.html\n\n\n### 启动过程\n\n2023-07-14 14:25:50,778 - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.\n2023-07-14 14:25:50,785 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):QuorumPeer@1438] - LOOKING\n2023-07-14 14:25:50,787 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):FastLeaderElection@945] - New election. My id = 3, proposed zxid=0x0\n2023-07-14 14:25:50,798 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x1, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,808 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,809 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LOOKING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,812 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,813 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,814 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,816 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,817 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,818 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):QuorumPeer@902] - Peer state changed: leading\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):QuorumPeer@1532] - LEADING","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper配置.md","raw":"\n\n### docker-compose\n```shell\n  prod_cluster_zookeeper_01:\n    hostname: idszt-node001\n    image: ${zookeeper_image}\n    network_mode: host\n    volumes:\n      - /docker_data/zookeeper/conf:/conf\n      - /docker_data/zookeeper/data:/data\n      - /docker_data/zookeeper/datalog:/datalog\n      - /etc/localtime:/etc/localtime\n\n```\n\n### 统一集群配置文件\n每台都一样\nzoo.cfg\n```shell\n# CS通信心跳\ntickTime=2000\n# 初始通信时限\ninitLimit=10\n# 服务器之间请求和应答\nsyncLimit=5\n\ndataDir=/data\ndataLogDir=/datalog\n# 端口，默认2181\nclientPort=2181\n# 最大客户端链接数量，0不限制，默认是0\nmaxClientCnxns=100\n# 关闭启动内置的管理器8080端口\nadmin.enableServer=false\n# 开启自动清理，保留10天，500个文件\nautopurge.snapRetainCount=500\nautopurge.purgeInterval=240\n\nserver.1=192.168.10.181:2888:3888\nserver.2=192.168.10.182:2888:3888\nserver.3=192.168.10.183:2888:3888\nserver.4=192.168.10.184:2888:3888\nserver.5=192.168.10.185:2888:3888\nserver.6=192.168.10.186:2888:3888\n\n# 打开prometheus监控\nmetricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider\nmetricsProvider.httpPort=7000\nmetricsProvider.exportJvmInfo=true\n```\n\n防火墙\nhttps://www.cnblogs.com/zlonger/p/16195799.html\n\n\n### 启动过程\n\n2023-07-14 14:25:50,778 - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.\n2023-07-14 14:25:50,785 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):QuorumPeer@1438] - LOOKING\n2023-07-14 14:25:50,787 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):FastLeaderElection@945] - New election. My id = 3, proposed zxid=0x0\n2023-07-14 14:25:50,798 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x1, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,808 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,809 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LOOKING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,812 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,813 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,814 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,816 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,817 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:50,818 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):QuorumPeer@902] - Peer state changed: leading\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer[myid=3](plain=0.0.0.0:12181)(secure=disabled):QuorumPeer@1532] - LEADING","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群容器部署.Zookeeper配置","published":1,"date":"2023-09-01T13:06:37.890Z","updated":"2023-07-14T06:28:08.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2i0023zb8a7a6u3ngd","content":"<h3 id=\"docker-compose\">docker-compose</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prod_cluster_zookeeper_01:</span><br><span class=\"line\">  hostname: idszt-node001</span><br><span class=\"line\">  image: $&#123;zookeeper_image&#125;</span><br><span class=\"line\">  network_mode: host</span><br><span class=\"line\">  volumes:</span><br><span class=\"line\">    - /docker_data/zookeeper/conf:/conf</span><br><span class=\"line\">    - /docker_data/zookeeper/data:/data</span><br><span class=\"line\">    - /docker_data/zookeeper/datalog:/datalog</span><br><span class=\"line\">    - /etc/localtime:/etc/localtime</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"统一集群配置文件\">统一集群配置文件</h3>\n<p>每台都一样<br>\nzoo.cfg</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CS通信心跳</span></span><br><span class=\"line\">tickTime=2000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初始通信时限</span></span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">服务器之间请求和应答</span></span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\"></span><br><span class=\"line\">dataDir=/data</span><br><span class=\"line\">dataLogDir=/datalog</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">端口，默认2181</span></span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">最大客户端链接数量，0不限制，默认是0</span></span><br><span class=\"line\">maxClientCnxns=100</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">关闭启动内置的管理器8080端口</span></span><br><span class=\"line\">admin.enableServer=false</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">开启自动清理，保留10天，500个文件</span></span><br><span class=\"line\">autopurge.snapRetainCount=500</span><br><span class=\"line\">autopurge.purgeInterval=240</span><br><span class=\"line\"></span><br><span class=\"line\">server.1=192.168.10.181:2888:3888</span><br><span class=\"line\">server.2=192.168.10.182:2888:3888</span><br><span class=\"line\">server.3=192.168.10.183:2888:3888</span><br><span class=\"line\">server.4=192.168.10.184:2888:3888</span><br><span class=\"line\">server.5=192.168.10.185:2888:3888</span><br><span class=\"line\">server.6=192.168.10.186:2888:3888</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开prometheus监控</span></span><br><span class=\"line\">metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class=\"line\">metricsProvider.httpPort=7000</span><br><span class=\"line\">metricsProvider.exportJvmInfo=true</span><br></pre></td></tr></table></figure>\n<p>防火墙<br>\n<a href=\"https://www.cnblogs.com/zlonger/p/16195799.html\">https://www.cnblogs.com/zlonger/p/16195799.html</a></p>\n<h3 id=\"启动过程\">启动过程</h3>\n<p>2023-07-14 14:25:50,778 - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.<br>\n2023-07-14 14:25:50,785 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):QuorumPeer@1438] - LOOKING<br>\n2023-07-14 14:25:50,787 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):FastLeaderElection@945] - New election. My id = 3, proposed zxid=0x0<br>\n2023-07-14 14:25:50,798 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x1, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,808 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,809 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LOOKING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,812 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,813 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,814 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,816 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,817 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,818 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):QuorumPeer@902] - Peer state changed: leading<br>\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):QuorumPeer@1532] - LEADING</p>\n","excerpt":"","more":"<h3 id=\"docker-compose\">docker-compose</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">prod_cluster_zookeeper_01:</span><br><span class=\"line\">  hostname: idszt-node001</span><br><span class=\"line\">  image: $&#123;zookeeper_image&#125;</span><br><span class=\"line\">  network_mode: host</span><br><span class=\"line\">  volumes:</span><br><span class=\"line\">    - /docker_data/zookeeper/conf:/conf</span><br><span class=\"line\">    - /docker_data/zookeeper/data:/data</span><br><span class=\"line\">    - /docker_data/zookeeper/datalog:/datalog</span><br><span class=\"line\">    - /etc/localtime:/etc/localtime</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"统一集群配置文件\">统一集群配置文件</h3>\n<p>每台都一样<br>\nzoo.cfg</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">CS通信心跳</span></span><br><span class=\"line\">tickTime=2000</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">初始通信时限</span></span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">服务器之间请求和应答</span></span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\"></span><br><span class=\"line\">dataDir=/data</span><br><span class=\"line\">dataLogDir=/datalog</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">端口，默认2181</span></span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">最大客户端链接数量，0不限制，默认是0</span></span><br><span class=\"line\">maxClientCnxns=100</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">关闭启动内置的管理器8080端口</span></span><br><span class=\"line\">admin.enableServer=false</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">开启自动清理，保留10天，500个文件</span></span><br><span class=\"line\">autopurge.snapRetainCount=500</span><br><span class=\"line\">autopurge.purgeInterval=240</span><br><span class=\"line\"></span><br><span class=\"line\">server.1=192.168.10.181:2888:3888</span><br><span class=\"line\">server.2=192.168.10.182:2888:3888</span><br><span class=\"line\">server.3=192.168.10.183:2888:3888</span><br><span class=\"line\">server.4=192.168.10.184:2888:3888</span><br><span class=\"line\">server.5=192.168.10.185:2888:3888</span><br><span class=\"line\">server.6=192.168.10.186:2888:3888</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">打开prometheus监控</span></span><br><span class=\"line\">metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class=\"line\">metricsProvider.httpPort=7000</span><br><span class=\"line\">metricsProvider.exportJvmInfo=true</span><br></pre></td></tr></table></figure>\n<p>防火墙<br>\n<a href=\"https://www.cnblogs.com/zlonger/p/16195799.html\">https://www.cnblogs.com/zlonger/p/16195799.html</a></p>\n<h3 id=\"启动过程\">启动过程</h3>\n<p>2023-07-14 14:25:50,778 - INFO  [main:ZKAuditProvider@42] - ZooKeeper audit is disabled.<br>\n2023-07-14 14:25:50,785 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):QuorumPeer@1438] - LOOKING<br>\n2023-07-14 14:25:50,787 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):FastLeaderElection@945] - New election. My id = 3, proposed zxid=0x0<br>\n2023-07-14 14:25:50,798 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x1, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,808 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,809 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LOOKING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,812 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,813 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,814 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:3, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,816 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,817 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:1, n.state:LOOKING, n.leader:3, n.round:0x3, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:50,818 - INFO  [WorkerReceiver[myid=3]:FastLeaderElection$Messenger$WorkerReceiver@390] - Notification: my state:LOOKING; n.sid:2, n.state:LEADING, n.leader:2, n.round:0x2, n.peerEpoch:0x0, n.zxid:0x0, message format version:0x2, n.config version:0x0<br>\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):QuorumPeer@902] - Peer state changed: leading<br>\n2023-07-14 14:25:51,019 - INFO  [QuorumPeer<a href=\"plain=0.0.0.0:12181\">myid=3</a>(secure=disabled):QuorumPeer@1532] - LEADING</p>\n"},{"_content":"\nfirewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;\nfirewall-cmd --reload\n\n\n```shell\n# /etc/keepalived/closekeepalived.sh\n\n#!/bin/bash\n/usr/bin/mysql -uroot -pmysql#SZT2132 -e \"show status\" &>/dev/null\nif [ $? -ne 0 ] ;then\n    systemctl stop keepalived && echo \"keepalived已关闭，请检查！\"+ $(date \"+%Y-%m-%d %H:%M:%S\") >> /etc/keepalived/keepalived.log\nfi\n\n\n```\n\n\n```shell\n#------------217配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node007\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 217\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        192.168.240.219\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n\n\n#------------215配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node005\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 215\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        192.168.240.219\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n```","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.Keepalived.md","raw":"\nfirewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;\nfirewall-cmd --reload\n\n\n```shell\n# /etc/keepalived/closekeepalived.sh\n\n#!/bin/bash\n/usr/bin/mysql -uroot -pmysql#SZT2132 -e \"show status\" &>/dev/null\nif [ $? -ne 0 ] ;then\n    systemctl stop keepalived && echo \"keepalived已关闭，请检查！\"+ $(date \"+%Y-%m-%d %H:%M:%S\") >> /etc/keepalived/keepalived.log\nfi\n\n\n```\n\n\n```shell\n#------------217配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node007\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 217\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        192.168.240.219\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n\n\n#------------215配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node005\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 215\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        192.168.240.219\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n```","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.Keepalived","published":1,"date":"2023-09-01T13:06:37.890Z","updated":"2023-08-12T10:02:24.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2k0024zb8aa40fb8mu","content":"<p>firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;<br>\nfirewall-cmd --reload</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/etc/keepalived/closekeepalived.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/mysql -uroot -pmysql#SZT2132 -e &quot;show status&quot; &amp;&gt;/dev/null</span><br><span class=\"line\">if [ $? -ne 0 ] ;then</span><br><span class=\"line\">    systemctl stop keepalived &amp;&amp; echo &quot;keepalived已关闭，请检查！&quot;+ $(date &quot;+%Y-%m-%d %H:%M:%S&quot;) &gt;&gt; /etc/keepalived/keepalived.log</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------217配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node007</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 217</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.240.219</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------215配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node005</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 215</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.240.219</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;<br>\nfirewall-cmd --reload</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/etc/keepalived/closekeepalived.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/mysql -uroot -pmysql#SZT2132 -e &quot;show status&quot; &amp;&gt;/dev/null</span><br><span class=\"line\">if [ $? -ne 0 ] ;then</span><br><span class=\"line\">    systemctl stop keepalived &amp;&amp; echo &quot;keepalived已关闭，请检查！&quot;+ $(date &quot;+%Y-%m-%d %H:%M:%S&quot;) &gt;&gt; /etc/keepalived/keepalived.log</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------217配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node007</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 217</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.240.219</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------215配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node005</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 215</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.240.219</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"- 参考官网：https://dev.mysql.com/doc/refman/8.0/en/linux-installation-rpm.html\n\n### 上传安装包\n\n```shell\n#安装包mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar上传至/home/idszt/mysql_packages目录\n\nmkdir /home/idszt/mysql_packages && cd /home/idszt/mysql_packages\n\ntar -xvf mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar\nmv mysql-community* /root/mysql_packages && cd /root/mysql_packages\n\n\n```\n\n\n\n### 安装MySQL\n\n```shell\n[root@node5 ~]# rpm  -ivh  *.rpm --nodeps --force\n警告：mysql-community-client-8.0.32-1.el7.x86_64.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 3a79bd29: NOKEY\n  12:mysql-community-debuginfo-8.0.32-################################# [100%]\n```\n\n\n\n### 配置初始密码\nsystemctl enable mysqld\nsystemctl status mysqld\nsystemctl stop mysqld\n```shell\n[root@node5 ~]# systemctl restart mysqld\n[root@node5 ~]# sudo grep 'temporary password' /var/log/mysqld.log\n2023-06-19T06:27:07.286029Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: jK5K/g=la/=y\n[root@node5 ~]# mysql -uroot -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 8\nServer version: 8.0.32\n\nmysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'mysql#SZT2132';\nQuery OK, 0 rows affected (0.01 sec)\n```\n\n\n\n### 开启远程连接\n\n```shell\nmysql> use mysql;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> select user,host from user;\n+------------------+-----------+\n| user             | host      |\n+------------------+-----------+\n| mysql.infoschema | localhost |\n| mysql.session    | localhost |\n| mysql.sys        | localhost |\n| root             | localhost |\n+------------------+-----------+\n4 rows in set (0.00 sec)\n\nmysql> update user set host='%' where user='root';\nQuery OK, 1 row affected (0.01 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> flush privileges;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> select user,host from user;\n+------------------+-----------+\n| user             | host      |\n+------------------+-----------+\n| root             | %         |\n| mysql.infoschema | localhost |\n| mysql.session    | localhost |\n| mysql.sys        | localhost |\n+------------------+-----------+\n4 rows in set (0.01 sec)\n\n```\n\n\n\n### 允许防火墙访问\n\n```shell\n[root@node5 mysql_packages]# systemctl  start firewalld\n[root@node5 ~]# firewall-cmd --zone=public --add-port=3309/tcp --permanent\nsuccess\n[root@node5 ~]# firewall-cmd --reload\nsuccess\n[root@node5 ~]# firewall-cmd --list-all\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: ens32\n  sources:\n  services: dhcpv6-client ssh\n  ports: 6379/tcp 6380/tcp 16379/tcp 3306/tcp\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n```\n\n### 配置双主\n\n两台主机均创建用户\n\n```\nmysql> CREATE USER 'repl'@'192.168.240.27' IDENTIFIED WITH mysql_native_password BY 'repl@BAS8796';\nmysql> GRANT REPLICATION SLAVE ON *.* TO  'repl'@'192.168.240.27' ;\nmysql> flush privileges;\n```\n\n/etc/my.cnf 添加以下配置，注意修改server-id和master-host\n\n```\nlog-bin=bin-log\nserver-id=186\n\n[client-server]\n\n#\n# include all files from the config directory\n#\n!includedir /etc/my.cnf.d\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=test1\nmaster-host=192.168.240.26\nmaster-port=3306\nmaster-user=repl\nmaster-pass=repl@SZT2021\nmaster-retry-count=999\nmaster-connect-retry=60\n```\n\n\n\n```\nsystemctl restart mysqld && systemctl status mysqld\n\n# 192.168.10.185操作\nmysql> SHOW MASTER STATUS;\n+---------------+----------+--------------+------------------+-------------------+\n| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+---------------+----------+--------------+------------------+-------------------+\n| binlog.000001 |     2096 |              |                  |                   |\n+---------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.26',MASTER_USER='repl',MASTER_PORT=3309,MASTER_PASSWORD='repl@BAS8796',MASTER_LOG_FILE='binlog.000003',MASTER_LOG_POS=157;\nSTART SLAVE;\n\n\n#192.168.10.186操作\nmysql> SHOW MASTER STATUS;\n+---------------+----------+--------------+------------------+-------------------+\n| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+---------------+----------+--------------+------------------+-------------------+\n| binlog.000001 |     2096 |              |                  |                   |\n+---------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.10.185',MASTER_USER='repl',MASTER_PASSWORD='repl@SZT2021',MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=2096;\nSTART SLAVE;\n```\n\n\n\n### 配置keepalived\n\n安装keepalived\nyum install -y keepalived\n\n\n配置keepalived\nnode185\n```\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id idszt-node005\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface ens32\n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.10.75\n    }\n}\n\nvirtual_server 192.168.10.75 3306 {\n    delay_loop 6\n    lb_algo rr\n    lb_kind DR\n    net_mask 255.255.255.0\n    persistence_timeout 50\n    protocol TCP\n\n    real_server 192.168.10.185 3306 {\n        weight 1\n        notify_down /etc/keepalived/closekeepalived.sh\n        TCP_CHECK {\n            connect_timeout 3\n            nb_get_retry 3\n            delay_before_retry 3\n            connect_port 3306\n        }\n    }\n    \n}\n```\nnode186\n```\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id idszt-node006\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface ens32\n    virtual_router_id 51\n    priority 50\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.10.175\n    }\n}\n\nvirtual_server 192.168.10.175 3306 {\n    delay_loop 6\n    lb_algo rr\n    lb_kind DR\n    net_mask 255.255.255.0\n    persistence_timeout 50\n    protocol TCP\n\n    real_server 192.168.10.186 3306 {\n        weight 1\n        notify_down /etc/keepalived/closekeepalived.sh\n        TCP_CHECK {\n            connect_timeout 3\n            nb_get_retry 3\n            delay_before_retry 3\n            connect_port 3306\n        }\n    }\n    \n}\n```\n\n### 配置切换\n\necho \"sudo -S killall keepalived\" >/etc/keepalived/closekeepalived.sh\nchmod +x /etc/keepalived/closekeepalived.sh\n\n### 验证\n此次验证失败，玄学！\n\n\n\n### 配置免密\n```shell\n[root@node5 .ssh]# ssh-copy-id idszt-node006\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_rsa.pub\"\nThe authenticity of host 'idszt-node006 (192.168.10.186)' can't be established.\nECDSA key fingerprint is SHA256:spFkAePyLM4alcHcJuHBBy5EhAvhtsRt5z0U/f4c66w.\nECDSA key fingerprint is MD5:d0:cd:b2:34:47:12:75:79:6d:dc:31:0f:4e:4d:57:3a.\nAre you sure you want to continue connecting (yes/no)? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@idszt-node006's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'idszt-node006'\"\nand check to make sure that only the key(s) you wanted were added.\n\n[root@node5 .ssh]# ssh-copy-id idszt-node008\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_rsa.pub\"\nThe authenticity of host 'idszt-node008 (192.168.10.188)' can't be established.\nECDSA key fingerprint is SHA256:gRjdjbc/FFKcVyCL3WY73vAhymMrM4mEr3KDCSqKA8w.\nECDSA key fingerprint is MD5:97:d4:e4:98:72:0a:c3:bc:e9:b7:81:40:09:14:24:79.\nAre you sure you want to continue connecting (yes/no)? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@idszt-node008's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'idszt-node008'\"\nand check to make sure that only the key(s) you wanted were added.\n\n[root@node5 .ssh]# ssh idszt-node006\nLast login: Wed Jun 21 15:32:12 2023 from 192.168.10.189\n[root@idszt-node006 ~]# exit\n登出\nConnection to idszt-node006 closed.\n\n\n```","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL.md","raw":"- 参考官网：https://dev.mysql.com/doc/refman/8.0/en/linux-installation-rpm.html\n\n### 上传安装包\n\n```shell\n#安装包mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar上传至/home/idszt/mysql_packages目录\n\nmkdir /home/idszt/mysql_packages && cd /home/idszt/mysql_packages\n\ntar -xvf mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar\nmv mysql-community* /root/mysql_packages && cd /root/mysql_packages\n\n\n```\n\n\n\n### 安装MySQL\n\n```shell\n[root@node5 ~]# rpm  -ivh  *.rpm --nodeps --force\n警告：mysql-community-client-8.0.32-1.el7.x86_64.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 3a79bd29: NOKEY\n  12:mysql-community-debuginfo-8.0.32-################################# [100%]\n```\n\n\n\n### 配置初始密码\nsystemctl enable mysqld\nsystemctl status mysqld\nsystemctl stop mysqld\n```shell\n[root@node5 ~]# systemctl restart mysqld\n[root@node5 ~]# sudo grep 'temporary password' /var/log/mysqld.log\n2023-06-19T06:27:07.286029Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: jK5K/g=la/=y\n[root@node5 ~]# mysql -uroot -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 8\nServer version: 8.0.32\n\nmysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'mysql#SZT2132';\nQuery OK, 0 rows affected (0.01 sec)\n```\n\n\n\n### 开启远程连接\n\n```shell\nmysql> use mysql;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> select user,host from user;\n+------------------+-----------+\n| user             | host      |\n+------------------+-----------+\n| mysql.infoschema | localhost |\n| mysql.session    | localhost |\n| mysql.sys        | localhost |\n| root             | localhost |\n+------------------+-----------+\n4 rows in set (0.00 sec)\n\nmysql> update user set host='%' where user='root';\nQuery OK, 1 row affected (0.01 sec)\nRows matched: 1  Changed: 1  Warnings: 0\n\nmysql> flush privileges;\nQuery OK, 0 rows affected (0.01 sec)\n\nmysql> select user,host from user;\n+------------------+-----------+\n| user             | host      |\n+------------------+-----------+\n| root             | %         |\n| mysql.infoschema | localhost |\n| mysql.session    | localhost |\n| mysql.sys        | localhost |\n+------------------+-----------+\n4 rows in set (0.01 sec)\n\n```\n\n\n\n### 允许防火墙访问\n\n```shell\n[root@node5 mysql_packages]# systemctl  start firewalld\n[root@node5 ~]# firewall-cmd --zone=public --add-port=3309/tcp --permanent\nsuccess\n[root@node5 ~]# firewall-cmd --reload\nsuccess\n[root@node5 ~]# firewall-cmd --list-all\npublic (active)\n  target: default\n  icmp-block-inversion: no\n  interfaces: ens32\n  sources:\n  services: dhcpv6-client ssh\n  ports: 6379/tcp 6380/tcp 16379/tcp 3306/tcp\n  protocols:\n  masquerade: no\n  forward-ports:\n  source-ports:\n  icmp-blocks:\n  rich rules:\n```\n\n### 配置双主\n\n两台主机均创建用户\n\n```\nmysql> CREATE USER 'repl'@'192.168.240.27' IDENTIFIED WITH mysql_native_password BY 'repl@BAS8796';\nmysql> GRANT REPLICATION SLAVE ON *.* TO  'repl'@'192.168.240.27' ;\nmysql> flush privileges;\n```\n\n/etc/my.cnf 添加以下配置，注意修改server-id和master-host\n\n```\nlog-bin=bin-log\nserver-id=186\n\n[client-server]\n\n#\n# include all files from the config directory\n#\n!includedir /etc/my.cnf.d\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=test1\nmaster-host=192.168.240.26\nmaster-port=3306\nmaster-user=repl\nmaster-pass=repl@SZT2021\nmaster-retry-count=999\nmaster-connect-retry=60\n```\n\n\n\n```\nsystemctl restart mysqld && systemctl status mysqld\n\n# 192.168.10.185操作\nmysql> SHOW MASTER STATUS;\n+---------------+----------+--------------+------------------+-------------------+\n| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+---------------+----------+--------------+------------------+-------------------+\n| binlog.000001 |     2096 |              |                  |                   |\n+---------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.26',MASTER_USER='repl',MASTER_PORT=3309,MASTER_PASSWORD='repl@BAS8796',MASTER_LOG_FILE='binlog.000003',MASTER_LOG_POS=157;\nSTART SLAVE;\n\n\n#192.168.10.186操作\nmysql> SHOW MASTER STATUS;\n+---------------+----------+--------------+------------------+-------------------+\n| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |\n+---------------+----------+--------------+------------------+-------------------+\n| binlog.000001 |     2096 |              |                  |                   |\n+---------------+----------+--------------+------------------+-------------------+\n1 row in set (0.00 sec)\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.10.185',MASTER_USER='repl',MASTER_PASSWORD='repl@SZT2021',MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=2096;\nSTART SLAVE;\n```\n\n\n\n### 配置keepalived\n\n安装keepalived\nyum install -y keepalived\n\n\n配置keepalived\nnode185\n```\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id idszt-node005\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface ens32\n    virtual_router_id 51\n    priority 100\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.10.75\n    }\n}\n\nvirtual_server 192.168.10.75 3306 {\n    delay_loop 6\n    lb_algo rr\n    lb_kind DR\n    net_mask 255.255.255.0\n    persistence_timeout 50\n    protocol TCP\n\n    real_server 192.168.10.185 3306 {\n        weight 1\n        notify_down /etc/keepalived/closekeepalived.sh\n        TCP_CHECK {\n            connect_timeout 3\n            nb_get_retry 3\n            delay_before_retry 3\n            connect_port 3306\n        }\n    }\n    \n}\n```\nnode186\n```\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id idszt-node006\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface ens32\n    virtual_router_id 51\n    priority 50\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n    }\n    virtual_ipaddress {\n        192.168.10.175\n    }\n}\n\nvirtual_server 192.168.10.175 3306 {\n    delay_loop 6\n    lb_algo rr\n    lb_kind DR\n    net_mask 255.255.255.0\n    persistence_timeout 50\n    protocol TCP\n\n    real_server 192.168.10.186 3306 {\n        weight 1\n        notify_down /etc/keepalived/closekeepalived.sh\n        TCP_CHECK {\n            connect_timeout 3\n            nb_get_retry 3\n            delay_before_retry 3\n            connect_port 3306\n        }\n    }\n    \n}\n```\n\n### 配置切换\n\necho \"sudo -S killall keepalived\" >/etc/keepalived/closekeepalived.sh\nchmod +x /etc/keepalived/closekeepalived.sh\n\n### 验证\n此次验证失败，玄学！\n\n\n\n### 配置免密\n```shell\n[root@node5 .ssh]# ssh-copy-id idszt-node006\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_rsa.pub\"\nThe authenticity of host 'idszt-node006 (192.168.10.186)' can't be established.\nECDSA key fingerprint is SHA256:spFkAePyLM4alcHcJuHBBy5EhAvhtsRt5z0U/f4c66w.\nECDSA key fingerprint is MD5:d0:cd:b2:34:47:12:75:79:6d:dc:31:0f:4e:4d:57:3a.\nAre you sure you want to continue connecting (yes/no)? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@idszt-node006's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'idszt-node006'\"\nand check to make sure that only the key(s) you wanted were added.\n\n[root@node5 .ssh]# ssh-copy-id idszt-node008\n/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: \"/root/.ssh/id_rsa.pub\"\nThe authenticity of host 'idszt-node008 (192.168.10.188)' can't be established.\nECDSA key fingerprint is SHA256:gRjdjbc/FFKcVyCL3WY73vAhymMrM4mEr3KDCSqKA8w.\nECDSA key fingerprint is MD5:97:d4:e4:98:72:0a:c3:bc:e9:b7:81:40:09:14:24:79.\nAre you sure you want to continue connecting (yes/no)? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@idszt-node008's password:\n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'idszt-node008'\"\nand check to make sure that only the key(s) you wanted were added.\n\n[root@node5 .ssh]# ssh idszt-node006\nLast login: Wed Jun 21 15:32:12 2023 from 192.168.10.189\n[root@idszt-node006 ~]# exit\n登出\nConnection to idszt-node006 closed.\n\n\n```","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL","published":1,"date":"2023-09-01T13:06:37.900Z","updated":"2023-08-31T10:47:44.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2k0025zb8a6ky3bxsi","content":"<ul>\n<li>参考官网：<a href=\"https://dev.mysql.com/doc/refman/8.0/en/linux-installation-rpm.html\">https://dev.mysql.com/doc/refman/8.0/en/linux-installation-rpm.html</a></li>\n</ul>\n<h3 id=\"上传安装包\">上传安装包</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">安装包mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar上传至/home/idszt/mysql_packages目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /home/idszt/mysql_packages &amp;&amp; cd /home/idszt/mysql_packages</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar</span><br><span class=\"line\">mv mysql-community* /root/mysql_packages &amp;&amp; cd /root/mysql_packages</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装MySQL\">安装MySQL</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 ~]# rpm  -ivh  *.rpm --nodeps --force</span><br><span class=\"line\">警告：mysql-community-client-8.0.32-1.el7.x86_64.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 3a79bd29: NOKEY</span><br><span class=\"line\">  12:mysql-community-debuginfo-8.0.32-################################# [100%]</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置初始密码\">配置初始密码</h3>\n<p>systemctl enable mysqld<br>\nsystemctl status mysqld<br>\nsystemctl stop mysqld</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 ~]# systemctl restart mysqld</span><br><span class=\"line\">[root@node5 ~]# sudo grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class=\"line\">2023-06-19T06:27:07.286029Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: jK5K/g=la/=y</span><br><span class=\"line\">[root@node5 ~]# mysql -uroot -p</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 8</span><br><span class=\"line\">Server version: 8.0.32</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;mysql#SZT2132&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启远程连接\">开启远程连接</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">use mysql;</span></span><br><span class=\"line\">Reading table information for completion of table and column names</span><br><span class=\"line\">You can turn off this feature to get a quicker startup with -A</span><br><span class=\"line\"></span><br><span class=\"line\">Database changed</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"><span class=\"keyword\">select</span> user,host from user;</span></span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| user             | host      |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| mysql.infoschema | localhost |</span><br><span class=\"line\">| mysql.session    | localhost |</span><br><span class=\"line\">| mysql.sys        | localhost |</span><br><span class=\"line\">| root             | localhost |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">4 rows in set (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">update user <span class=\"built_in\">set</span> host=<span class=\"string\">&#x27;%&#x27;</span> <span class=\"built_in\">where</span> user=<span class=\"string\">&#x27;root&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 1 row affected (0.01 sec)</span><br><span class=\"line\">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">flush privileges;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"><span class=\"keyword\">select</span> user,host from user;</span></span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| user             | host      |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| root             | %         |</span><br><span class=\"line\">| mysql.infoschema | localhost |</span><br><span class=\"line\">| mysql.session    | localhost |</span><br><span class=\"line\">| mysql.sys        | localhost |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">4 rows in set (0.01 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"允许防火墙访问\">允许防火墙访问</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 mysql_packages]# systemctl  start firewalld</span><br><span class=\"line\">[root@node5 ~]# firewall-cmd --zone=public --add-port=3309/tcp --permanent</span><br><span class=\"line\">success</span><br><span class=\"line\">[root@node5 ~]# firewall-cmd --reload</span><br><span class=\"line\">success</span><br><span class=\"line\">[root@node5 ~]# firewall-cmd --list-all</span><br><span class=\"line\">public (active)</span><br><span class=\"line\">  target: default</span><br><span class=\"line\">  icmp-block-inversion: no</span><br><span class=\"line\">  interfaces: ens32</span><br><span class=\"line\">  sources:</span><br><span class=\"line\">  services: dhcpv6-client ssh</span><br><span class=\"line\">  ports: 6379/tcp 6380/tcp 16379/tcp 3306/tcp</span><br><span class=\"line\">  protocols:</span><br><span class=\"line\">  masquerade: no</span><br><span class=\"line\">  forward-ports:</span><br><span class=\"line\">  source-ports:</span><br><span class=\"line\">  icmp-blocks:</span><br><span class=\"line\">  rich rules:</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置双主\">配置双主</h3>\n<p>两台主机均创建用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE USER &#x27;repl&#x27;@&#x27;192.168.240.27&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;repl@BAS8796&#x27;;</span><br><span class=\"line\">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO  &#x27;repl&#x27;@&#x27;192.168.240.27&#x27; ;</span><br><span class=\"line\">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n<p>/etc/my.cnf 添加以下配置，注意修改server-id和master-host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=186</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"># include all files from the config directory</span><br><span class=\"line\">#</span><br><span class=\"line\">!includedir /etc/my.cnf.d</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=test1</span><br><span class=\"line\">master-host=192.168.240.26</span><br><span class=\"line\">master-port=3306</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=repl@SZT2021</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld &amp;&amp; systemctl status mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"># 192.168.10.185操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| binlog.000001 |     2096 |              |                  |                   |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.26&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PORT=3309,MASTER_PASSWORD=&#x27;repl@BAS8796&#x27;,MASTER_LOG_FILE=&#x27;binlog.000003&#x27;,MASTER_LOG_POS=157;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.10.186操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| binlog.000001 |     2096 |              |                  |                   |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.10.185&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;repl@SZT2021&#x27;,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=2096;</span><br><span class=\"line\">START SLAVE;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置keepalived\">配置keepalived</h3>\n<p>安装keepalived<br>\nyum install -y keepalived</p>\n<p>配置keepalived<br>\nnode185</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id idszt-node005</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface ens32</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.75</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.10.75 3306 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    net_mask 255.255.255.0</span><br><span class=\"line\">    persistence_timeout 50</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.10.185 3306 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        notify_down /etc/keepalived/closekeepalived.sh</span><br><span class=\"line\">        TCP_CHECK &#123;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 3306</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>node186</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id idszt-node006</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface ens32</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 50</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.175</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.10.175 3306 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    net_mask 255.255.255.0</span><br><span class=\"line\">    persistence_timeout 50</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.10.186 3306 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        notify_down /etc/keepalived/closekeepalived.sh</span><br><span class=\"line\">        TCP_CHECK &#123;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 3306</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置切换\">配置切换</h3>\n<p>echo “sudo -S killall keepalived” &gt;/etc/keepalived/closekeepalived.sh<br>\nchmod +x /etc/keepalived/closekeepalived.sh</p>\n<h3 id=\"验证\">验证</h3>\n<p>此次验证失败，玄学！</p>\n<h3 id=\"配置免密\">配置免密</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 .ssh]# ssh-copy-id idszt-node006</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/root/.ssh/id_rsa.pub&quot;</span><br><span class=\"line\">The authenticity of host &#x27;idszt-node006 (192.168.10.186)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:spFkAePyLM4alcHcJuHBBy5EhAvhtsRt5z0U/f4c66w.</span><br><span class=\"line\">ECDSA key fingerprint is MD5:d0:cd:b2:34:47:12:75:79:6d:dc:31:0f:4e:4d:57:3a.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class=\"line\">root@idszt-node006&#x27;s password:</span><br><span class=\"line\"></span><br><span class=\"line\">Number of key(s) added: 1</span><br><span class=\"line\"></span><br><span class=\"line\">Now try logging into the machine, with:   &quot;ssh &#x27;idszt-node006&#x27;&quot;</span><br><span class=\"line\">and check to make sure that only the key(s) you wanted were added.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node5 .ssh]# ssh-copy-id idszt-node008</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/root/.ssh/id_rsa.pub&quot;</span><br><span class=\"line\">The authenticity of host &#x27;idszt-node008 (192.168.10.188)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:gRjdjbc/FFKcVyCL3WY73vAhymMrM4mEr3KDCSqKA8w.</span><br><span class=\"line\">ECDSA key fingerprint is MD5:97:d4:e4:98:72:0a:c3:bc:e9:b7:81:40:09:14:24:79.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class=\"line\">root@idszt-node008&#x27;s password:</span><br><span class=\"line\"></span><br><span class=\"line\">Number of key(s) added: 1</span><br><span class=\"line\"></span><br><span class=\"line\">Now try logging into the machine, with:   &quot;ssh &#x27;idszt-node008&#x27;&quot;</span><br><span class=\"line\">and check to make sure that only the key(s) you wanted were added.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node5 .ssh]# ssh idszt-node006</span><br><span class=\"line\">Last login: Wed Jun 21 15:32:12 2023 from 192.168.10.189</span><br><span class=\"line\">[root@idszt-node006 ~]# exit</span><br><span class=\"line\">登出</span><br><span class=\"line\">Connection to idszt-node006 closed.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<ul>\n<li>参考官网：<a href=\"https://dev.mysql.com/doc/refman/8.0/en/linux-installation-rpm.html\">https://dev.mysql.com/doc/refman/8.0/en/linux-installation-rpm.html</a></li>\n</ul>\n<h3 id=\"上传安装包\">上传安装包</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">安装包mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar上传至/home/idszt/mysql_packages目录</span></span><br><span class=\"line\"></span><br><span class=\"line\">mkdir /home/idszt/mysql_packages &amp;&amp; cd /home/idszt/mysql_packages</span><br><span class=\"line\"></span><br><span class=\"line\">tar -xvf mysql-8.0.32-1.el7.x86_64.rpm-bundle.tar</span><br><span class=\"line\">mv mysql-community* /root/mysql_packages &amp;&amp; cd /root/mysql_packages</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装MySQL\">安装MySQL</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 ~]# rpm  -ivh  *.rpm --nodeps --force</span><br><span class=\"line\">警告：mysql-community-client-8.0.32-1.el7.x86_64.rpm: 头V4 RSA/SHA256 Signature, 密钥 ID 3a79bd29: NOKEY</span><br><span class=\"line\">  12:mysql-community-debuginfo-8.0.32-################################# [100%]</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置初始密码\">配置初始密码</h3>\n<p>systemctl enable mysqld<br>\nsystemctl status mysqld<br>\nsystemctl stop mysqld</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 ~]# systemctl restart mysqld</span><br><span class=\"line\">[root@node5 ~]# sudo grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br><span class=\"line\">2023-06-19T06:27:07.286029Z 6 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: jK5K/g=la/=y</span><br><span class=\"line\">[root@node5 ~]# mysql -uroot -p</span><br><span class=\"line\">Enter password:</span><br><span class=\"line\">Welcome to the MySQL monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MySQL connection id is 8</span><br><span class=\"line\">Server version: 8.0.32</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;mysql#SZT2132&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启远程连接\">开启远程连接</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">use mysql;</span></span><br><span class=\"line\">Reading table information for completion of table and column names</span><br><span class=\"line\">You can turn off this feature to get a quicker startup with -A</span><br><span class=\"line\"></span><br><span class=\"line\">Database changed</span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"><span class=\"keyword\">select</span> user,host from user;</span></span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| user             | host      |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| mysql.infoschema | localhost |</span><br><span class=\"line\">| mysql.session    | localhost |</span><br><span class=\"line\">| mysql.sys        | localhost |</span><br><span class=\"line\">| root             | localhost |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">4 rows in set (0.00 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">update user <span class=\"built_in\">set</span> host=<span class=\"string\">&#x27;%&#x27;</span> <span class=\"built_in\">where</span> user=<span class=\"string\">&#x27;root&#x27;</span>;</span></span><br><span class=\"line\">Query OK, 1 row affected (0.01 sec)</span><br><span class=\"line\">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\">flush privileges;</span></span><br><span class=\"line\">Query OK, 0 rows affected (0.01 sec)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">mysql&gt; </span><span class=\"language-bash\"><span class=\"keyword\">select</span> user,host from user;</span></span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| user             | host      |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">| root             | %         |</span><br><span class=\"line\">| mysql.infoschema | localhost |</span><br><span class=\"line\">| mysql.session    | localhost |</span><br><span class=\"line\">| mysql.sys        | localhost |</span><br><span class=\"line\">+------------------+-----------+</span><br><span class=\"line\">4 rows in set (0.01 sec)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"允许防火墙访问\">允许防火墙访问</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 mysql_packages]# systemctl  start firewalld</span><br><span class=\"line\">[root@node5 ~]# firewall-cmd --zone=public --add-port=3309/tcp --permanent</span><br><span class=\"line\">success</span><br><span class=\"line\">[root@node5 ~]# firewall-cmd --reload</span><br><span class=\"line\">success</span><br><span class=\"line\">[root@node5 ~]# firewall-cmd --list-all</span><br><span class=\"line\">public (active)</span><br><span class=\"line\">  target: default</span><br><span class=\"line\">  icmp-block-inversion: no</span><br><span class=\"line\">  interfaces: ens32</span><br><span class=\"line\">  sources:</span><br><span class=\"line\">  services: dhcpv6-client ssh</span><br><span class=\"line\">  ports: 6379/tcp 6380/tcp 16379/tcp 3306/tcp</span><br><span class=\"line\">  protocols:</span><br><span class=\"line\">  masquerade: no</span><br><span class=\"line\">  forward-ports:</span><br><span class=\"line\">  source-ports:</span><br><span class=\"line\">  icmp-blocks:</span><br><span class=\"line\">  rich rules:</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置双主\">配置双主</h3>\n<p>两台主机均创建用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE USER &#x27;repl&#x27;@&#x27;192.168.240.27&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;repl@BAS8796&#x27;;</span><br><span class=\"line\">mysql&gt; GRANT REPLICATION SLAVE ON *.* TO  &#x27;repl&#x27;@&#x27;192.168.240.27&#x27; ;</span><br><span class=\"line\">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure>\n<p>/etc/my.cnf 添加以下配置，注意修改server-id和master-host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=186</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\"># include all files from the config directory</span><br><span class=\"line\">#</span><br><span class=\"line\">!includedir /etc/my.cnf.d</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=test1</span><br><span class=\"line\">master-host=192.168.240.26</span><br><span class=\"line\">master-port=3306</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=repl@SZT2021</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld &amp;&amp; systemctl status mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"># 192.168.10.185操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| binlog.000001 |     2096 |              |                  |                   |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.26&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PORT=3309,MASTER_PASSWORD=&#x27;repl@BAS8796&#x27;,MASTER_LOG_FILE=&#x27;binlog.000003&#x27;,MASTER_LOG_POS=157;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.10.186操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| File          | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">| binlog.000001 |     2096 |              |                  |                   |</span><br><span class=\"line\">+---------------+----------+--------------+------------------+-------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.10.185&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;repl@SZT2021&#x27;,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=2096;</span><br><span class=\"line\">START SLAVE;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置keepalived\">配置keepalived</h3>\n<p>安装keepalived<br>\nyum install -y keepalived</p>\n<p>配置keepalived<br>\nnode185</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id idszt-node005</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface ens32</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 100</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.75</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.10.75 3306 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    net_mask 255.255.255.0</span><br><span class=\"line\">    persistence_timeout 50</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.10.185 3306 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        notify_down /etc/keepalived/closekeepalived.sh</span><br><span class=\"line\">        TCP_CHECK &#123;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 3306</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>node186</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id idszt-node006</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface ens32</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 50</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        192.168.10.175</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">virtual_server 192.168.10.175 3306 &#123;</span><br><span class=\"line\">    delay_loop 6</span><br><span class=\"line\">    lb_algo rr</span><br><span class=\"line\">    lb_kind DR</span><br><span class=\"line\">    net_mask 255.255.255.0</span><br><span class=\"line\">    persistence_timeout 50</span><br><span class=\"line\">    protocol TCP</span><br><span class=\"line\"></span><br><span class=\"line\">    real_server 192.168.10.186 3306 &#123;</span><br><span class=\"line\">        weight 1</span><br><span class=\"line\">        notify_down /etc/keepalived/closekeepalived.sh</span><br><span class=\"line\">        TCP_CHECK &#123;</span><br><span class=\"line\">            connect_timeout 3</span><br><span class=\"line\">            nb_get_retry 3</span><br><span class=\"line\">            delay_before_retry 3</span><br><span class=\"line\">            connect_port 3306</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置切换\">配置切换</h3>\n<p>echo “sudo -S killall keepalived” &gt;/etc/keepalived/closekeepalived.sh<br>\nchmod +x /etc/keepalived/closekeepalived.sh</p>\n<h3 id=\"验证\">验证</h3>\n<p>此次验证失败，玄学！</p>\n<h3 id=\"配置免密\">配置免密</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node5 .ssh]# ssh-copy-id idszt-node006</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/root/.ssh/id_rsa.pub&quot;</span><br><span class=\"line\">The authenticity of host &#x27;idszt-node006 (192.168.10.186)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:spFkAePyLM4alcHcJuHBBy5EhAvhtsRt5z0U/f4c66w.</span><br><span class=\"line\">ECDSA key fingerprint is MD5:d0:cd:b2:34:47:12:75:79:6d:dc:31:0f:4e:4d:57:3a.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class=\"line\">root@idszt-node006&#x27;s password:</span><br><span class=\"line\"></span><br><span class=\"line\">Number of key(s) added: 1</span><br><span class=\"line\"></span><br><span class=\"line\">Now try logging into the machine, with:   &quot;ssh &#x27;idszt-node006&#x27;&quot;</span><br><span class=\"line\">and check to make sure that only the key(s) you wanted were added.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node5 .ssh]# ssh-copy-id idszt-node008</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: &quot;/root/.ssh/id_rsa.pub&quot;</span><br><span class=\"line\">The authenticity of host &#x27;idszt-node008 (192.168.10.188)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ECDSA key fingerprint is SHA256:gRjdjbc/FFKcVyCL3WY73vAhymMrM4mEr3KDCSqKA8w.</span><br><span class=\"line\">ECDSA key fingerprint is MD5:97:d4:e4:98:72:0a:c3:bc:e9:b7:81:40:09:14:24:79.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no)? yes</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class=\"line\">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class=\"line\">root@idszt-node008&#x27;s password:</span><br><span class=\"line\"></span><br><span class=\"line\">Number of key(s) added: 1</span><br><span class=\"line\"></span><br><span class=\"line\">Now try logging into the machine, with:   &quot;ssh &#x27;idszt-node008&#x27;&quot;</span><br><span class=\"line\">and check to make sure that only the key(s) you wanted were added.</span><br><span class=\"line\"></span><br><span class=\"line\">[root@node5 .ssh]# ssh idszt-node006</span><br><span class=\"line\">Last login: Wed Jun 21 15:32:12 2023 from 192.168.10.189</span><br><span class=\"line\">[root@idszt-node006 ~]# exit</span><br><span class=\"line\">登出</span><br><span class=\"line\">Connection to idszt-node006 closed.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"\n## 关闭防火墙限制\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.216\" port protocol=\"tcp\" port=\"3309\" accept'\nfirewall-cmd --reload\n\n\n### 配置双主\n\n两台主机均创建用户\n\nbusiness0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\n\n```\nCREATE USER 'repl'@'%' IDENTIFIED WITH mysql_native_password BY 'mysql#SZT8632';\nGRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\nflush privileges;\n```\n\n/etc/my.cnf 添加以下配置，注意修改server-id和master-host\n\n```shell\n## node007\nlog-bin=bin-log\nserver-id=217\n\n[client-server]\n\n#\n# include all files from the config directory\n#\n!includedir /etc/my.cnf.d\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\nmaster-host=192.168.240.215\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT8632\nmaster-retry-count=999\nmaster-connect-retry=60\n\n# node005\nlog-bin=bin-log\nserver-id=215\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\nmaster-host=192.168.240.217\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT8632\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n# node006\nlog-bin=bin-log\nserver-id=216\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\nmaster-host=192.168.240.215\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT8632\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n\n```\n\n\n\n```\nsystemctl restart mysqld && systemctl status mysqld\n\n# 192.168.240.217操作\nmysql> SHOW MASTER STATUS;\nbin-log.000003\t794760\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.215',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT8632',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000002',MASTER_LOG_POS=425440832;\nSTART SLAVE;\n\n\n#192.168.240.215操作\nmysql> SHOW MASTER STATUS;\nbin-log.000002\t425440832\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.217',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT8632',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000003',MASTER_LOG_POS=794760;\nSTART SLAVE;\n\n\n\n#192.168.240.216操作\nmysql> SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)\nbin-log.000002\t443474746\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.215',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT8632',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000002',MASTER_LOG_POS=425440832;\nSTART SLAVE;\n```\n\n\nSHOW SLAVE STATUS;","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL双主.md","raw":"\n## 关闭防火墙限制\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.240.216\" port protocol=\"tcp\" port=\"3309\" accept'\nfirewall-cmd --reload\n\n\n### 配置双主\n\n两台主机均创建用户\n\nbusiness0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\n\n```\nCREATE USER 'repl'@'%' IDENTIFIED WITH mysql_native_password BY 'mysql#SZT8632';\nGRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\nflush privileges;\n```\n\n/etc/my.cnf 添加以下配置，注意修改server-id和master-host\n\n```shell\n## node007\nlog-bin=bin-log\nserver-id=217\n\n[client-server]\n\n#\n# include all files from the config directory\n#\n!includedir /etc/my.cnf.d\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\nmaster-host=192.168.240.215\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT8632\nmaster-retry-count=999\nmaster-connect-retry=60\n\n# node005\nlog-bin=bin-log\nserver-id=215\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\nmaster-host=192.168.240.217\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT8632\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n# node006\nlog-bin=bin-log\nserver-id=216\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\nmaster-host=192.168.240.215\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT8632\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n\n```\n\n\n\n```\nsystemctl restart mysqld && systemctl status mysqld\n\n# 192.168.240.217操作\nmysql> SHOW MASTER STATUS;\nbin-log.000003\t794760\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.215',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT8632',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000002',MASTER_LOG_POS=425440832;\nSTART SLAVE;\n\n\n#192.168.240.215操作\nmysql> SHOW MASTER STATUS;\nbin-log.000002\t425440832\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.217',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT8632',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000003',MASTER_LOG_POS=794760;\nSTART SLAVE;\n\n\n\n#192.168.240.216操作\nmysql> SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)\nbin-log.000002\t443474746\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.240.215',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT8632',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000002',MASTER_LOG_POS=425440832;\nSTART SLAVE;\n```\n\n\nSHOW SLAVE STATUS;","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL双主","published":1,"date":"2023-09-01T13:06:37.910Z","updated":"2023-08-12T10:02:08.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2l0026zb8a5gira2cg","content":"<h2 id=\"关闭防火墙限制\">关闭防火墙限制</h2>\n<p>firewall-cmd --permanent --add-rich-rule=‘rule family=“ipv4” source address=“192.168.240.216” port protocol=“tcp” port=“3309” accept’<br>\nfirewall-cmd --reload</p>\n<h3 id=\"配置双主\">配置双主</h3>\n<p>两台主机均创建用户</p>\n<p>business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &#x27;repl&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;mysql#SZT8632&#x27;;</span><br><span class=\"line\">GRANT REPLICATION SLAVE ON *.* TO &#x27;repl&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>/etc/my.cnf 添加以下配置，注意修改server-id和master-host</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># node007</span></span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=217</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># include all files from the config directory</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">!includedir /etc/my.cnf.d</span></span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</span><br><span class=\"line\">master-host=192.168.240.215</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT8632</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node005</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=215</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</span><br><span class=\"line\">master-host=192.168.240.217</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT8632</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node006</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=216</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</span><br><span class=\"line\">master-host=192.168.240.215</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT8632</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld &amp;&amp; systemctl status mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"># 192.168.240.217操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">bin-log.000003\t794760</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.215&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT8632&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000002&#x27;,MASTER_LOG_POS=425440832;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.240.215操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">bin-log.000002\t425440832</span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.217&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT8632&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000003&#x27;,MASTER_LOG_POS=794760;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.240.216操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)</span><br><span class=\"line\">bin-log.000002\t443474746</span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.215&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT8632&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000002&#x27;,MASTER_LOG_POS=425440832;</span><br><span class=\"line\">START SLAVE;</span><br></pre></td></tr></table></figure>\n<p>SHOW SLAVE STATUS;</p>\n","excerpt":"","more":"<h2 id=\"关闭防火墙限制\">关闭防火墙限制</h2>\n<p>firewall-cmd --permanent --add-rich-rule=‘rule family=“ipv4” source address=“192.168.240.216” port protocol=“tcp” port=“3309” accept’<br>\nfirewall-cmd --reload</p>\n<h3 id=\"配置双主\">配置双主</h3>\n<p>两台主机均创建用户</p>\n<p>business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &#x27;repl&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;mysql#SZT8632&#x27;;</span><br><span class=\"line\">GRANT REPLICATION SLAVE ON *.* TO &#x27;repl&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>/etc/my.cnf 添加以下配置，注意修改server-id和master-host</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># node007</span></span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=217</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># include all files from the config directory</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">!includedir /etc/my.cnf.d</span></span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</span><br><span class=\"line\">master-host=192.168.240.215</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT8632</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node005</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=215</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</span><br><span class=\"line\">master-host=192.168.240.217</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT8632</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node006</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=216</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</span><br><span class=\"line\">master-host=192.168.240.215</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT8632</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld &amp;&amp; systemctl status mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"># 192.168.240.217操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">bin-log.000003\t794760</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.215&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT8632&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000002&#x27;,MASTER_LOG_POS=425440832;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.240.215操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\">bin-log.000002\t425440832</span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.217&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT8632&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000003&#x27;,MASTER_LOG_POS=794760;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.240.216操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)</span><br><span class=\"line\">bin-log.000002\t443474746</span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.240.215&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT8632&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000002&#x27;,MASTER_LOG_POS=425440832;</span><br><span class=\"line\">START SLAVE;</span><br></pre></td></tr></table></figure>\n<p>SHOW SLAVE STATUS;</p>\n"},{"_content":"mysqldump -uroot -pmysql#SZT2132 -P3309 --all-databases > /data/backup/database/mysql/all.sql\nmysqldump: [Warning] Using a password on the command line interface can be insecure.\n\n\nUsage: mysqldump [OPTIONS] database [tables]\nOR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]\nOR     mysqldump [OPTIONS] --all-databases [OPTIONS]\nFor more options, use mysqldump --help\n\n\n\n### 导出\nmysqldump -uroot -pmysql#SZT2132 -P3309 --databases business0 business1 business2 civil_data civil_data0 civil_data1 civil_data2 civil_manager  mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify > /data/backup/database/mysql/all.sql\n\n### 导入\n\nmysql -uusername -ppassword db1 <tb1tb2.sql\n\n\n### 定时脚本\n```shell\n\n#!/bin/bash\n#NAME:数据库备份\n\n#设置本机数据库登录信息\nmysql_user=\"root\"\nmysql_password=\"mysql#SZT2132\"\nmysql_host=\"localhost\"\nmysql_port=\"3309\"\nmysql_charset=\"utf8mb4\"\ndate_time=`date +%Y-%m-%d-%H-%M`\n\n#保存目录中的文件个数\ncount=30\n#备份路径\npath=/data/backup/database/mysql/data\n\n\n#备份数据库sql文件并指定目录\nmysqldump  --single-transaction --flush-logs --master-data=2 -h$mysql_host -u$mysql_user -p$mysql_password \\\n --databases business0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager \\\n   mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\\n  > $path/$(date +%Y%m%d_%H:%M).sql\n\n\n[ $? -eq 0 ] && echo \"-----------------数据备份成功_$date_time-----------------\" || echo \"-----------------数据备份失败-----------------\"\n\n#找出需要删除的备份\ndelfile=`ls -l -crt $path/*.sql | awk '{print $9 }' | head -1`\n#判断现在的备份数量是否大于阈值\nnumber=`ls -l -crt $path/*.sql | awk '{print $9 }' | wc -l`\nif [ $number -gt $count ]\nthen\n          rm $delfile  #删除最早生成的备份，只保留count数量的备份\n                                           #更新删除文件日志\n            echo \"-----------------已删除过去备份sql $delfile-----------------\"\n    fi\n\n```\n\n\n### 注释\n```shell\n-dump-slave\n\n该选项将主的binlog位置和文件名追加到导出数据的文件中(show slave status)。设置为1时，将会以CHANGE MASTER命令输出到数据文件；设置为2时，会在change前加上注释。该选项将会打开--lock-all-tables，除非--single-transaction被指定。该选项会自动关闭--lock-tables选项。默认值为0。\n\nmysqldump -uroot -p --all-databases --dump-slave=1\n\nmysqldump -uroot -p --all-databases --dump-slave=2\n\n--master-data\n\n该选项将当前服务器的binlog的位置和文件名追加到输出文件中(show master status)。如果为1，将会输出CHANGE MASTER 命令；如果为2，输出的CHANGE  MASTER命令前添加注释信息。该选项将打开--lock-all-tables 选项，除非--single-transaction也被指定（在这种情况下，全局读锁在开始导出时获得很短的时间；其他内容参考下面的--single-transaction选项）。该选项自动关闭--lock-tables选项。\n\nmysqldump -uroot -p --host=localhost --all-databases --master-data=1;\n\nmysqldump -uroot -p --host=localhost --all-databases --master-data=2;\n\n\n```\n\n\n### 导入\n\nmysql -h xxx.xxx.xxx.xxx:xxxx –u userName -p dbName < /tmp/dbName.sql\nmysql -h localhost:3309 –u root -p \n-uroot -pmysql#SZT2132 -P3309\n\nmysql -uroot -pmysql#SZT2132 -P3309  < 20230811_19_32.sql\n\n\n统计qyqdb数据库下所有的表的行数，生产统计语句。\nselect concat(\n    'select \"', \n    TABLE_name, \n    '\", count(*) from ', \n    TABLE_SCHEMA, \n    '.',\n    TABLE_name,\n    ' union all'\n) from information_schema.tables \nwhere TABLE_SCHEMA='business0';\n\n\nbusiness0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager \\\n   mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL备份.md","raw":"mysqldump -uroot -pmysql#SZT2132 -P3309 --all-databases > /data/backup/database/mysql/all.sql\nmysqldump: [Warning] Using a password on the command line interface can be insecure.\n\n\nUsage: mysqldump [OPTIONS] database [tables]\nOR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3...]\nOR     mysqldump [OPTIONS] --all-databases [OPTIONS]\nFor more options, use mysqldump --help\n\n\n\n### 导出\nmysqldump -uroot -pmysql#SZT2132 -P3309 --databases business0 business1 business2 civil_data civil_data0 civil_data1 civil_data2 civil_manager  mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify > /data/backup/database/mysql/all.sql\n\n### 导入\n\nmysql -uusername -ppassword db1 <tb1tb2.sql\n\n\n### 定时脚本\n```shell\n\n#!/bin/bash\n#NAME:数据库备份\n\n#设置本机数据库登录信息\nmysql_user=\"root\"\nmysql_password=\"mysql#SZT2132\"\nmysql_host=\"localhost\"\nmysql_port=\"3309\"\nmysql_charset=\"utf8mb4\"\ndate_time=`date +%Y-%m-%d-%H-%M`\n\n#保存目录中的文件个数\ncount=30\n#备份路径\npath=/data/backup/database/mysql/data\n\n\n#备份数据库sql文件并指定目录\nmysqldump  --single-transaction --flush-logs --master-data=2 -h$mysql_host -u$mysql_user -p$mysql_password \\\n --databases business0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager \\\n   mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\\n  > $path/$(date +%Y%m%d_%H:%M).sql\n\n\n[ $? -eq 0 ] && echo \"-----------------数据备份成功_$date_time-----------------\" || echo \"-----------------数据备份失败-----------------\"\n\n#找出需要删除的备份\ndelfile=`ls -l -crt $path/*.sql | awk '{print $9 }' | head -1`\n#判断现在的备份数量是否大于阈值\nnumber=`ls -l -crt $path/*.sql | awk '{print $9 }' | wc -l`\nif [ $number -gt $count ]\nthen\n          rm $delfile  #删除最早生成的备份，只保留count数量的备份\n                                           #更新删除文件日志\n            echo \"-----------------已删除过去备份sql $delfile-----------------\"\n    fi\n\n```\n\n\n### 注释\n```shell\n-dump-slave\n\n该选项将主的binlog位置和文件名追加到导出数据的文件中(show slave status)。设置为1时，将会以CHANGE MASTER命令输出到数据文件；设置为2时，会在change前加上注释。该选项将会打开--lock-all-tables，除非--single-transaction被指定。该选项会自动关闭--lock-tables选项。默认值为0。\n\nmysqldump -uroot -p --all-databases --dump-slave=1\n\nmysqldump -uroot -p --all-databases --dump-slave=2\n\n--master-data\n\n该选项将当前服务器的binlog的位置和文件名追加到输出文件中(show master status)。如果为1，将会输出CHANGE MASTER 命令；如果为2，输出的CHANGE  MASTER命令前添加注释信息。该选项将打开--lock-all-tables 选项，除非--single-transaction也被指定（在这种情况下，全局读锁在开始导出时获得很短的时间；其他内容参考下面的--single-transaction选项）。该选项自动关闭--lock-tables选项。\n\nmysqldump -uroot -p --host=localhost --all-databases --master-data=1;\n\nmysqldump -uroot -p --host=localhost --all-databases --master-data=2;\n\n\n```\n\n\n### 导入\n\nmysql -h xxx.xxx.xxx.xxx:xxxx –u userName -p dbName < /tmp/dbName.sql\nmysql -h localhost:3309 –u root -p \n-uroot -pmysql#SZT2132 -P3309\n\nmysql -uroot -pmysql#SZT2132 -P3309  < 20230811_19_32.sql\n\n\n统计qyqdb数据库下所有的表的行数，生产统计语句。\nselect concat(\n    'select \"', \n    TABLE_name, \n    '\", count(*) from ', \n    TABLE_SCHEMA, \n    '.',\n    TABLE_name,\n    ' union all'\n) from information_schema.tables \nwhere TABLE_SCHEMA='business0';\n\n\nbusiness0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager \\\n   mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL备份","published":1,"date":"2023-09-01T13:06:37.920Z","updated":"2023-08-15T11:24:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2m0027zb8a7m9o36os","content":"<p>mysqldump -uroot -pmysql#SZT2132 -P3309 --all-databases &gt; /data/backup/database/mysql/all.sql<br>\nmysqldump: [Warning] Using a password on the command line interface can be insecure.</p>\n<p>Usage: mysqldump [OPTIONS] database [tables]<br>\nOR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3…]<br>\nOR     mysqldump [OPTIONS] --all-databases [OPTIONS]<br>\nFor more options, use mysqldump --help</p>\n<h3 id=\"导出\">导出</h3>\n<p>mysqldump -uroot -pmysql#SZT2132 -P3309 --databases business0 business1 business2 civil_data civil_data0 civil_data1 civil_data2 civil_manager  mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify &gt; /data/backup/database/mysql/all.sql</p>\n<h3 id=\"导入\">导入</h3>\n<p>mysql -uusername -ppassword db1 &lt;tb1tb2.sql</p>\n<h3 id=\"定时脚本\">定时脚本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">NAME:数据库备份</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置本机数据库登录信息</span></span><br><span class=\"line\">mysql_user=&quot;root&quot;</span><br><span class=\"line\">mysql_password=&quot;mysql#SZT2132&quot;</span><br><span class=\"line\">mysql_host=&quot;localhost&quot;</span><br><span class=\"line\">mysql_port=&quot;3309&quot;</span><br><span class=\"line\">mysql_charset=&quot;utf8mb4&quot;</span><br><span class=\"line\">date_time=`date +%Y-%m-%d-%H-%M`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">保存目录中的文件个数</span></span><br><span class=\"line\">count=30</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">备份路径</span></span><br><span class=\"line\">path=/data/backup/database/mysql/data</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">备份数据库sql文件并指定目录</span></span><br><span class=\"line\">mysqldump  --single-transaction --flush-logs --master-data=2 -h$mysql_host -u$mysql_user -p$mysql_password \\</span><br><span class=\"line\"> --databases business0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager \\</span><br><span class=\"line\">   mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\</span><br><span class=\"line\"><span class=\"meta prompt_\">  &gt; </span><span class=\"language-bash\"><span class=\"variable\">$path</span>/$(<span class=\"built_in\">date</span> +%Y%m%d_%H:%M).sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[ $? -eq 0 ] &amp;&amp; echo &quot;-----------------数据备份成功_$date_time-----------------&quot; || echo &quot;-----------------数据备份失败-----------------&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">找出需要删除的备份</span></span><br><span class=\"line\">delfile=`ls -l -crt $path/*.sql | awk &#x27;&#123;print $9 &#125;&#x27; | head -1`</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">判断现在的备份数量是否大于阈值</span></span><br><span class=\"line\">number=`ls -l -crt $path/*.sql | awk &#x27;&#123;print $9 &#125;&#x27; | wc -l`</span><br><span class=\"line\">if [ $number -gt $count ]</span><br><span class=\"line\">then</span><br><span class=\"line\">          rm $delfile  #删除最早生成的备份，只保留count数量的备份</span><br><span class=\"line\">                                           #更新删除文件日志</span><br><span class=\"line\">            echo &quot;-----------------已删除过去备份sql $delfile-----------------&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"注释\">注释</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-dump-slave</span><br><span class=\"line\"></span><br><span class=\"line\">该选项将主的binlog位置和文件名追加到导出数据的文件中(show slave status)。设置为1时，将会以CHANGE MASTER命令输出到数据文件；设置为2时，会在change前加上注释。该选项将会打开--lock-all-tables，除非--single-transaction被指定。该选项会自动关闭--lock-tables选项。默认值为0。</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --all-databases --dump-slave=1</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --all-databases --dump-slave=2</span><br><span class=\"line\"></span><br><span class=\"line\">--master-data</span><br><span class=\"line\"></span><br><span class=\"line\">该选项将当前服务器的binlog的位置和文件名追加到输出文件中(show master status)。如果为1，将会输出CHANGE MASTER 命令；如果为2，输出的CHANGE  MASTER命令前添加注释信息。该选项将打开--lock-all-tables 选项，除非--single-transaction也被指定（在这种情况下，全局读锁在开始导出时获得很短的时间；其他内容参考下面的--single-transaction选项）。该选项自动关闭--lock-tables选项。</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --host=localhost --all-databases --master-data=1;</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --host=localhost --all-databases --master-data=2;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"导入-2\">导入</h3>\n<p>mysql -h <a href=\"http://xxx.xxx.xxx.xxx\">xxx.xxx.xxx.xxx</a>:xxxx –u userName -p dbName &lt; /tmp/dbName.sql<br>\nmysql -h localhost:3309 –u root -p<br>\n-uroot -pmysql#SZT2132 -P3309</p>\n<p>mysql -uroot -pmysql#SZT2132 -P3309  &lt; 20230811_19_32.sql</p>\n<p>统计qyqdb数据库下所有的表的行数，生产统计语句。<br>\nselect concat(<br>\n‘select &quot;’,<br>\nTABLE_name,<br>\n'&quot;, count(*) from ‘,<br>\nTABLE_SCHEMA,<br>\n‘.’,<br>\nTABLE_name,<br>\n’ union all’<br>\n) from information_schema.tables<br>\nwhere TABLE_SCHEMA=‘business0’;</p>\n<p>business0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager <br>\nmh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\</p>\n","excerpt":"","more":"<p>mysqldump -uroot -pmysql#SZT2132 -P3309 --all-databases &gt; /data/backup/database/mysql/all.sql<br>\nmysqldump: [Warning] Using a password on the command line interface can be insecure.</p>\n<p>Usage: mysqldump [OPTIONS] database [tables]<br>\nOR     mysqldump [OPTIONS] --databases [OPTIONS] DB1 [DB2 DB3…]<br>\nOR     mysqldump [OPTIONS] --all-databases [OPTIONS]<br>\nFor more options, use mysqldump --help</p>\n<h3 id=\"导出\">导出</h3>\n<p>mysqldump -uroot -pmysql#SZT2132 -P3309 --databases business0 business1 business2 civil_data civil_data0 civil_data1 civil_data2 civil_manager  mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify &gt; /data/backup/database/mysql/all.sql</p>\n<h3 id=\"导入\">导入</h3>\n<p>mysql -uusername -ppassword db1 &lt;tb1tb2.sql</p>\n<h3 id=\"定时脚本\">定时脚本</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">NAME:数据库备份</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">设置本机数据库登录信息</span></span><br><span class=\"line\">mysql_user=&quot;root&quot;</span><br><span class=\"line\">mysql_password=&quot;mysql#SZT2132&quot;</span><br><span class=\"line\">mysql_host=&quot;localhost&quot;</span><br><span class=\"line\">mysql_port=&quot;3309&quot;</span><br><span class=\"line\">mysql_charset=&quot;utf8mb4&quot;</span><br><span class=\"line\">date_time=`date +%Y-%m-%d-%H-%M`</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">保存目录中的文件个数</span></span><br><span class=\"line\">count=30</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">备份路径</span></span><br><span class=\"line\">path=/data/backup/database/mysql/data</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">备份数据库sql文件并指定目录</span></span><br><span class=\"line\">mysqldump  --single-transaction --flush-logs --master-data=2 -h$mysql_host -u$mysql_user -p$mysql_password \\</span><br><span class=\"line\"> --databases business0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager \\</span><br><span class=\"line\">   mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\</span><br><span class=\"line\"><span class=\"meta prompt_\">  &gt; </span><span class=\"language-bash\"><span class=\"variable\">$path</span>/$(<span class=\"built_in\">date</span> +%Y%m%d_%H:%M).sql</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[ $? -eq 0 ] &amp;&amp; echo &quot;-----------------数据备份成功_$date_time-----------------&quot; || echo &quot;-----------------数据备份失败-----------------&quot;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">找出需要删除的备份</span></span><br><span class=\"line\">delfile=`ls -l -crt $path/*.sql | awk &#x27;&#123;print $9 &#125;&#x27; | head -1`</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">判断现在的备份数量是否大于阈值</span></span><br><span class=\"line\">number=`ls -l -crt $path/*.sql | awk &#x27;&#123;print $9 &#125;&#x27; | wc -l`</span><br><span class=\"line\">if [ $number -gt $count ]</span><br><span class=\"line\">then</span><br><span class=\"line\">          rm $delfile  #删除最早生成的备份，只保留count数量的备份</span><br><span class=\"line\">                                           #更新删除文件日志</span><br><span class=\"line\">            echo &quot;-----------------已删除过去备份sql $delfile-----------------&quot;</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"注释\">注释</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-dump-slave</span><br><span class=\"line\"></span><br><span class=\"line\">该选项将主的binlog位置和文件名追加到导出数据的文件中(show slave status)。设置为1时，将会以CHANGE MASTER命令输出到数据文件；设置为2时，会在change前加上注释。该选项将会打开--lock-all-tables，除非--single-transaction被指定。该选项会自动关闭--lock-tables选项。默认值为0。</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --all-databases --dump-slave=1</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --all-databases --dump-slave=2</span><br><span class=\"line\"></span><br><span class=\"line\">--master-data</span><br><span class=\"line\"></span><br><span class=\"line\">该选项将当前服务器的binlog的位置和文件名追加到输出文件中(show master status)。如果为1，将会输出CHANGE MASTER 命令；如果为2，输出的CHANGE  MASTER命令前添加注释信息。该选项将打开--lock-all-tables 选项，除非--single-transaction也被指定（在这种情况下，全局读锁在开始导出时获得很短的时间；其他内容参考下面的--single-transaction选项）。该选项自动关闭--lock-tables选项。</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --host=localhost --all-databases --master-data=1;</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump -uroot -p --host=localhost --all-databases --master-data=2;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"导入-2\">导入</h3>\n<p>mysql -h <a href=\"http://xxx.xxx.xxx.xxx\">xxx.xxx.xxx.xxx</a>:xxxx –u userName -p dbName &lt; /tmp/dbName.sql<br>\nmysql -h localhost:3309 –u root -p<br>\n-uroot -pmysql#SZT2132 -P3309</p>\n<p>mysql -uroot -pmysql#SZT2132 -P3309  &lt; 20230811_19_32.sql</p>\n<p>统计qyqdb数据库下所有的表的行数，生产统计语句。<br>\nselect concat(<br>\n‘select &quot;’,<br>\nTABLE_name,<br>\n'&quot;, count(*) from ‘,<br>\nTABLE_SCHEMA,<br>\n‘.’,<br>\nTABLE_name,<br>\n’ union all’<br>\n) from information_schema.tables<br>\nwhere TABLE_SCHEMA=‘business0’;</p>\n<p>business0 business1 business2  civil_data0 civil_data1 civil_data2 civil_manager <br>\nmh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify \\</p>\n"},{"_content":"```shell\nsysbench --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 /usr/share/sysbench/oltp_common.lua --tables=3 --table_size=100000000 prepare\n```\n\n官网优化建议：https://dev.mysql.com/doc/refman/8.0/en/optimizing-innodb-configuration-variables.html\n配置文件：/etc/my.cnf\n```shell\n# 优化方向，缓存、日志\n\n# 修改端口\nport=3309\n\n## 全局配置\n# 字符集\ncharacter-set-server=utf8mb4\ncollation-server=utf8mb4_general_ci\n# 时区\ndefault-time-zone=+08:00\n# 慢查询日志的开关，设置记录时间为2s\nslow_query_log = 1\nlong_query_time = 2\n# MySQL的最大连接数，预计连接数是50内\nmax_connections = 200\n\n\n## 存储引擎相关\n# InnoDB缓冲池缓存索引和原始数据\ninnodb_buffer_pool_size = 32G\n# InnoDB为独立表空间模式，可以实现单表在不同的数据库中移动\ninnodb_file_per_table = 1\n# 默认是300，调整为500，我们就二三十张表\ninnodb_open_files = 500\n# 默认设置为0，不限制并发数\ninnodb_thread_concurrency = 0\n\n## 日志相关\n# 代表binlog的过期时间，30天\nbinlog_expire_logs_seconds = 259200\n# 日志缓冲池相关\ninnodb_log_buffer_size = 128M\ninnodb_log_file_size = 512M\n# 禁用压缩页面的日志记录\ninnodb_log_compressed_pages = off\n```\n\n\n### 压力测试\n```shell\n# 数据准备\nsysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_write --db-ps-mode=disable prepare\n\n\n# 测试数据库的综合读写TPS\nsysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=10 --table_size=1000000 oltp_read_write --db-ps-mode=disable run\n\n[ 1s ] thds: 10 tps: 468.01 qps: 9507.90 (r/w/o: 6673.89/1888.01/946.00) lat (ms,95%): 31.94 err/s: 0.00 reconn/s: 0.00\n[ 2s ] thds: 10 tps: 413.13 qps: 8225.63 (r/w/o: 5754.84/1644.53/826.26) lat (ms,95%): 36.24 err/s: 0.00 reconn/s: 0.00\n[ 30s ] thds: 10 tps: 321.88 qps: 6509.52 (r/w/o: 4569.26/1295.51/644.75) lat (ms,95%): 46.63 err/s: 0.00 reconn/s: 0.00\nSQL statistics:\n    queries performed:\n        read:                            135982\n        write:                           38852\n        other:                           19426\n        total:                           194260\n    transactions:                        9713   (323.36 per sec.)\n    queries:                             194260 (6467.21 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          30.0358s\n    total number of events:              9713\n\nLatency (ms):\n         min:                                   11.62\n         avg:                                   30.90\n         max:                                  130.70\n         95th percentile:                       49.21\n         sum:                               300122.50\n\nThreads fairness:\n    events (avg/stddev):           971.3000/7.38\n    execution time (avg/stddev):   30.0122/0.01\n\n\n\n\n# 只读测试\nsysbench --db-driver=mysql --time=30 --threads=16 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_only --db-ps-mode=disable run\n\n[ 1s ] thds: 16 tps: 1162.10 qps: 18716.33 (r/w/o: 16377.17/0.00/2339.17) lat (ms,95%): 23.10 err/s: 0.00 reconn/s: 0.00\n[ 2s ] thds: 16 tps: 1314.16 qps: 21020.63 (r/w/o: 18391.30/0.00/2629.33) lat (ms,95%): 18.95 err/s: 0.00 reconn/s: 0.00\n[ 30s ] thds: 16 tps: 1119.86 qps: 17924.70 (r/w/o: 15683.99/0.00/2240.71) lat (ms,95%): 21.11 err/s: 0.00 reconn/s: 0.00\nSQL statistics:\n    queries performed:\n        read:                            435092\n        write:                           0\n        other:                           62156\n        total:                           497248\n    transactions:                        31078  (1035.24 per sec.)\n    queries:                             497248 (16563.84 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          30.0184s\n    total number of events:              31078\n\nLatency (ms):\n         min:                                    6.79\n         avg:                                   15.45\n         max:                                   96.76\n         95th percentile:                       27.17\n         sum:                               480008.54\n\nThreads fairness:\n    events (avg/stddev):           1942.3750/148.44\n    execution time (avg/stddev):   30.0005/0.01\n\n\n# 参数解读\n\nthds: 10，这个意思就是有10个线程在压测\ntps: 380.99，这个意思就是每秒执行了380.99个事务\nqps: 7610.20，这个意思就是每秒可以执行7610.20个请求\n(r/w/o: 5132.99/1155.86/1321.35)，这个意思就是说，在每秒7610.20个请求中，有5132.99个请求是读请求，1155.86个请求是写请求，1321.35个请求是其他的请求，就是对QPS进行了拆解\nlat (ms, 95%): 21.33，这个意思就是说，95%的请求的延迟都在21.33毫秒以下\nerr/s: 0.00 reconn/s: 0.00，这两个的意思就是说，每秒有0个请求是失败的，发生了0次网络重连\n\n\n\nSQL statistics:\n\tqueries performed:\n\t\tread: 1480084 // 这就是说在300s的压测期间执行了148万多次的读请求\n\t\twrite: 298457 // 这是说在压测期间执行了29万多次的写请求\n\t\tother: 325436 // 这是说在压测期间执行了30万多次的其他请求\n\t\ttotal: 2103977 // 这是说一共执行了210万多次的请求\n\t// 这是说一共执行了10万多个事务，每秒执行350多个事务\n\ttransactions: 105180( 350.6 per sec. )\n\t// 这是说一共执行了210万多次的请求，每秒执行7000+请求\n\tqueries: 2103977 ( 7013.26 per sec. )\n\tignored errors: 0 (0.00 per sec.)\n\treconnects: 0 (0.00 per sec.)\n// 下面就是说，一共执行了300s的压测，执行了10万+的事务\nGeneral staticstics:\n\ttotal time: 300.0052s\n\ttotal number of events: 105180\nLatency (ms):\n\tmin: 4.32 // 请求中延迟最小的是4.32ms\n\tavg: 13.42 // 所有请求平均延迟是13.42ms\n\tmax: 45.56 // 延迟最大的请求是45.56ms\n\t95th percentile: 21.33 // 95%的请求延迟都在21.33ms以内\n```\n\n\n","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL配置.md","raw":"```shell\nsysbench --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 /usr/share/sysbench/oltp_common.lua --tables=3 --table_size=100000000 prepare\n```\n\n官网优化建议：https://dev.mysql.com/doc/refman/8.0/en/optimizing-innodb-configuration-variables.html\n配置文件：/etc/my.cnf\n```shell\n# 优化方向，缓存、日志\n\n# 修改端口\nport=3309\n\n## 全局配置\n# 字符集\ncharacter-set-server=utf8mb4\ncollation-server=utf8mb4_general_ci\n# 时区\ndefault-time-zone=+08:00\n# 慢查询日志的开关，设置记录时间为2s\nslow_query_log = 1\nlong_query_time = 2\n# MySQL的最大连接数，预计连接数是50内\nmax_connections = 200\n\n\n## 存储引擎相关\n# InnoDB缓冲池缓存索引和原始数据\ninnodb_buffer_pool_size = 32G\n# InnoDB为独立表空间模式，可以实现单表在不同的数据库中移动\ninnodb_file_per_table = 1\n# 默认是300，调整为500，我们就二三十张表\ninnodb_open_files = 500\n# 默认设置为0，不限制并发数\ninnodb_thread_concurrency = 0\n\n## 日志相关\n# 代表binlog的过期时间，30天\nbinlog_expire_logs_seconds = 259200\n# 日志缓冲池相关\ninnodb_log_buffer_size = 128M\ninnodb_log_file_size = 512M\n# 禁用压缩页面的日志记录\ninnodb_log_compressed_pages = off\n```\n\n\n### 压力测试\n```shell\n# 数据准备\nsysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_write --db-ps-mode=disable prepare\n\n\n# 测试数据库的综合读写TPS\nsysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=10 --table_size=1000000 oltp_read_write --db-ps-mode=disable run\n\n[ 1s ] thds: 10 tps: 468.01 qps: 9507.90 (r/w/o: 6673.89/1888.01/946.00) lat (ms,95%): 31.94 err/s: 0.00 reconn/s: 0.00\n[ 2s ] thds: 10 tps: 413.13 qps: 8225.63 (r/w/o: 5754.84/1644.53/826.26) lat (ms,95%): 36.24 err/s: 0.00 reconn/s: 0.00\n[ 30s ] thds: 10 tps: 321.88 qps: 6509.52 (r/w/o: 4569.26/1295.51/644.75) lat (ms,95%): 46.63 err/s: 0.00 reconn/s: 0.00\nSQL statistics:\n    queries performed:\n        read:                            135982\n        write:                           38852\n        other:                           19426\n        total:                           194260\n    transactions:                        9713   (323.36 per sec.)\n    queries:                             194260 (6467.21 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          30.0358s\n    total number of events:              9713\n\nLatency (ms):\n         min:                                   11.62\n         avg:                                   30.90\n         max:                                  130.70\n         95th percentile:                       49.21\n         sum:                               300122.50\n\nThreads fairness:\n    events (avg/stddev):           971.3000/7.38\n    execution time (avg/stddev):   30.0122/0.01\n\n\n\n\n# 只读测试\nsysbench --db-driver=mysql --time=30 --threads=16 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_only --db-ps-mode=disable run\n\n[ 1s ] thds: 16 tps: 1162.10 qps: 18716.33 (r/w/o: 16377.17/0.00/2339.17) lat (ms,95%): 23.10 err/s: 0.00 reconn/s: 0.00\n[ 2s ] thds: 16 tps: 1314.16 qps: 21020.63 (r/w/o: 18391.30/0.00/2629.33) lat (ms,95%): 18.95 err/s: 0.00 reconn/s: 0.00\n[ 30s ] thds: 16 tps: 1119.86 qps: 17924.70 (r/w/o: 15683.99/0.00/2240.71) lat (ms,95%): 21.11 err/s: 0.00 reconn/s: 0.00\nSQL statistics:\n    queries performed:\n        read:                            435092\n        write:                           0\n        other:                           62156\n        total:                           497248\n    transactions:                        31078  (1035.24 per sec.)\n    queries:                             497248 (16563.84 per sec.)\n    ignored errors:                      0      (0.00 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nGeneral statistics:\n    total time:                          30.0184s\n    total number of events:              31078\n\nLatency (ms):\n         min:                                    6.79\n         avg:                                   15.45\n         max:                                   96.76\n         95th percentile:                       27.17\n         sum:                               480008.54\n\nThreads fairness:\n    events (avg/stddev):           1942.3750/148.44\n    execution time (avg/stddev):   30.0005/0.01\n\n\n# 参数解读\n\nthds: 10，这个意思就是有10个线程在压测\ntps: 380.99，这个意思就是每秒执行了380.99个事务\nqps: 7610.20，这个意思就是每秒可以执行7610.20个请求\n(r/w/o: 5132.99/1155.86/1321.35)，这个意思就是说，在每秒7610.20个请求中，有5132.99个请求是读请求，1155.86个请求是写请求，1321.35个请求是其他的请求，就是对QPS进行了拆解\nlat (ms, 95%): 21.33，这个意思就是说，95%的请求的延迟都在21.33毫秒以下\nerr/s: 0.00 reconn/s: 0.00，这两个的意思就是说，每秒有0个请求是失败的，发生了0次网络重连\n\n\n\nSQL statistics:\n\tqueries performed:\n\t\tread: 1480084 // 这就是说在300s的压测期间执行了148万多次的读请求\n\t\twrite: 298457 // 这是说在压测期间执行了29万多次的写请求\n\t\tother: 325436 // 这是说在压测期间执行了30万多次的其他请求\n\t\ttotal: 2103977 // 这是说一共执行了210万多次的请求\n\t// 这是说一共执行了10万多个事务，每秒执行350多个事务\n\ttransactions: 105180( 350.6 per sec. )\n\t// 这是说一共执行了210万多次的请求，每秒执行7000+请求\n\tqueries: 2103977 ( 7013.26 per sec. )\n\tignored errors: 0 (0.00 per sec.)\n\treconnects: 0 (0.00 per sec.)\n// 下面就是说，一共执行了300s的压测，执行了10万+的事务\nGeneral staticstics:\n\ttotal time: 300.0052s\n\ttotal number of events: 105180\nLatency (ms):\n\tmin: 4.32 // 请求中延迟最小的是4.32ms\n\tavg: 13.42 // 所有请求平均延迟是13.42ms\n\tmax: 45.56 // 延迟最大的请求是45.56ms\n\t95th percentile: 21.33 // 95%的请求延迟都在21.33ms以内\n```\n\n\n","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL配置","published":1,"date":"2023-09-01T13:06:37.960Z","updated":"2023-08-28T11:46:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2m0028zb8ad8osaf6d","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysbench --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 /usr/share/sysbench/oltp_common.lua --tables=3 --table_size=100000000 prepare</span><br></pre></td></tr></table></figure>\n<p>官网优化建议：<a href=\"https://dev.mysql.com/doc/refman/8.0/en/optimizing-innodb-configuration-variables.html\">https://dev.mysql.com/doc/refman/8.0/en/optimizing-innodb-configuration-variables.html</a><br>\n配置文件：/etc/my.cnf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">优化方向，缓存、日志</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改端口</span></span><br><span class=\"line\">port=3309</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 全局配置</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">字符集</span></span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">collation-server=utf8mb4_general_ci</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">时区</span></span><br><span class=\"line\">default-time-zone=+08:00</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">慢查询日志的开关，设置记录时间为2s</span></span><br><span class=\"line\">slow_query_log = 1</span><br><span class=\"line\">long_query_time = 2</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MySQL的最大连接数，预计连接数是50内</span></span><br><span class=\"line\">max_connections = 200</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 存储引擎相关</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">InnoDB缓冲池缓存索引和原始数据</span></span><br><span class=\"line\">innodb_buffer_pool_size = 32G</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">InnoDB为独立表空间模式，可以实现单表在不同的数据库中移动</span></span><br><span class=\"line\">innodb_file_per_table = 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">默认是300，调整为500，我们就二三十张表</span></span><br><span class=\"line\">innodb_open_files = 500</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">默认设置为0，不限制并发数</span></span><br><span class=\"line\">innodb_thread_concurrency = 0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 日志相关</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">代表binlog的过期时间，30天</span></span><br><span class=\"line\">binlog_expire_logs_seconds = 259200</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">日志缓冲池相关</span></span><br><span class=\"line\">innodb_log_buffer_size = 128M</span><br><span class=\"line\">innodb_log_file_size = 512M</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">禁用压缩页面的日志记录</span></span><br><span class=\"line\">innodb_log_compressed_pages = off</span><br></pre></td></tr></table></figure>\n<h3 id=\"压力测试\">压力测试</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">数据准备</span></span><br><span class=\"line\">sysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_write --db-ps-mode=disable prepare</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">测试数据库的综合读写TPS</span></span><br><span class=\"line\">sysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=10 --table_size=1000000 oltp_read_write --db-ps-mode=disable run</span><br><span class=\"line\"></span><br><span class=\"line\">[ 1s ] thds: 10 tps: 468.01 qps: 9507.90 (r/w/o: 6673.89/1888.01/946.00) lat (ms,95%): 31.94 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 2s ] thds: 10 tps: 413.13 qps: 8225.63 (r/w/o: 5754.84/1644.53/826.26) lat (ms,95%): 36.24 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 30s ] thds: 10 tps: 321.88 qps: 6509.52 (r/w/o: 4569.26/1295.51/644.75) lat (ms,95%): 46.63 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">SQL statistics:</span><br><span class=\"line\">    queries performed:</span><br><span class=\"line\">        read:                            135982</span><br><span class=\"line\">        write:                           38852</span><br><span class=\"line\">        other:                           19426</span><br><span class=\"line\">        total:                           194260</span><br><span class=\"line\">    transactions:                        9713   (323.36 per sec.)</span><br><span class=\"line\">    queries:                             194260 (6467.21 per sec.)</span><br><span class=\"line\">    ignored errors:                      0      (0.00 per sec.)</span><br><span class=\"line\">    reconnects:                          0      (0.00 per sec.)</span><br><span class=\"line\"></span><br><span class=\"line\">General statistics:</span><br><span class=\"line\">    total time:                          30.0358s</span><br><span class=\"line\">    total number of events:              9713</span><br><span class=\"line\"></span><br><span class=\"line\">Latency (ms):</span><br><span class=\"line\">         min:                                   11.62</span><br><span class=\"line\">         avg:                                   30.90</span><br><span class=\"line\">         max:                                  130.70</span><br><span class=\"line\">         95th percentile:                       49.21</span><br><span class=\"line\">         sum:                               300122.50</span><br><span class=\"line\"></span><br><span class=\"line\">Threads fairness:</span><br><span class=\"line\">    events (avg/stddev):           971.3000/7.38</span><br><span class=\"line\">    execution time (avg/stddev):   30.0122/0.01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">只读测试</span></span><br><span class=\"line\">sysbench --db-driver=mysql --time=30 --threads=16 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_only --db-ps-mode=disable run</span><br><span class=\"line\"></span><br><span class=\"line\">[ 1s ] thds: 16 tps: 1162.10 qps: 18716.33 (r/w/o: 16377.17/0.00/2339.17) lat (ms,95%): 23.10 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 2s ] thds: 16 tps: 1314.16 qps: 21020.63 (r/w/o: 18391.30/0.00/2629.33) lat (ms,95%): 18.95 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 30s ] thds: 16 tps: 1119.86 qps: 17924.70 (r/w/o: 15683.99/0.00/2240.71) lat (ms,95%): 21.11 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">SQL statistics:</span><br><span class=\"line\">    queries performed:</span><br><span class=\"line\">        read:                            435092</span><br><span class=\"line\">        write:                           0</span><br><span class=\"line\">        other:                           62156</span><br><span class=\"line\">        total:                           497248</span><br><span class=\"line\">    transactions:                        31078  (1035.24 per sec.)</span><br><span class=\"line\">    queries:                             497248 (16563.84 per sec.)</span><br><span class=\"line\">    ignored errors:                      0      (0.00 per sec.)</span><br><span class=\"line\">    reconnects:                          0      (0.00 per sec.)</span><br><span class=\"line\"></span><br><span class=\"line\">General statistics:</span><br><span class=\"line\">    total time:                          30.0184s</span><br><span class=\"line\">    total number of events:              31078</span><br><span class=\"line\"></span><br><span class=\"line\">Latency (ms):</span><br><span class=\"line\">         min:                                    6.79</span><br><span class=\"line\">         avg:                                   15.45</span><br><span class=\"line\">         max:                                   96.76</span><br><span class=\"line\">         95th percentile:                       27.17</span><br><span class=\"line\">         sum:                               480008.54</span><br><span class=\"line\"></span><br><span class=\"line\">Threads fairness:</span><br><span class=\"line\">    events (avg/stddev):           1942.3750/148.44</span><br><span class=\"line\">    execution time (avg/stddev):   30.0005/0.01</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数解读</span></span><br><span class=\"line\"></span><br><span class=\"line\">thds: 10，这个意思就是有10个线程在压测</span><br><span class=\"line\">tps: 380.99，这个意思就是每秒执行了380.99个事务</span><br><span class=\"line\">qps: 7610.20，这个意思就是每秒可以执行7610.20个请求</span><br><span class=\"line\">(r/w/o: 5132.99/1155.86/1321.35)，这个意思就是说，在每秒7610.20个请求中，有5132.99个请求是读请求，1155.86个请求是写请求，1321.35个请求是其他的请求，就是对QPS进行了拆解</span><br><span class=\"line\">lat (ms, 95%): 21.33，这个意思就是说，95%的请求的延迟都在21.33毫秒以下</span><br><span class=\"line\">err/s: 0.00 reconn/s: 0.00，这两个的意思就是说，每秒有0个请求是失败的，发生了0次网络重连</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">SQL statistics:</span><br><span class=\"line\">\tqueries performed:</span><br><span class=\"line\">\t\tread: 1480084 // 这就是说在300s的压测期间执行了148万多次的读请求</span><br><span class=\"line\">\t\twrite: 298457 // 这是说在压测期间执行了29万多次的写请求</span><br><span class=\"line\">\t\tother: 325436 // 这是说在压测期间执行了30万多次的其他请求</span><br><span class=\"line\">\t\ttotal: 2103977 // 这是说一共执行了210万多次的请求</span><br><span class=\"line\">\t// 这是说一共执行了10万多个事务，每秒执行350多个事务</span><br><span class=\"line\">\ttransactions: 105180( 350.6 per sec. )</span><br><span class=\"line\">\t// 这是说一共执行了210万多次的请求，每秒执行7000+请求</span><br><span class=\"line\">\tqueries: 2103977 ( 7013.26 per sec. )</span><br><span class=\"line\">\tignored errors: 0 (0.00 per sec.)</span><br><span class=\"line\">\treconnects: 0 (0.00 per sec.)</span><br><span class=\"line\">// 下面就是说，一共执行了300s的压测，执行了10万+的事务</span><br><span class=\"line\">General staticstics:</span><br><span class=\"line\">\ttotal time: 300.0052s</span><br><span class=\"line\">\ttotal number of events: 105180</span><br><span class=\"line\">Latency (ms):</span><br><span class=\"line\">\tmin: 4.32 // 请求中延迟最小的是4.32ms</span><br><span class=\"line\">\tavg: 13.42 // 所有请求平均延迟是13.42ms</span><br><span class=\"line\">\tmax: 45.56 // 延迟最大的请求是45.56ms</span><br><span class=\"line\">\t95th percentile: 21.33 // 95%的请求延迟都在21.33ms以内</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysbench --mysql-host=127.0.0.1 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 /usr/share/sysbench/oltp_common.lua --tables=3 --table_size=100000000 prepare</span><br></pre></td></tr></table></figure>\n<p>官网优化建议：<a href=\"https://dev.mysql.com/doc/refman/8.0/en/optimizing-innodb-configuration-variables.html\">https://dev.mysql.com/doc/refman/8.0/en/optimizing-innodb-configuration-variables.html</a><br>\n配置文件：/etc/my.cnf</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">优化方向，缓存、日志</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">修改端口</span></span><br><span class=\"line\">port=3309</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 全局配置</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">字符集</span></span><br><span class=\"line\">character-set-server=utf8mb4</span><br><span class=\"line\">collation-server=utf8mb4_general_ci</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">时区</span></span><br><span class=\"line\">default-time-zone=+08:00</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">慢查询日志的开关，设置记录时间为2s</span></span><br><span class=\"line\">slow_query_log = 1</span><br><span class=\"line\">long_query_time = 2</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MySQL的最大连接数，预计连接数是50内</span></span><br><span class=\"line\">max_connections = 200</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 存储引擎相关</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">InnoDB缓冲池缓存索引和原始数据</span></span><br><span class=\"line\">innodb_buffer_pool_size = 32G</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">InnoDB为独立表空间模式，可以实现单表在不同的数据库中移动</span></span><br><span class=\"line\">innodb_file_per_table = 1</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">默认是300，调整为500，我们就二三十张表</span></span><br><span class=\"line\">innodb_open_files = 500</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">默认设置为0，不限制并发数</span></span><br><span class=\"line\">innodb_thread_concurrency = 0</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 日志相关</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">代表binlog的过期时间，30天</span></span><br><span class=\"line\">binlog_expire_logs_seconds = 259200</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">日志缓冲池相关</span></span><br><span class=\"line\">innodb_log_buffer_size = 128M</span><br><span class=\"line\">innodb_log_file_size = 512M</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">禁用压缩页面的日志记录</span></span><br><span class=\"line\">innodb_log_compressed_pages = off</span><br></pre></td></tr></table></figure>\n<h3 id=\"压力测试\">压力测试</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">数据准备</span></span><br><span class=\"line\">sysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_write --db-ps-mode=disable prepare</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">测试数据库的综合读写TPS</span></span><br><span class=\"line\">sysbench --db-driver=mysql --time=30 --threads=10 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=10 --table_size=1000000 oltp_read_write --db-ps-mode=disable run</span><br><span class=\"line\"></span><br><span class=\"line\">[ 1s ] thds: 10 tps: 468.01 qps: 9507.90 (r/w/o: 6673.89/1888.01/946.00) lat (ms,95%): 31.94 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 2s ] thds: 10 tps: 413.13 qps: 8225.63 (r/w/o: 5754.84/1644.53/826.26) lat (ms,95%): 36.24 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 30s ] thds: 10 tps: 321.88 qps: 6509.52 (r/w/o: 4569.26/1295.51/644.75) lat (ms,95%): 46.63 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">SQL statistics:</span><br><span class=\"line\">    queries performed:</span><br><span class=\"line\">        read:                            135982</span><br><span class=\"line\">        write:                           38852</span><br><span class=\"line\">        other:                           19426</span><br><span class=\"line\">        total:                           194260</span><br><span class=\"line\">    transactions:                        9713   (323.36 per sec.)</span><br><span class=\"line\">    queries:                             194260 (6467.21 per sec.)</span><br><span class=\"line\">    ignored errors:                      0      (0.00 per sec.)</span><br><span class=\"line\">    reconnects:                          0      (0.00 per sec.)</span><br><span class=\"line\"></span><br><span class=\"line\">General statistics:</span><br><span class=\"line\">    total time:                          30.0358s</span><br><span class=\"line\">    total number of events:              9713</span><br><span class=\"line\"></span><br><span class=\"line\">Latency (ms):</span><br><span class=\"line\">         min:                                   11.62</span><br><span class=\"line\">         avg:                                   30.90</span><br><span class=\"line\">         max:                                  130.70</span><br><span class=\"line\">         95th percentile:                       49.21</span><br><span class=\"line\">         sum:                               300122.50</span><br><span class=\"line\"></span><br><span class=\"line\">Threads fairness:</span><br><span class=\"line\">    events (avg/stddev):           971.3000/7.38</span><br><span class=\"line\">    execution time (avg/stddev):   30.0122/0.01</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">只读测试</span></span><br><span class=\"line\">sysbench --db-driver=mysql --time=30 --threads=16 --report-interval=1 --mysql-host=192.168.10.185 --mysql-port=3306 --mysql-user=root --mysql-password=mysql@SZT2021 --mysql-db=test_db --tables=20 --table_size=1000000 oltp_read_only --db-ps-mode=disable run</span><br><span class=\"line\"></span><br><span class=\"line\">[ 1s ] thds: 16 tps: 1162.10 qps: 18716.33 (r/w/o: 16377.17/0.00/2339.17) lat (ms,95%): 23.10 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 2s ] thds: 16 tps: 1314.16 qps: 21020.63 (r/w/o: 18391.30/0.00/2629.33) lat (ms,95%): 18.95 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">[ 30s ] thds: 16 tps: 1119.86 qps: 17924.70 (r/w/o: 15683.99/0.00/2240.71) lat (ms,95%): 21.11 err/s: 0.00 reconn/s: 0.00</span><br><span class=\"line\">SQL statistics:</span><br><span class=\"line\">    queries performed:</span><br><span class=\"line\">        read:                            435092</span><br><span class=\"line\">        write:                           0</span><br><span class=\"line\">        other:                           62156</span><br><span class=\"line\">        total:                           497248</span><br><span class=\"line\">    transactions:                        31078  (1035.24 per sec.)</span><br><span class=\"line\">    queries:                             497248 (16563.84 per sec.)</span><br><span class=\"line\">    ignored errors:                      0      (0.00 per sec.)</span><br><span class=\"line\">    reconnects:                          0      (0.00 per sec.)</span><br><span class=\"line\"></span><br><span class=\"line\">General statistics:</span><br><span class=\"line\">    total time:                          30.0184s</span><br><span class=\"line\">    total number of events:              31078</span><br><span class=\"line\"></span><br><span class=\"line\">Latency (ms):</span><br><span class=\"line\">         min:                                    6.79</span><br><span class=\"line\">         avg:                                   15.45</span><br><span class=\"line\">         max:                                   96.76</span><br><span class=\"line\">         95th percentile:                       27.17</span><br><span class=\"line\">         sum:                               480008.54</span><br><span class=\"line\"></span><br><span class=\"line\">Threads fairness:</span><br><span class=\"line\">    events (avg/stddev):           1942.3750/148.44</span><br><span class=\"line\">    execution time (avg/stddev):   30.0005/0.01</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">参数解读</span></span><br><span class=\"line\"></span><br><span class=\"line\">thds: 10，这个意思就是有10个线程在压测</span><br><span class=\"line\">tps: 380.99，这个意思就是每秒执行了380.99个事务</span><br><span class=\"line\">qps: 7610.20，这个意思就是每秒可以执行7610.20个请求</span><br><span class=\"line\">(r/w/o: 5132.99/1155.86/1321.35)，这个意思就是说，在每秒7610.20个请求中，有5132.99个请求是读请求，1155.86个请求是写请求，1321.35个请求是其他的请求，就是对QPS进行了拆解</span><br><span class=\"line\">lat (ms, 95%): 21.33，这个意思就是说，95%的请求的延迟都在21.33毫秒以下</span><br><span class=\"line\">err/s: 0.00 reconn/s: 0.00，这两个的意思就是说，每秒有0个请求是失败的，发生了0次网络重连</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">SQL statistics:</span><br><span class=\"line\">\tqueries performed:</span><br><span class=\"line\">\t\tread: 1480084 // 这就是说在300s的压测期间执行了148万多次的读请求</span><br><span class=\"line\">\t\twrite: 298457 // 这是说在压测期间执行了29万多次的写请求</span><br><span class=\"line\">\t\tother: 325436 // 这是说在压测期间执行了30万多次的其他请求</span><br><span class=\"line\">\t\ttotal: 2103977 // 这是说一共执行了210万多次的请求</span><br><span class=\"line\">\t// 这是说一共执行了10万多个事务，每秒执行350多个事务</span><br><span class=\"line\">\ttransactions: 105180( 350.6 per sec. )</span><br><span class=\"line\">\t// 这是说一共执行了210万多次的请求，每秒执行7000+请求</span><br><span class=\"line\">\tqueries: 2103977 ( 7013.26 per sec. )</span><br><span class=\"line\">\tignored errors: 0 (0.00 per sec.)</span><br><span class=\"line\">\treconnects: 0 (0.00 per sec.)</span><br><span class=\"line\">// 下面就是说，一共执行了300s的压测，执行了10万+的事务</span><br><span class=\"line\">General staticstics:</span><br><span class=\"line\">\ttotal time: 300.0052s</span><br><span class=\"line\">\ttotal number of events: 105180</span><br><span class=\"line\">Latency (ms):</span><br><span class=\"line\">\tmin: 4.32 // 请求中延迟最小的是4.32ms</span><br><span class=\"line\">\tavg: 13.42 // 所有请求平均延迟是13.42ms</span><br><span class=\"line\">\tmax: 45.56 // 延迟最大的请求是45.56ms</span><br><span class=\"line\">\t95th percentile: 21.33 // 95%的请求延迟都在21.33ms以内</span><br></pre></td></tr></table></figure>\n"},{"_content":"\n\n\n\necho linux#SZT3932 | passwd --stdin root;\n\n\n\nsystemctl enable mysqld\nsystemctl status mysqld\nsystemctl stop mysqld\nsystemctl start mysqld\n\n\n1.查询所有数据库\nshow databases;\n\n2.查询指定数据库中所有表名\nselect table_name from information_schema.tables where table_schema='database_name' and table_type='base table';\n\n3.查询指定表中的所有字段名\nselect column_name from information_schema.columns where table_schema='database_name' and table_name='table_name';\n\n4.查询指定表中的所有字段名和字段类型\nselect column_name,data_type from information_schema.columns where table_schema='database_name' and table_name='table_name';\n\n\nnacos/nacos#SZT8854\n\n### 查询连接\nshow processlist;\n \n# 显示全部\nshow full processlist;\n\n\nbusiness0 business1 business2 civil_data0 civil_data1 civil_data2\ncivil_manager mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify\n\nbusiness0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\n\n\n\n1146 - Table 'xxl_job_verify.xxl_job_log_report' doesn't exist\n\n\nselect concat(\n    'select \"', \n    TABLE_name, \n    '\", count(*) from ', \n    TABLE_SCHEMA, \n    '.',\n    TABLE_name,\n    ' union all'\n) from information_schema.tables \nwhere \nTABLE_SCHEMA='business0' or \nTABLE_SCHEMA='business1' or\nTABLE_SCHEMA='business2' or\nTABLE_SCHEMA='civil_data0' or\nTABLE_SCHEMA='civil_data1' or\nTABLE_SCHEMA='civil_data2' or\nTABLE_SCHEMA='civil_manager' or\nTABLE_SCHEMA='mh_business' or\nTABLE_SCHEMA='mh_code' or\nTABLE_SCHEMA='mh_verify' or\nTABLE_SCHEMA='prod_nacos' or\nTABLE_SCHEMA='push_xxl_job' or\nTABLE_SCHEMA='xxl_job' or\nTABLE_SCHEMA='xxl_job_verify'","source":"_posts/07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL维护.md","raw":"\n\n\n\necho linux#SZT3932 | passwd --stdin root;\n\n\n\nsystemctl enable mysqld\nsystemctl status mysqld\nsystemctl stop mysqld\nsystemctl start mysqld\n\n\n1.查询所有数据库\nshow databases;\n\n2.查询指定数据库中所有表名\nselect table_name from information_schema.tables where table_schema='database_name' and table_type='base table';\n\n3.查询指定表中的所有字段名\nselect column_name from information_schema.columns where table_schema='database_name' and table_name='table_name';\n\n4.查询指定表中的所有字段名和字段类型\nselect column_name,data_type from information_schema.columns where table_schema='database_name' and table_name='table_name';\n\n\nnacos/nacos#SZT8854\n\n### 查询连接\nshow processlist;\n \n# 显示全部\nshow full processlist;\n\n\nbusiness0 business1 business2 civil_data0 civil_data1 civil_data2\ncivil_manager mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify\n\nbusiness0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify\n\n\n\n1146 - Table 'xxl_job_verify.xxl_job_log_report' doesn't exist\n\n\nselect concat(\n    'select \"', \n    TABLE_name, \n    '\", count(*) from ', \n    TABLE_SCHEMA, \n    '.',\n    TABLE_name,\n    ' union all'\n) from information_schema.tables \nwhere \nTABLE_SCHEMA='business0' or \nTABLE_SCHEMA='business1' or\nTABLE_SCHEMA='business2' or\nTABLE_SCHEMA='civil_data0' or\nTABLE_SCHEMA='civil_data1' or\nTABLE_SCHEMA='civil_data2' or\nTABLE_SCHEMA='civil_manager' or\nTABLE_SCHEMA='mh_business' or\nTABLE_SCHEMA='mh_code' or\nTABLE_SCHEMA='mh_verify' or\nTABLE_SCHEMA='prod_nacos' or\nTABLE_SCHEMA='push_xxl_job' or\nTABLE_SCHEMA='xxl_job' or\nTABLE_SCHEMA='xxl_job_verify'","slug":"07中间件/D.项目分类/1.战训-互联-中间件/B.集群数据库部署.MySQL维护","published":1,"date":"2023-09-01T13:06:37.940Z","updated":"2023-09-01T06:38:10.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2n0029zb8aec1330wb","content":"<p>echo linux#SZT3932 | passwd --stdin root;</p>\n<p>systemctl enable mysqld<br>\nsystemctl status mysqld<br>\nsystemctl stop mysqld<br>\nsystemctl start mysqld</p>\n<p>1.查询所有数据库<br>\nshow databases;</p>\n<p>2.查询指定数据库中所有表名<br>\nselect table_name from information_schema.tables where table_schema=‘database_name’ and table_type=‘base table’;</p>\n<p>3.查询指定表中的所有字段名<br>\nselect column_name from information_schema.columns where table_schema=‘database_name’ and table_name=‘table_name’;</p>\n<p>4.查询指定表中的所有字段名和字段类型<br>\nselect column_name,data_type from information_schema.columns where table_schema=‘database_name’ and table_name=‘table_name’;</p>\n<p>nacos/nacos#SZT8854</p>\n<h3 id=\"查询连接\">查询连接</h3>\n<p>show processlist;</p>\n<h1>显示全部</h1>\n<p>show full processlist;</p>\n<p>business0 business1 business2 civil_data0 civil_data1 civil_data2<br>\ncivil_manager mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify</p>\n<p>business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</p>\n<p>1146 - Table ‘xxl_job_verify.xxl_job_log_report’ doesn’t exist</p>\n<p>select concat(<br>\n‘select &quot;’,<br>\nTABLE_name,<br>\n'&quot;, count(*) from ‘,<br>\nTABLE_SCHEMA,<br>\n‘.’,<br>\nTABLE_name,<br>\n’ union all’<br>\n) from information_schema.tables<br>\nwhere<br>\nTABLE_SCHEMA=‘business0’ or<br>\nTABLE_SCHEMA=‘business1’ or<br>\nTABLE_SCHEMA=‘business2’ or<br>\nTABLE_SCHEMA=‘civil_data0’ or<br>\nTABLE_SCHEMA=‘civil_data1’ or<br>\nTABLE_SCHEMA=‘civil_data2’ or<br>\nTABLE_SCHEMA=‘civil_manager’ or<br>\nTABLE_SCHEMA=‘mh_business’ or<br>\nTABLE_SCHEMA=‘mh_code’ or<br>\nTABLE_SCHEMA=‘mh_verify’ or<br>\nTABLE_SCHEMA=‘prod_nacos’ or<br>\nTABLE_SCHEMA=‘push_xxl_job’ or<br>\nTABLE_SCHEMA=‘xxl_job’ or<br>\nTABLE_SCHEMA=‘xxl_job_verify’</p>\n","excerpt":"","more":"<p>echo linux#SZT3932 | passwd --stdin root;</p>\n<p>systemctl enable mysqld<br>\nsystemctl status mysqld<br>\nsystemctl stop mysqld<br>\nsystemctl start mysqld</p>\n<p>1.查询所有数据库<br>\nshow databases;</p>\n<p>2.查询指定数据库中所有表名<br>\nselect table_name from information_schema.tables where table_schema=‘database_name’ and table_type=‘base table’;</p>\n<p>3.查询指定表中的所有字段名<br>\nselect column_name from information_schema.columns where table_schema=‘database_name’ and table_name=‘table_name’;</p>\n<p>4.查询指定表中的所有字段名和字段类型<br>\nselect column_name,data_type from information_schema.columns where table_schema=‘database_name’ and table_name=‘table_name’;</p>\n<p>nacos/nacos#SZT8854</p>\n<h3 id=\"查询连接\">查询连接</h3>\n<p>show processlist;</p>\n<h1>显示全部</h1>\n<p>show full processlist;</p>\n<p>business0 business1 business2 civil_data0 civil_data1 civil_data2<br>\ncivil_manager mh_business mh_code mh_verify prod_nacos push_xxl_job xxl_job xxl_job_verify</p>\n<p>business0,business1,business2,civil_data0,civil_data1,civil_data2,civil_manager,mh_business,mh_code,mh_verify,prod_nacos,push_xxl_job,xxl_job,xxl_job_verify</p>\n<p>1146 - Table ‘xxl_job_verify.xxl_job_log_report’ doesn’t exist</p>\n<p>select concat(<br>\n‘select &quot;’,<br>\nTABLE_name,<br>\n'&quot;, count(*) from ‘,<br>\nTABLE_SCHEMA,<br>\n‘.’,<br>\nTABLE_name,<br>\n’ union all’<br>\n) from information_schema.tables<br>\nwhere<br>\nTABLE_SCHEMA=‘business0’ or<br>\nTABLE_SCHEMA=‘business1’ or<br>\nTABLE_SCHEMA=‘business2’ or<br>\nTABLE_SCHEMA=‘civil_data0’ or<br>\nTABLE_SCHEMA=‘civil_data1’ or<br>\nTABLE_SCHEMA=‘civil_data2’ or<br>\nTABLE_SCHEMA=‘civil_manager’ or<br>\nTABLE_SCHEMA=‘mh_business’ or<br>\nTABLE_SCHEMA=‘mh_code’ or<br>\nTABLE_SCHEMA=‘mh_verify’ or<br>\nTABLE_SCHEMA=‘prod_nacos’ or<br>\nTABLE_SCHEMA=‘push_xxl_job’ or<br>\nTABLE_SCHEMA=‘xxl_job’ or<br>\nTABLE_SCHEMA=‘xxl_job_verify’</p>\n"},{"_content":"### 版本\nfilebeat-8.8.1-linux-x86_64\n\nzookeeper:3.7.1\nwurstmeister/kafka:2.13-2.8.1\n\nelasticsearch:7.15.2\nlogstash:7.15.2\nkibana:7.15.2\n\n\n\n\n\nkibana-7.15.2.tar\ndocker load < kibana-7.15.2.tar && docker tag abca6a9e3cf8 docker.elastic.co/kibana/kibana:7.15.2\n\n\n\ndocker load < logstash-7.15.2.tar\ndocker tag 6bd1bad7c9c6 docker.elastic.co/logstash/logstash:7.15.2\n\n\n\ndocker pull docker.elastic.co/beats/filebeat:7.15.2","source":"_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.1总览.md","raw":"### 版本\nfilebeat-8.8.1-linux-x86_64\n\nzookeeper:3.7.1\nwurstmeister/kafka:2.13-2.8.1\n\nelasticsearch:7.15.2\nlogstash:7.15.2\nkibana:7.15.2\n\n\n\n\n\nkibana-7.15.2.tar\ndocker load < kibana-7.15.2.tar && docker tag abca6a9e3cf8 docker.elastic.co/kibana/kibana:7.15.2\n\n\n\ndocker load < logstash-7.15.2.tar\ndocker tag 6bd1bad7c9c6 docker.elastic.co/logstash/logstash:7.15.2\n\n\n\ndocker pull docker.elastic.co/beats/filebeat:7.15.2","slug":"07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.1总览","published":1,"date":"2023-09-01T13:06:38.050Z","updated":"2023-08-15T11:24:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2v002azb8a5zovhw4z","content":"<h3 id=\"版本\">版本</h3>\n<p>filebeat-8.8.1-linux-x86_64</p>\n<p>zookeeper:3.7.1<br>\nwurstmeister/kafka:2.13-2.8.1</p>\n<p>elasticsearch:7.15.2<br>\nlogstash:7.15.2<br>\nkibana:7.15.2</p>\n<p>kibana-7.15.2.tar<br>\ndocker load &lt; kibana-7.15.2.tar &amp;&amp; docker tag abca6a9e3cf8 <a href=\"http://docker.elastic.co/kibana/kibana:7.15.2\">docker.elastic.co/kibana/kibana:7.15.2</a></p>\n<p>docker load &lt; logstash-7.15.2.tar<br>\ndocker tag 6bd1bad7c9c6 <a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a></p>\n<p>docker pull <a href=\"http://docker.elastic.co/beats/filebeat:7.15.2\">docker.elastic.co/beats/filebeat:7.15.2</a></p>\n","excerpt":"","more":"<h3 id=\"版本\">版本</h3>\n<p>filebeat-8.8.1-linux-x86_64</p>\n<p>zookeeper:3.7.1<br>\nwurstmeister/kafka:2.13-2.8.1</p>\n<p>elasticsearch:7.15.2<br>\nlogstash:7.15.2<br>\nkibana:7.15.2</p>\n<p>kibana-7.15.2.tar<br>\ndocker load &lt; kibana-7.15.2.tar &amp;&amp; docker tag abca6a9e3cf8 <a href=\"http://docker.elastic.co/kibana/kibana:7.15.2\">docker.elastic.co/kibana/kibana:7.15.2</a></p>\n<p>docker load &lt; logstash-7.15.2.tar<br>\ndocker tag 6bd1bad7c9c6 <a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a></p>\n<p>docker pull <a href=\"http://docker.elastic.co/beats/filebeat:7.15.2\">docker.elastic.co/beats/filebeat:7.15.2</a></p>\n"},{"_content":"\nhttps://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\n\n### 前置工作\n创建外置目录，修改进程可使用最大虚拟内存\n```\nmkdir -p /docker_data/loganalysis_elasticsearch/{config,data,plugins,logs}\necho \"vm.max_map_count=262144\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n#vm.max_map_count = 262144\n```\n### 创建配置文件\n每个节点`/docker_data/loganalysis_elasticsearch/config/elasticsearch.yml`,修改node.name，network.publish_host\n```\n#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。\ncluster.name: prod-loganalysis-es\n#节点名称\nnode.name: loganalysis-es-186\n#设置索引数据的存储路径\npath.data: ./data\n#设置日志的存储路径\npath.logs: ./logs\n#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中\nnetwork.host: 0.0.0.0\nnetwork.publish_host: 192.168.10.186\n#设置对外服务的http端口\nhttp.port: 9200\ntransport.tcp.port: 9300\n#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点\n#discovery.zen.ping.unicast.hosts: [\"0.0.0.0\"]\ndiscovery.seed_hosts: [\"192.168.10.186:9300\",\"192.168.10.187:9300\",\"192.168.10.188:9300\"]\ncluster.initial_master_nodes: [\"loganalysis-es-186\", \"loganalysis-es-187\",\"loganalysis-es-188\"]\n\nnode.master: true\nnode.data: true\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n```\n\n\n### 创建实例\n```shell\n# 记得修改名称和ES_JAVA_OPTS\ndocker run  --name prod_loganalysis_es_03 \\\n--network=host --privileged=true --restart=always \\\n-v /docker_data/loganalysis_elasticsearch/config:/usr/share/elasticsearch/config \\\n-v /docker_data/loganalysis_elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /docker_data/loganalysis_elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-v /docker_data/loganalysis_elasticsearch/logs:/usr/share/elasticsearch/logs \\\n-e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n-e TAKE_FILE_OWNERSHIP=true \\\ndocker.elastic.co/elasticsearch/elasticsearch:7.15.2\n```\n\n### 生成密钥\n\n```\n# 进入容器\ndocker exec -it prod_loganalysis_es_01 /bin/bash\n# 生成密钥\nbin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass \"\"\ncd /usr/share/elasticsearch/config/\nchmod 777 elastic-certificates.p12\nexit\n\n# 复制到宿主机\ndocker cp prod_loganalysis_es_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 \n```\n\n### 分发密钥\n2-6主机均需复制\n```\ndocker cp /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 prod_loganalysis_es_03:/usr/share/elasticsearch/config/elastic-certificates.p12\n\n# 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：\nxpack.security.enabled: true\nxpack.license.self_generated.type: basic\nxpack.security.transport.ssl.enabled: true\nxpack.security.transport.ssl.verification_mode: certificate\nxpack.security.transport.ssl.keystore.path: elastic-certificates.p12\nxpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n```\n重启docker-es实例\ndocker restart prod_loganalysis_es_01\n\n### 修改密码\n\n```\n[root@node1 ~]# docker exec -it prod_loganalysis_es_01 /bin/bash\nbash-4.4# bin/elasticsearch-setup-passwords interactive\nInitiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.\nYou will be prompted to enter passwords as the process progresses.\nPlease confirm that you would like to continue [y/N]y\n\n```\n\n### 验证集群\n打开：http://192.168.10.188:9200/_cat/nodes?pretty，验证新设密码（elastic/szt@#es）。\n```\n192.168.10.187 52 86 0 0.16 0.20 0.18 cdfhilmrstw * loganalysis-es-187\n192.168.10.186 42 99 0 0.25 0.35 0.28 cdfhilmrstw - loganalysis-es-186\n192.168.10.188 29 70 0 0.08 0.21 0.22 cdfhilmrstw - loganalysis-es-188\n```\n","source":"_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Elasticsearch.md","raw":"\nhttps://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\n\n### 前置工作\n创建外置目录，修改进程可使用最大虚拟内存\n```\nmkdir -p /docker_data/loganalysis_elasticsearch/{config,data,plugins,logs}\necho \"vm.max_map_count=262144\" >> /etc/sysctl.conf\ncat /etc/sysctl.conf\nsysctl -p\n\n#vm.max_map_count = 262144\n```\n### 创建配置文件\n每个节点`/docker_data/loganalysis_elasticsearch/config/elasticsearch.yml`,修改node.name，network.publish_host\n```\n#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。\ncluster.name: prod-loganalysis-es\n#节点名称\nnode.name: loganalysis-es-186\n#设置索引数据的存储路径\npath.data: ./data\n#设置日志的存储路径\npath.logs: ./logs\n#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中\nnetwork.host: 0.0.0.0\nnetwork.publish_host: 192.168.10.186\n#设置对外服务的http端口\nhttp.port: 9200\ntransport.tcp.port: 9300\n#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点\n#discovery.zen.ping.unicast.hosts: [\"0.0.0.0\"]\ndiscovery.seed_hosts: [\"192.168.10.186:9300\",\"192.168.10.187:9300\",\"192.168.10.188:9300\"]\ncluster.initial_master_nodes: [\"loganalysis-es-186\", \"loganalysis-es-187\",\"loganalysis-es-188\"]\n\nnode.master: true\nnode.data: true\n\nhttp.cors.enabled: true\nhttp.cors.allow-origin: \"*\"\n```\n\n\n### 创建实例\n```shell\n# 记得修改名称和ES_JAVA_OPTS\ndocker run  --name prod_loganalysis_es_03 \\\n--network=host --privileged=true --restart=always \\\n-v /docker_data/loganalysis_elasticsearch/config:/usr/share/elasticsearch/config \\\n-v /docker_data/loganalysis_elasticsearch/data:/usr/share/elasticsearch/data \\\n-v /docker_data/loganalysis_elasticsearch/plugins:/usr/share/elasticsearch/plugins \\\n-v /docker_data/loganalysis_elasticsearch/logs:/usr/share/elasticsearch/logs \\\n-e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n-e TAKE_FILE_OWNERSHIP=true \\\ndocker.elastic.co/elasticsearch/elasticsearch:7.15.2\n```\n\n### 生成密钥\n\n```\n# 进入容器\ndocker exec -it prod_loganalysis_es_01 /bin/bash\n# 生成密钥\nbin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass \"\"\ncd /usr/share/elasticsearch/config/\nchmod 777 elastic-certificates.p12\nexit\n\n# 复制到宿主机\ndocker cp prod_loganalysis_es_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 \n```\n\n### 分发密钥\n2-6主机均需复制\n```\ndocker cp /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 prod_loganalysis_es_03:/usr/share/elasticsearch/config/elastic-certificates.p12\n\n# 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：\nxpack.security.enabled: true\nxpack.license.self_generated.type: basic\nxpack.security.transport.ssl.enabled: true\nxpack.security.transport.ssl.verification_mode: certificate\nxpack.security.transport.ssl.keystore.path: elastic-certificates.p12\nxpack.security.transport.ssl.truststore.path: elastic-certificates.p12\n```\n重启docker-es实例\ndocker restart prod_loganalysis_es_01\n\n### 修改密码\n\n```\n[root@node1 ~]# docker exec -it prod_loganalysis_es_01 /bin/bash\nbash-4.4# bin/elasticsearch-setup-passwords interactive\nInitiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.\nYou will be prompted to enter passwords as the process progresses.\nPlease confirm that you would like to continue [y/N]y\n\n```\n\n### 验证集群\n打开：http://192.168.10.188:9200/_cat/nodes?pretty，验证新设密码（elastic/szt@#es）。\n```\n192.168.10.187 52 86 0 0.16 0.20 0.18 cdfhilmrstw * loganalysis-es-187\n192.168.10.186 42 99 0 0.25 0.35 0.28 cdfhilmrstw - loganalysis-es-186\n192.168.10.188 29 70 0 0.08 0.21 0.22 cdfhilmrstw - loganalysis-es-188\n```\n","slug":"07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Elasticsearch","published":1,"date":"2023-09-01T13:06:38.060Z","updated":"2023-06-27T13:13:22.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2v002bzb8ah4a009pe","content":"<p><a href=\"https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\">https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html</a></p>\n<h3 id=\"前置工作\">前置工作</h3>\n<p>创建外置目录，修改进程可使用最大虚拟内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/loganalysis_elasticsearch/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\">echo &quot;vm.max_map_count=262144&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">cat /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br><span class=\"line\"></span><br><span class=\"line\">#vm.max_map_count = 262144</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\">创建配置文件</h3>\n<p>每个节点<code>/docker_data/loganalysis_elasticsearch/config/elasticsearch.yml</code>,<a href=\"http://xn--node-486fx14i.name\">修改node.name</a>，network.publish_host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span><br><span class=\"line\">cluster.name: prod-loganalysis-es</span><br><span class=\"line\">#节点名称</span><br><span class=\"line\">node.name: loganalysis-es-186</span><br><span class=\"line\">#设置索引数据的存储路径</span><br><span class=\"line\">path.data: ./data</span><br><span class=\"line\">#设置日志的存储路径</span><br><span class=\"line\">path.logs: ./logs</span><br><span class=\"line\">#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中</span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\">network.publish_host: 192.168.10.186</span><br><span class=\"line\">#设置对外服务的http端口</span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\">transport.tcp.port: 9300</span><br><span class=\"line\">#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点</span><br><span class=\"line\">#discovery.zen.ping.unicast.hosts: [&quot;0.0.0.0&quot;]</span><br><span class=\"line\">discovery.seed_hosts: [&quot;192.168.10.186:9300&quot;,&quot;192.168.10.187:9300&quot;,&quot;192.168.10.188:9300&quot;]</span><br><span class=\"line\">cluster.initial_master_nodes: [&quot;loganalysis-es-186&quot;, &quot;loganalysis-es-187&quot;,&quot;loganalysis-es-188&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">node.master: true</span><br><span class=\"line\">node.data: true</span><br><span class=\"line\"></span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建实例\">创建实例</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">记得修改名称和ES_JAVA_OPTS</span></span><br><span class=\"line\">docker run  --name prod_loganalysis_es_03 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/config:/usr/share/elasticsearch/config \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/data:/usr/share/elasticsearch/data \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/plugins:/usr/share/elasticsearch/plugins \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/logs:/usr/share/elasticsearch/logs \\</span><br><span class=\"line\">-e ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; \\</span><br><span class=\"line\">-e TAKE_FILE_OWNERSHIP=true \\</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成密钥\">生成密钥</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入容器</span><br><span class=\"line\">docker exec -it prod_loganalysis_es_01 /bin/bash</span><br><span class=\"line\"># 生成密钥</span><br><span class=\"line\">bin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass &quot;&quot;</span><br><span class=\"line\">cd /usr/share/elasticsearch/config/</span><br><span class=\"line\">chmod 777 elastic-certificates.p12</span><br><span class=\"line\">exit</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制到宿主机</span><br><span class=\"line\">docker cp prod_loganalysis_es_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 </span><br></pre></td></tr></table></figure>\n<h3 id=\"分发密钥\">分发密钥</h3>\n<p>2-6主机均需复制</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 prod_loganalysis_es_03:/usr/share/elasticsearch/config/elastic-certificates.p12</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：</span><br><span class=\"line\">xpack.security.enabled: true</span><br><span class=\"line\">xpack.license.self_generated.type: basic</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: true</span><br><span class=\"line\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br></pre></td></tr></table></figure>\n<p>重启docker-es实例<br>\ndocker restart prod_loganalysis_es_01</p>\n<h3 id=\"修改密码\">修改密码</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node1 ~]# docker exec -it prod_loganalysis_es_01 /bin/bash</span><br><span class=\"line\">bash-4.4# bin/elasticsearch-setup-passwords interactive</span><br><span class=\"line\">Initiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.</span><br><span class=\"line\">You will be prompted to enter passwords as the process progresses.</span><br><span class=\"line\">Please confirm that you would like to continue [y/N]y</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"验证集群\">验证集群</h3>\n<p>打开：<a href=\"http://192.168.10.188:9200/_cat/nodes?pretty%EF%BC%8C%E9%AA%8C%E8%AF%81%E6%96%B0%E8%AE%BE%E5%AF%86%E7%A0%81%EF%BC%88elastic/szt@#es%EF%BC%89%E3%80%82\">http://192.168.10.188:9200/_cat/nodes?pretty，验证新设密码（elastic/szt@#es）。</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.10.187 52 86 0 0.16 0.20 0.18 cdfhilmrstw * loganalysis-es-187</span><br><span class=\"line\">192.168.10.186 42 99 0 0.25 0.35 0.28 cdfhilmrstw - loganalysis-es-186</span><br><span class=\"line\">192.168.10.188 29 70 0 0.08 0.21 0.22 cdfhilmrstw - loganalysis-es-188</span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<p><a href=\"https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html\">https://www.elastic.co/guide/en/enterprise-search/7.15/docker.html</a></p>\n<h3 id=\"前置工作\">前置工作</h3>\n<p>创建外置目录，修改进程可使用最大虚拟内存</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/loganalysis_elasticsearch/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\">echo &quot;vm.max_map_count=262144&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\">cat /etc/sysctl.conf</span><br><span class=\"line\">sysctl -p</span><br><span class=\"line\"></span><br><span class=\"line\">#vm.max_map_count = 262144</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建配置文件\">创建配置文件</h3>\n<p>每个节点<code>/docker_data/loganalysis_elasticsearch/config/elasticsearch.yml</code>,<a href=\"http://xn--node-486fx14i.name\">修改node.name</a>，network.publish_host</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#配置es的集群名称，默认是elasticsearch，es会自动发现在同一网段下的es，如果在同一网段下有多个集群，就可以用这个属性来区分不同的集群。</span><br><span class=\"line\">cluster.name: prod-loganalysis-es</span><br><span class=\"line\">#节点名称</span><br><span class=\"line\">node.name: loganalysis-es-186</span><br><span class=\"line\">#设置索引数据的存储路径</span><br><span class=\"line\">path.data: ./data</span><br><span class=\"line\">#设置日志的存储路径</span><br><span class=\"line\">path.logs: ./logs</span><br><span class=\"line\">#设置当前的ip地址,通过指定相同网段的其他节点会加入该集群中</span><br><span class=\"line\">network.host: 0.0.0.0</span><br><span class=\"line\">network.publish_host: 192.168.10.186</span><br><span class=\"line\">#设置对外服务的http端口</span><br><span class=\"line\">http.port: 9200</span><br><span class=\"line\">transport.tcp.port: 9300</span><br><span class=\"line\">#设置集群中master节点的初始列表，可以通过这些节点来自动发现新加入集群的节点</span><br><span class=\"line\">#discovery.zen.ping.unicast.hosts: [&quot;0.0.0.0&quot;]</span><br><span class=\"line\">discovery.seed_hosts: [&quot;192.168.10.186:9300&quot;,&quot;192.168.10.187:9300&quot;,&quot;192.168.10.188:9300&quot;]</span><br><span class=\"line\">cluster.initial_master_nodes: [&quot;loganalysis-es-186&quot;, &quot;loganalysis-es-187&quot;,&quot;loganalysis-es-188&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">node.master: true</span><br><span class=\"line\">node.data: true</span><br><span class=\"line\"></span><br><span class=\"line\">http.cors.enabled: true</span><br><span class=\"line\">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建实例\">创建实例</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">记得修改名称和ES_JAVA_OPTS</span></span><br><span class=\"line\">docker run  --name prod_loganalysis_es_03 \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/config:/usr/share/elasticsearch/config \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/data:/usr/share/elasticsearch/data \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/plugins:/usr/share/elasticsearch/plugins \\</span><br><span class=\"line\">-v /docker_data/loganalysis_elasticsearch/logs:/usr/share/elasticsearch/logs \\</span><br><span class=\"line\">-e ES_JAVA_OPTS=&quot;-Xms1024m -Xmx1024m&quot; \\</span><br><span class=\"line\">-e TAKE_FILE_OWNERSHIP=true \\</span><br><span class=\"line\">docker.elastic.co/elasticsearch/elasticsearch:7.15.2</span><br></pre></td></tr></table></figure>\n<h3 id=\"生成密钥\">生成密钥</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 进入容器</span><br><span class=\"line\">docker exec -it prod_loganalysis_es_01 /bin/bash</span><br><span class=\"line\"># 生成密钥</span><br><span class=\"line\">bin/elasticsearch-certutil cert -out config/elastic-certificates.p12 -pass &quot;&quot;</span><br><span class=\"line\">cd /usr/share/elasticsearch/config/</span><br><span class=\"line\">chmod 777 elastic-certificates.p12</span><br><span class=\"line\">exit</span><br><span class=\"line\"></span><br><span class=\"line\"># 复制到宿主机</span><br><span class=\"line\">docker cp prod_loganalysis_es_01:/usr/share/elasticsearch/config/elastic-certificates.p12 /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 </span><br></pre></td></tr></table></figure>\n<h3 id=\"分发密钥\">分发密钥</h3>\n<p>2-6主机均需复制</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp /docker_data/loganalysis_elasticsearch/config/elastic-certificates.p12 prod_loganalysis_es_03:/usr/share/elasticsearch/config/elastic-certificates.p12</span><br><span class=\"line\"></span><br><span class=\"line\"># 修改/docker_data/elasticsearch/config/elasticsearch.yml，添加以下几行：</span><br><span class=\"line\">xpack.security.enabled: true</span><br><span class=\"line\">xpack.license.self_generated.type: basic</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: true</span><br><span class=\"line\">xpack.security.transport.ssl.verification_mode: certificate</span><br><span class=\"line\">xpack.security.transport.ssl.keystore.path: elastic-certificates.p12</span><br><span class=\"line\">xpack.security.transport.ssl.truststore.path: elastic-certificates.p12</span><br></pre></td></tr></table></figure>\n<p>重启docker-es实例<br>\ndocker restart prod_loganalysis_es_01</p>\n<h3 id=\"修改密码\">修改密码</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@node1 ~]# docker exec -it prod_loganalysis_es_01 /bin/bash</span><br><span class=\"line\">bash-4.4# bin/elasticsearch-setup-passwords interactive</span><br><span class=\"line\">Initiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user.</span><br><span class=\"line\">You will be prompted to enter passwords as the process progresses.</span><br><span class=\"line\">Please confirm that you would like to continue [y/N]y</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"验证集群\">验证集群</h3>\n<p>打开：<a href=\"http://192.168.10.188:9200/_cat/nodes?pretty%EF%BC%8C%E9%AA%8C%E8%AF%81%E6%96%B0%E8%AE%BE%E5%AF%86%E7%A0%81%EF%BC%88elastic/szt@#es%EF%BC%89%E3%80%82\">http://192.168.10.188:9200/_cat/nodes?pretty，验证新设密码（elastic/szt@#es）。</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.10.187 52 86 0 0.16 0.20 0.18 cdfhilmrstw * loganalysis-es-187</span><br><span class=\"line\">192.168.10.186 42 99 0 0.25 0.35 0.28 cdfhilmrstw - loganalysis-es-186</span><br><span class=\"line\">192.168.10.188 29 70 0 0.08 0.21 0.22 cdfhilmrstw - loganalysis-es-188</span><br></pre></td></tr></table></figure>\n"},{"_content":"\n\n\n\n\n\n\n\n\n\n[root@ansible ~]# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\n--2023-08-04 04:09:08--  https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\nResolving artifacts.elastic.co (artifacts.elastic.co)... 34.120.127.130, 2600:1901:0:1d7::\nConnecting to artifacts.elastic.co (artifacts.elastic.co)|34.120.127.130|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 35555181 (34M) [binary/octet-stream]\nSaving to: ‘filebeat-7.15.2-x86_64.rpm’\n\n100%[========================================================================================================================================>] 35,555,181  1.89MB/s   in 24s\n\n2023-08-04 04:09:33 (1.39 MB/s) - ‘filebeat-7.15.2-x86_64.rpm’ saved [35555181/35555181]\n\n[root@ansible ~]# ls\nanaconda-ks.cfg  docker_image       Documents  filebeat-7.15.2-x86_64.rpm  original-ks.cfg  Public    Templates\nDesktop          docker-prometheus  Downloads  Music                       Pictures         software  Videos\n[root@ansible ~]# rpm -ivh filebeat-7.15.2-x86_64.rpm\nwarning: filebeat-7.15.2-x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID d88e42b4: NOKEY\nPreparing...                          ################################# [100%]\nUpdating / installing...\n   1:filebeat-7.15.2-1                ################################# [100%]\n[root@ansible ~]#\n\n\n\nsystemctl start filebeat\n设置开机启动：\n\nsystemctl enable filebeat\n检查 Filebeat 启动状态：\n\nsystemctl status filebeat\n\n\nvi /etc/filebeat/filebeat.yml\n\ncat /etc/filebeat/filebeat.yml","source":"_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat.md","raw":"\n\n\n\n\n\n\n\n\n\n[root@ansible ~]# wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\n--2023-08-04 04:09:08--  https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\nResolving artifacts.elastic.co (artifacts.elastic.co)... 34.120.127.130, 2600:1901:0:1d7::\nConnecting to artifacts.elastic.co (artifacts.elastic.co)|34.120.127.130|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 35555181 (34M) [binary/octet-stream]\nSaving to: ‘filebeat-7.15.2-x86_64.rpm’\n\n100%[========================================================================================================================================>] 35,555,181  1.89MB/s   in 24s\n\n2023-08-04 04:09:33 (1.39 MB/s) - ‘filebeat-7.15.2-x86_64.rpm’ saved [35555181/35555181]\n\n[root@ansible ~]# ls\nanaconda-ks.cfg  docker_image       Documents  filebeat-7.15.2-x86_64.rpm  original-ks.cfg  Public    Templates\nDesktop          docker-prometheus  Downloads  Music                       Pictures         software  Videos\n[root@ansible ~]# rpm -ivh filebeat-7.15.2-x86_64.rpm\nwarning: filebeat-7.15.2-x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID d88e42b4: NOKEY\nPreparing...                          ################################# [100%]\nUpdating / installing...\n   1:filebeat-7.15.2-1                ################################# [100%]\n[root@ansible ~]#\n\n\n\nsystemctl start filebeat\n设置开机启动：\n\nsystemctl enable filebeat\n检查 Filebeat 启动状态：\n\nsystemctl status filebeat\n\n\nvi /etc/filebeat/filebeat.yml\n\ncat /etc/filebeat/filebeat.yml","slug":"07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Filebeat","published":1,"date":"2023-09-01T13:06:38.060Z","updated":"2023-08-31T09:41:00.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2w002czb8a4lwocivc","content":"<p>[root@ansible ~]# wget <a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm</a><br>\n–2023-08-04 04:09:08--  <a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm</a><br>\nResolving <a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a> (<a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a>)… 34.120.127.130, 2600:1901:0:1d7::<br>\nConnecting to <a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a> (<a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a>)|34.120.127.130|:443… connected.<br>\nHTTP request sent, awaiting response… 200 OK<br>\nLength: 35555181 (34M) [binary/octet-stream]<br>\nSaving to: ‘filebeat-7.15.2-x86_64.rpm’</p>\n<p>100%[========================================================================================================================================&gt;] 35,555,181  1.89MB/s   in 24s</p>\n<p>2023-08-04 04:09:33 (1.39 MB/s) - ‘filebeat-7.15.2-x86_64.rpm’ saved [35555181/35555181]</p>\n<p>[root@ansible ~]# ls<br>\nanaconda-ks.cfg  docker_image       Documents  filebeat-7.15.2-x86_64.rpm  original-ks.cfg  Public    Templates<br>\nDesktop          docker-prometheus  Downloads  Music                       Pictures         software  Videos<br>\n[root@ansible ~]# rpm -ivh filebeat-7.15.2-x86_64.rpm<br>\nwarning: filebeat-7.15.2-x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID d88e42b4: NOKEY<br>\nPreparing…                          ################################# [100%]<br>\nUpdating / installing…<br>\n1:filebeat-7.15.2-1                ################################# [100%]<br>\n[root@ansible ~]#</p>\n<p>systemctl start filebeat<br>\n设置开机启动：</p>\n<p>systemctl enable filebeat<br>\n检查 Filebeat 启动状态：</p>\n<p>systemctl status filebeat</p>\n<p>vi /etc/filebeat/filebeat.yml</p>\n<p>cat /etc/filebeat/filebeat.yml</p>\n","excerpt":"","more":"<p>[root@ansible ~]# wget <a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm</a><br>\n–2023-08-04 04:09:08--  <a href=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm\">https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.2-x86_64.rpm</a><br>\nResolving <a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a> (<a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a>)… 34.120.127.130, 2600:1901:0:1d7::<br>\nConnecting to <a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a> (<a href=\"http://artifacts.elastic.co\">artifacts.elastic.co</a>)|34.120.127.130|:443… connected.<br>\nHTTP request sent, awaiting response… 200 OK<br>\nLength: 35555181 (34M) [binary/octet-stream]<br>\nSaving to: ‘filebeat-7.15.2-x86_64.rpm’</p>\n<p>100%[========================================================================================================================================&gt;] 35,555,181  1.89MB/s   in 24s</p>\n<p>2023-08-04 04:09:33 (1.39 MB/s) - ‘filebeat-7.15.2-x86_64.rpm’ saved [35555181/35555181]</p>\n<p>[root@ansible ~]# ls<br>\nanaconda-ks.cfg  docker_image       Documents  filebeat-7.15.2-x86_64.rpm  original-ks.cfg  Public    Templates<br>\nDesktop          docker-prometheus  Downloads  Music                       Pictures         software  Videos<br>\n[root@ansible ~]# rpm -ivh filebeat-7.15.2-x86_64.rpm<br>\nwarning: filebeat-7.15.2-x86_64.rpm: Header V4 RSA/SHA512 Signature, key ID d88e42b4: NOKEY<br>\nPreparing…                          ################################# [100%]<br>\nUpdating / installing…<br>\n1:filebeat-7.15.2-1                ################################# [100%]<br>\n[root@ansible ~]#</p>\n<p>systemctl start filebeat<br>\n设置开机启动：</p>\n<p>systemctl enable filebeat<br>\n检查 Filebeat 启动状态：</p>\n<p>systemctl status filebeat</p>\n<p>vi /etc/filebeat/filebeat.yml</p>\n<p>cat /etc/filebeat/filebeat.yml</p>\n"},{"_content":" \n \n \n \n \n mkdir -p /docker_data/loganalysis_logstash/config\n \n \n prod_loganalysis_kibana_02\n \ndocker run  --name prod_loganalysis_logstash_1 \\\n --network=host --privileged=true --restart=always \\\n -v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config \\\n -e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n docker.elastic.co/logstash/logstash:7.15.2\n\n\n\ndocker run  --name prod_loganalysis_logstash_2 \\\n --network=host --privileged=true --restart=always \\\n -v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config \\\n -e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n docker.elastic.co/logstash/logstash:7.15.2\n\n http://192.168.10.188:9200/_cat/indice","source":"_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Logstash.md","raw":" \n \n \n \n \n mkdir -p /docker_data/loganalysis_logstash/config\n \n \n prod_loganalysis_kibana_02\n \ndocker run  --name prod_loganalysis_logstash_1 \\\n --network=host --privileged=true --restart=always \\\n -v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config \\\n -e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n docker.elastic.co/logstash/logstash:7.15.2\n\n\n\ndocker run  --name prod_loganalysis_logstash_2 \\\n --network=host --privileged=true --restart=always \\\n -v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config \\\n -e ES_JAVA_OPTS=\"-Xms1024m -Xmx1024m\" \\\n docker.elastic.co/logstash/logstash:7.15.2\n\n http://192.168.10.188:9200/_cat/indice","slug":"07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Logstash","published":1,"date":"2023-09-01T13:06:38.070Z","updated":"2023-06-28T07:42:26.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2w002dzb8a7dqzbpap","content":"<p>mkdir -p /docker_data/loganalysis_logstash/config</p>\n<p>prod_loganalysis_kibana_02</p>\n<p>docker run  --name prod_loganalysis_logstash_1 <br>\n–network=host --privileged=true --restart=always <br>\n-v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config <br>\n-e ES_JAVA_OPTS=“-Xms1024m -Xmx1024m” <br>\n<a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a></p>\n<p>docker run  --name prod_loganalysis_logstash_2 <br>\n–network=host --privileged=true --restart=always <br>\n-v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config <br>\n-e ES_JAVA_OPTS=“-Xms1024m -Xmx1024m” <br>\n<a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a></p>\n<p><a href=\"http://192.168.10.188:9200/_cat/indice\">http://192.168.10.188:9200/_cat/indice</a></p>\n","excerpt":"","more":"<p>mkdir -p /docker_data/loganalysis_logstash/config</p>\n<p>prod_loganalysis_kibana_02</p>\n<p>docker run  --name prod_loganalysis_logstash_1 <br>\n–network=host --privileged=true --restart=always <br>\n-v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config <br>\n-e ES_JAVA_OPTS=“-Xms1024m -Xmx1024m” <br>\n<a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a></p>\n<p>docker run  --name prod_loganalysis_logstash_2 <br>\n–network=host --privileged=true --restart=always <br>\n-v /docker_data/loganalysis_logstash/config:/usr/share/logstash/config <br>\n-e ES_JAVA_OPTS=“-Xms1024m -Xmx1024m” <br>\n<a href=\"http://docker.elastic.co/logstash/logstash:7.15.2\">docker.elastic.co/logstash/logstash:7.15.2</a></p>\n<p><a href=\"http://192.168.10.188:9200/_cat/indice\">http://192.168.10.188:9200/_cat/indice</a></p>\n"},{"_content":"\n\n### 前置说明\n\n1、先安装zookeeper\n2、再安装kafka\n\n\n### 创建配置数据存放目录\n```\nmkdir -p /docker_data/loganalysis_zookeeper/{conf,data,datalog}\nconf：zoo.cfg\ndata：myid\n```\n### 修改集群配置文件\n每台都一样\nzoo.cfg\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/data\nclientPort=2181\n\nserver.6=192.168.10.186:2888:3888\nserver.7=192.168.10.187:2888:3888\nserver.8=192.168.10.188:2888:3888\n\n```\n\n### 创建POD\n```\n# /etc/localtime为系统时区，无需修改挂在路径\ndocker run --name prod_loganalysis_zookeeper_02 \\\n-v /docker_data/loganalysis_zookeeper/conf:/conf \\\n-v /docker_data/loganalysis_zookeeper/data:/data \\\n-v /docker_data/loganalysis_zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n--net=host \\\n--restart=always \\\n--privileged=true \\\n-d zookeeper:3.7.1\n```\n\n\n\n### 查看集群\n正常情况下node3应该成为leader\n\n\n\n```shell\nmkdir -p /docker_data/loganalysis_kafka/{config,data,plugins,logs}\n\ndocker stop prod_kafka_cluster_01 && docker rm prod_kafka_cluster_01\ndocker logs prod_kafka_cluster_02\n```\n\n\n需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS\n\n```shell\ndocker run --name prod_loganalysis_kafka_03 \\\n-e KAFKA_BROKER_ID=3 \\\n-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.186:9092 \\\n-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.186:2181,192.168.10.187:2181,192.168.10.188:2181 \\\n-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\\n-e KAFKA_HEAP_OPTS=\"-Xmx1024m -Xms1024m\" \\\n-e TZ='Asia/Shanghai' \\\n-e LANG=\"en_US.UTF-8\" \\\n-v /docker_data/loganalysis_kafka:/kafka \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /etc/localtime:/etc/localtime \\\n--network=host --privileged=true --restart=always \\\n-d wurstmeister/kafka:2.13-2.8.1\n```\n\n验证集群状态：\n```shell\ndocker exec -it prod_loganalysis_zookeeper_02 /bin/bash\nzkServer.sh status\n```","source":"_posts/07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Kafka.md","raw":"\n\n### 前置说明\n\n1、先安装zookeeper\n2、再安装kafka\n\n\n### 创建配置数据存放目录\n```\nmkdir -p /docker_data/loganalysis_zookeeper/{conf,data,datalog}\nconf：zoo.cfg\ndata：myid\n```\n### 修改集群配置文件\n每台都一样\nzoo.cfg\n```\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/data\nclientPort=2181\n\nserver.6=192.168.10.186:2888:3888\nserver.7=192.168.10.187:2888:3888\nserver.8=192.168.10.188:2888:3888\n\n```\n\n### 创建POD\n```\n# /etc/localtime为系统时区，无需修改挂在路径\ndocker run --name prod_loganalysis_zookeeper_02 \\\n-v /docker_data/loganalysis_zookeeper/conf:/conf \\\n-v /docker_data/loganalysis_zookeeper/data:/data \\\n-v /docker_data/loganalysis_zookeeper/datalog:/datalog \\\n-v /etc/localtime:/etc/localtime \\\n--net=host \\\n--restart=always \\\n--privileged=true \\\n-d zookeeper:3.7.1\n```\n\n\n\n### 查看集群\n正常情况下node3应该成为leader\n\n\n\n```shell\nmkdir -p /docker_data/loganalysis_kafka/{config,data,plugins,logs}\n\ndocker stop prod_kafka_cluster_01 && docker rm prod_kafka_cluster_01\ndocker logs prod_kafka_cluster_02\n```\n\n\n需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS\n\n```shell\ndocker run --name prod_loganalysis_kafka_03 \\\n-e KAFKA_BROKER_ID=3 \\\n-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.186:9092 \\\n-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.186:2181,192.168.10.187:2181,192.168.10.188:2181 \\\n-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\\n-e KAFKA_HEAP_OPTS=\"-Xmx1024m -Xms1024m\" \\\n-e TZ='Asia/Shanghai' \\\n-e LANG=\"en_US.UTF-8\" \\\n-v /docker_data/loganalysis_kafka:/kafka \\\n-v /var/run/docker.sock:/var/run/docker.sock \\\n-v /etc/localtime:/etc/localtime \\\n--network=host --privileged=true --restart=always \\\n-d wurstmeister/kafka:2.13-2.8.1\n```\n\n验证集群状态：\n```shell\ndocker exec -it prod_loganalysis_zookeeper_02 /bin/bash\nzkServer.sh status\n```","slug":"07中间件/D.项目分类/3.战训-互联-日志采集/D.集群日志采集.Kafka","published":1,"date":"2023-09-01T13:06:38.060Z","updated":"2023-06-29T01:40:40.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2x002ezb8a6ngldhnl","content":"<h3 id=\"前置说明\">前置说明</h3>\n<p>1、先安装zookeeper<br>\n2、再安装kafka</p>\n<h3 id=\"创建配置数据存放目录\">创建配置数据存放目录</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/loganalysis_zookeeper/&#123;conf,data,datalog&#125;</span><br><span class=\"line\">conf：zoo.cfg</span><br><span class=\"line\">data：myid</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改集群配置文件\">修改集群配置文件</h3>\n<p>每台都一样<br>\nzoo.cfg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/data</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\">server.6=192.168.10.186:2888:3888</span><br><span class=\"line\">server.7=192.168.10.187:2888:3888</span><br><span class=\"line\">server.8=192.168.10.188:2888:3888</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建POD\">创建POD</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/localtime为系统时区，无需修改挂在路径</span><br><span class=\"line\">docker run --name prod_loganalysis_zookeeper_02 \\</span><br><span class=\"line\">-v /docker_data/loganalysis_zookeeper/conf:/conf \\</span><br><span class=\"line\">-v /docker_data/loganalysis_zookeeper/data:/data \\</span><br><span class=\"line\">-v /docker_data/loganalysis_zookeeper/datalog:/datalog \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--net=host \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">--privileged=true \\</span><br><span class=\"line\">-d zookeeper:3.7.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看集群\">查看集群</h3>\n<p>正常情况下node3应该成为leader</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/loganalysis_kafka/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">docker stop prod_kafka_cluster_01 &amp;&amp; docker rm prod_kafka_cluster_01</span><br><span class=\"line\">docker logs prod_kafka_cluster_02</span><br></pre></td></tr></table></figure>\n<p>需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name prod_loganalysis_kafka_03 \\</span><br><span class=\"line\">-e KAFKA_BROKER_ID=3 \\</span><br><span class=\"line\">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.186:9092 \\</span><br><span class=\"line\">-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.186:2181,192.168.10.187:2181,192.168.10.188:2181 \\</span><br><span class=\"line\">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\</span><br><span class=\"line\">-e KAFKA_HEAP_OPTS=&quot;-Xmx1024m -Xms1024m&quot; \\</span><br><span class=\"line\">-e TZ=&#x27;Asia/Shanghai&#x27; \\</span><br><span class=\"line\">-e LANG=&quot;en_US.UTF-8&quot; \\</span><br><span class=\"line\">-v /docker_data/loganalysis_kafka:/kafka \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-d wurstmeister/kafka:2.13-2.8.1</span><br></pre></td></tr></table></figure>\n<p>验证集群状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it prod_loganalysis_zookeeper_02 /bin/bash</span><br><span class=\"line\">zkServer.sh status</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"前置说明\">前置说明</h3>\n<p>1、先安装zookeeper<br>\n2、再安装kafka</p>\n<h3 id=\"创建配置数据存放目录\">创建配置数据存放目录</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/loganalysis_zookeeper/&#123;conf,data,datalog&#125;</span><br><span class=\"line\">conf：zoo.cfg</span><br><span class=\"line\">data：myid</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改集群配置文件\">修改集群配置文件</h3>\n<p>每台都一样<br>\nzoo.cfg</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tickTime=2000</span><br><span class=\"line\">initLimit=10</span><br><span class=\"line\">syncLimit=5</span><br><span class=\"line\">dataDir=/data</span><br><span class=\"line\">clientPort=2181</span><br><span class=\"line\"></span><br><span class=\"line\">server.6=192.168.10.186:2888:3888</span><br><span class=\"line\">server.7=192.168.10.187:2888:3888</span><br><span class=\"line\">server.8=192.168.10.188:2888:3888</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"创建POD\">创建POD</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># /etc/localtime为系统时区，无需修改挂在路径</span><br><span class=\"line\">docker run --name prod_loganalysis_zookeeper_02 \\</span><br><span class=\"line\">-v /docker_data/loganalysis_zookeeper/conf:/conf \\</span><br><span class=\"line\">-v /docker_data/loganalysis_zookeeper/data:/data \\</span><br><span class=\"line\">-v /docker_data/loganalysis_zookeeper/datalog:/datalog \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--net=host \\</span><br><span class=\"line\">--restart=always \\</span><br><span class=\"line\">--privileged=true \\</span><br><span class=\"line\">-d zookeeper:3.7.1</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看集群\">查看集群</h3>\n<p>正常情况下node3应该成为leader</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/loganalysis_kafka/&#123;config,data,plugins,logs&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">docker stop prod_kafka_cluster_01 &amp;&amp; docker rm prod_kafka_cluster_01</span><br><span class=\"line\">docker logs prod_kafka_cluster_02</span><br></pre></td></tr></table></figure>\n<p>需修改三处：name，KAFKA_BROKER_ID，KAFKA_ADVERTISED_LISTENERS</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name prod_loganalysis_kafka_03 \\</span><br><span class=\"line\">-e KAFKA_BROKER_ID=3 \\</span><br><span class=\"line\">-e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://192.168.10.186:9092 \\</span><br><span class=\"line\">-e KAFKA_ZOOKEEPER_CONNECT=192.168.10.186:2181,192.168.10.187:2181,192.168.10.188:2181 \\</span><br><span class=\"line\">-e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \\</span><br><span class=\"line\">-e KAFKA_HEAP_OPTS=&quot;-Xmx1024m -Xms1024m&quot; \\</span><br><span class=\"line\">-e TZ=&#x27;Asia/Shanghai&#x27; \\</span><br><span class=\"line\">-e LANG=&quot;en_US.UTF-8&quot; \\</span><br><span class=\"line\">-v /docker_data/loganalysis_kafka:/kafka \\</span><br><span class=\"line\">-v /var/run/docker.sock:/var/run/docker.sock \\</span><br><span class=\"line\">-v /etc/localtime:/etc/localtime \\</span><br><span class=\"line\">--network=host --privileged=true --restart=always \\</span><br><span class=\"line\">-d wurstmeister/kafka:2.13-2.8.1</span><br></pre></td></tr></table></figure>\n<p>验证集群状态：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it prod_loganalysis_zookeeper_02 /bin/bash</span><br><span class=\"line\">zkServer.sh status</span><br></pre></td></tr></table></figure>"},{"_content":"### 版本\ndocker pull prom/prometheus:v2.45.0\ndocker pull prom/alertmanager:v0.25.0\ndocker pull grafana/grafana:10.0.2\n\n\ncd /data/program/docker_mirror/\ndocker load < prometheus-v2.45.0.tar && docker tag e1fbd49323c6 prom/prometheus:v2.45.0\n\ndocker load < alertmanager-v0.25.0.tar && docker tag c8568f914cd2 prom/alertmanager:v0.25.0\n\ndocker load < grafana-10.0.2.tar && docker tag d4cdde7ce77b grafana/grafana:10.0.2\n\ndocker image ls\n\n\ndocker cp da1a4fcb50cf:/etc/grafana/grafana.ini /data/grafana.ini\n\n\n\n### 查看开发程序侦听的端口\nnetstat -lnpt |grep java","source":"_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.1总览.md","raw":"### 版本\ndocker pull prom/prometheus:v2.45.0\ndocker pull prom/alertmanager:v0.25.0\ndocker pull grafana/grafana:10.0.2\n\n\ncd /data/program/docker_mirror/\ndocker load < prometheus-v2.45.0.tar && docker tag e1fbd49323c6 prom/prometheus:v2.45.0\n\ndocker load < alertmanager-v0.25.0.tar && docker tag c8568f914cd2 prom/alertmanager:v0.25.0\n\ndocker load < grafana-10.0.2.tar && docker tag d4cdde7ce77b grafana/grafana:10.0.2\n\ndocker image ls\n\n\ndocker cp da1a4fcb50cf:/etc/grafana/grafana.ini /data/grafana.ini\n\n\n\n### 查看开发程序侦听的端口\nnetstat -lnpt |grep java","slug":"07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.1总览","published":1,"date":"2023-09-01T13:06:37.980Z","updated":"2023-08-14T02:20:14.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2x002fzb8a5hj29wtg","content":"<h3 id=\"版本\">版本</h3>\n<p>docker pull prom/prometheus:v2.45.0<br>\ndocker pull prom/alertmanager:v0.25.0<br>\ndocker pull grafana/grafana:10.0.2</p>\n<p>cd /data/program/docker_mirror/<br>\ndocker load &lt; prometheus-v2.45.0.tar &amp;&amp; docker tag e1fbd49323c6 prom/prometheus:v2.45.0</p>\n<p>docker load &lt; alertmanager-v0.25.0.tar &amp;&amp; docker tag c8568f914cd2 prom/alertmanager:v0.25.0</p>\n<p>docker load &lt; grafana-10.0.2.tar &amp;&amp; docker tag d4cdde7ce77b grafana/grafana:10.0.2</p>\n<p>docker image ls</p>\n<p>docker cp da1a4fcb50cf:/etc/grafana/grafana.ini /data/grafana.ini</p>\n<h3 id=\"查看开发程序侦听的端口\">查看开发程序侦听的端口</h3>\n<p>netstat -lnpt |grep java</p>\n","excerpt":"","more":"<h3 id=\"版本\">版本</h3>\n<p>docker pull prom/prometheus:v2.45.0<br>\ndocker pull prom/alertmanager:v0.25.0<br>\ndocker pull grafana/grafana:10.0.2</p>\n<p>cd /data/program/docker_mirror/<br>\ndocker load &lt; prometheus-v2.45.0.tar &amp;&amp; docker tag e1fbd49323c6 prom/prometheus:v2.45.0</p>\n<p>docker load &lt; alertmanager-v0.25.0.tar &amp;&amp; docker tag c8568f914cd2 prom/alertmanager:v0.25.0</p>\n<p>docker load &lt; grafana-10.0.2.tar &amp;&amp; docker tag d4cdde7ce77b grafana/grafana:10.0.2</p>\n<p>docker image ls</p>\n<p>docker cp da1a4fcb50cf:/etc/grafana/grafana.ini /data/grafana.ini</p>\n<h3 id=\"查看开发程序侦听的端口\">查看开发程序侦听的端口</h3>\n<p>netstat -lnpt |grep java</p>\n"},{"_content":"\n```shell\n# 创建alertmanager配置文件/docker_data/alertmanager/config/alertmanager.yml\n\ndocker run --net host \\\n -v /docker_data/alertmanager:/etc/alertmanager \\\n --name prod_alertmanager_main_01 --restart always -d prom/alertmanager\n ```\n\n### 配置文件\n\n```shell\nglobal:\n  resolve_timeout: 1m\n  wechat_api_url: 'https://qyapi.weixin.qq.com/cgi-bin/'\n  wechat_api_corp_id: 'ww68b18e2e16395ab3'\n  wechat_api_secret: 'NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao'\n\ntemplates:\n  - '/etc/alertmanager/template/*.tmpl'\nroute:\n  receiver: 'wechat'\n  group_by: ['env','instance','type','group','job','alertname']\n  group_wait: 10s\n  group_interval: 5s\n  repeat_interval: 1h\n\nreceivers:\n- name: 'wechat'\n  wechat_configs:\n  - send_resolved: true\n    message: '{{ template \"wechat.default.message\" . }}'\n    to_party: '2'\n    agent_id: '1000004'\n    to_user : \"@all\"\n    api_secret: 'NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao'\n```\n\n\n### 告警模板\n```shell\n{{ define \"wechat.default.message\" }}\n{{- if gt (len .Alerts.Firing) 0 -}}\n{{- range $index, $alert := .Alerts -}}\n{{- if eq $index 0 }}\n=========测试环境监控报警 =========\n告警状态：{{   .Status }}\n告警级别：{{ .Labels.severity }}\n告警类型：{{ $alert.Labels.alertname }}\n故障主机: {{ $alert.Labels.instance }} {{ $alert.Labels.pod }}\n告警主题: {{ $alert.Annotations.summary }}\n告警详情: {{ $alert.Annotations.message }}{{ $alert.Annotations.description}};\n触发阀值：{{ .Annotations.value }}\n故障时间: {{ ($alert.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }}\n========= = end =  =========\n{{- end }}\n{{- end }}\n{{- end }}\n{{- if gt (len .Alerts.Resolved) 0 -}}\n{{- range $index, $alert := .Alerts -}}\n{{- if eq $index 0 }}\n=========测试环境异常恢复 =========\n告警类型：{{ .Labels.alertname }}\n告警状态：{{   .Status }}\n告警主题: {{ $alert.Annotations.summary }}\n告警详情: {{ $alert.Annotations.message }}{{ $alert.Annotations.description}};\n故障时间: {{ ($alert.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }}\n恢复时间: {{ ($alert.EndsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }}\n{{- if gt (len $alert.Labels.instance) 0 }}\n实例信息: {{ $alert.Labels.instance }}\n{{- end }}\n========= = end =  =========\n{{- end }}\n{{- end }}\n{{- end }}\n{{- end }}\n\n```\n","source":"_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Alertmanager.md","raw":"\n```shell\n# 创建alertmanager配置文件/docker_data/alertmanager/config/alertmanager.yml\n\ndocker run --net host \\\n -v /docker_data/alertmanager:/etc/alertmanager \\\n --name prod_alertmanager_main_01 --restart always -d prom/alertmanager\n ```\n\n### 配置文件\n\n```shell\nglobal:\n  resolve_timeout: 1m\n  wechat_api_url: 'https://qyapi.weixin.qq.com/cgi-bin/'\n  wechat_api_corp_id: 'ww68b18e2e16395ab3'\n  wechat_api_secret: 'NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao'\n\ntemplates:\n  - '/etc/alertmanager/template/*.tmpl'\nroute:\n  receiver: 'wechat'\n  group_by: ['env','instance','type','group','job','alertname']\n  group_wait: 10s\n  group_interval: 5s\n  repeat_interval: 1h\n\nreceivers:\n- name: 'wechat'\n  wechat_configs:\n  - send_resolved: true\n    message: '{{ template \"wechat.default.message\" . }}'\n    to_party: '2'\n    agent_id: '1000004'\n    to_user : \"@all\"\n    api_secret: 'NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao'\n```\n\n\n### 告警模板\n```shell\n{{ define \"wechat.default.message\" }}\n{{- if gt (len .Alerts.Firing) 0 -}}\n{{- range $index, $alert := .Alerts -}}\n{{- if eq $index 0 }}\n=========测试环境监控报警 =========\n告警状态：{{   .Status }}\n告警级别：{{ .Labels.severity }}\n告警类型：{{ $alert.Labels.alertname }}\n故障主机: {{ $alert.Labels.instance }} {{ $alert.Labels.pod }}\n告警主题: {{ $alert.Annotations.summary }}\n告警详情: {{ $alert.Annotations.message }}{{ $alert.Annotations.description}};\n触发阀值：{{ .Annotations.value }}\n故障时间: {{ ($alert.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }}\n========= = end =  =========\n{{- end }}\n{{- end }}\n{{- end }}\n{{- if gt (len .Alerts.Resolved) 0 -}}\n{{- range $index, $alert := .Alerts -}}\n{{- if eq $index 0 }}\n=========测试环境异常恢复 =========\n告警类型：{{ .Labels.alertname }}\n告警状态：{{   .Status }}\n告警主题: {{ $alert.Annotations.summary }}\n告警详情: {{ $alert.Annotations.message }}{{ $alert.Annotations.description}};\n故障时间: {{ ($alert.StartsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }}\n恢复时间: {{ ($alert.EndsAt.Add 28800e9).Format \"2006-01-02 15:04:05\" }}\n{{- if gt (len $alert.Labels.instance) 0 }}\n实例信息: {{ $alert.Labels.instance }}\n{{- end }}\n========= = end =  =========\n{{- end }}\n{{- end }}\n{{- end }}\n{{- end }}\n\n```\n","slug":"07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Alertmanager","published":1,"date":"2023-09-01T13:06:38.000Z","updated":"2023-06-27T06:00:20.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2y002gzb8aezj0dilt","content":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建alertmanager配置文件/docker_data/alertmanager/config/alertmanager.yml</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run --net host \\</span><br><span class=\"line\"> -v /docker_data/alertmanager:/etc/alertmanager \\</span><br><span class=\"line\"> --name prod_alertmanager_main_01 --restart always -d prom/alertmanager</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件\">配置文件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">global:</span><br><span class=\"line\">  resolve_timeout: 1m</span><br><span class=\"line\">  wechat_api_url: &#x27;https://qyapi.weixin.qq.com/cgi-bin/&#x27;</span><br><span class=\"line\">  wechat_api_corp_id: &#x27;ww68b18e2e16395ab3&#x27;</span><br><span class=\"line\">  wechat_api_secret: &#x27;NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">templates:</span><br><span class=\"line\">  - &#x27;/etc/alertmanager/template/*.tmpl&#x27;</span><br><span class=\"line\">route:</span><br><span class=\"line\">  receiver: &#x27;wechat&#x27;</span><br><span class=\"line\">  group_by: [&#x27;env&#x27;,&#x27;instance&#x27;,&#x27;type&#x27;,&#x27;group&#x27;,&#x27;job&#x27;,&#x27;alertname&#x27;]</span><br><span class=\"line\">  group_wait: 10s</span><br><span class=\"line\">  group_interval: 5s</span><br><span class=\"line\">  repeat_interval: 1h</span><br><span class=\"line\"></span><br><span class=\"line\">receivers:</span><br><span class=\"line\">- name: &#x27;wechat&#x27;</span><br><span class=\"line\">  wechat_configs:</span><br><span class=\"line\">  - send_resolved: true</span><br><span class=\"line\">    message: &#x27;&#123;&#123; template &quot;wechat.default.message&quot; . &#125;&#125;&#x27;</span><br><span class=\"line\">    to_party: &#x27;2&#x27;</span><br><span class=\"line\">    agent_id: &#x27;1000004&#x27;</span><br><span class=\"line\">    to_user : &quot;@all&quot;</span><br><span class=\"line\">    api_secret: &#x27;NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"告警模板\">告警模板</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; define &quot;wechat.default.message&quot; &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- range $index, $alert := .Alerts -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if eq $index 0 &#125;&#125;</span><br><span class=\"line\">=========测试环境监控报警 =========</span><br><span class=\"line\">告警状态：&#123;&#123;   .Status &#125;&#125;</span><br><span class=\"line\">告警级别：&#123;&#123; .Labels.severity &#125;&#125;</span><br><span class=\"line\">告警类型：&#123;&#123; $alert.Labels.alertname &#125;&#125;</span><br><span class=\"line\">故障主机: &#123;&#123; $alert.Labels.instance &#125;&#125; &#123;&#123; $alert.Labels.pod &#125;&#125;</span><br><span class=\"line\">告警主题: &#123;&#123; $alert.Annotations.summary &#125;&#125;</span><br><span class=\"line\">告警详情: &#123;&#123; $alert.Annotations.message &#125;&#125;&#123;&#123; $alert.Annotations.description&#125;&#125;;</span><br><span class=\"line\">触发阀值：&#123;&#123; .Annotations.value &#125;&#125;</span><br><span class=\"line\">故障时间: &#123;&#123; ($alert.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class=\"line\">========= = end =  =========</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- range $index, $alert := .Alerts -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if eq $index 0 &#125;&#125;</span><br><span class=\"line\">=========测试环境异常恢复 =========</span><br><span class=\"line\">告警类型：&#123;&#123; .Labels.alertname &#125;&#125;</span><br><span class=\"line\">告警状态：&#123;&#123;   .Status &#125;&#125;</span><br><span class=\"line\">告警主题: &#123;&#123; $alert.Annotations.summary &#125;&#125;</span><br><span class=\"line\">告警详情: &#123;&#123; $alert.Annotations.message &#125;&#125;&#123;&#123; $alert.Annotations.description&#125;&#125;;</span><br><span class=\"line\">故障时间: &#123;&#123; ($alert.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class=\"line\">恢复时间: &#123;&#123; ($alert.EndsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if gt (len $alert.Labels.instance) 0 &#125;&#125;</span><br><span class=\"line\">实例信息: &#123;&#123; $alert.Labels.instance &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">========= = end =  =========</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","excerpt":"","more":"<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">创建alertmanager配置文件/docker_data/alertmanager/config/alertmanager.yml</span></span><br><span class=\"line\"></span><br><span class=\"line\">docker run --net host \\</span><br><span class=\"line\"> -v /docker_data/alertmanager:/etc/alertmanager \\</span><br><span class=\"line\"> --name prod_alertmanager_main_01 --restart always -d prom/alertmanager</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件\">配置文件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">global:</span><br><span class=\"line\">  resolve_timeout: 1m</span><br><span class=\"line\">  wechat_api_url: &#x27;https://qyapi.weixin.qq.com/cgi-bin/&#x27;</span><br><span class=\"line\">  wechat_api_corp_id: &#x27;ww68b18e2e16395ab3&#x27;</span><br><span class=\"line\">  wechat_api_secret: &#x27;NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">templates:</span><br><span class=\"line\">  - &#x27;/etc/alertmanager/template/*.tmpl&#x27;</span><br><span class=\"line\">route:</span><br><span class=\"line\">  receiver: &#x27;wechat&#x27;</span><br><span class=\"line\">  group_by: [&#x27;env&#x27;,&#x27;instance&#x27;,&#x27;type&#x27;,&#x27;group&#x27;,&#x27;job&#x27;,&#x27;alertname&#x27;]</span><br><span class=\"line\">  group_wait: 10s</span><br><span class=\"line\">  group_interval: 5s</span><br><span class=\"line\">  repeat_interval: 1h</span><br><span class=\"line\"></span><br><span class=\"line\">receivers:</span><br><span class=\"line\">- name: &#x27;wechat&#x27;</span><br><span class=\"line\">  wechat_configs:</span><br><span class=\"line\">  - send_resolved: true</span><br><span class=\"line\">    message: &#x27;&#123;&#123; template &quot;wechat.default.message&quot; . &#125;&#125;&#x27;</span><br><span class=\"line\">    to_party: &#x27;2&#x27;</span><br><span class=\"line\">    agent_id: &#x27;1000004&#x27;</span><br><span class=\"line\">    to_user : &quot;@all&quot;</span><br><span class=\"line\">    api_secret: &#x27;NBR3ko0bdCDqtEpUpr94ag2HhV9AkEwpFXJXE6h38ao&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"告警模板\">告警模板</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; define &quot;wechat.default.message&quot; &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- range $index, $alert := .Alerts -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if eq $index 0 &#125;&#125;</span><br><span class=\"line\">=========测试环境监控报警 =========</span><br><span class=\"line\">告警状态：&#123;&#123;   .Status &#125;&#125;</span><br><span class=\"line\">告警级别：&#123;&#123; .Labels.severity &#125;&#125;</span><br><span class=\"line\">告警类型：&#123;&#123; $alert.Labels.alertname &#125;&#125;</span><br><span class=\"line\">故障主机: &#123;&#123; $alert.Labels.instance &#125;&#125; &#123;&#123; $alert.Labels.pod &#125;&#125;</span><br><span class=\"line\">告警主题: &#123;&#123; $alert.Annotations.summary &#125;&#125;</span><br><span class=\"line\">告警详情: &#123;&#123; $alert.Annotations.message &#125;&#125;&#123;&#123; $alert.Annotations.description&#125;&#125;;</span><br><span class=\"line\">触发阀值：&#123;&#123; .Annotations.value &#125;&#125;</span><br><span class=\"line\">故障时间: &#123;&#123; ($alert.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class=\"line\">========= = end =  =========</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- range $index, $alert := .Alerts -&#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if eq $index 0 &#125;&#125;</span><br><span class=\"line\">=========测试环境异常恢复 =========</span><br><span class=\"line\">告警类型：&#123;&#123; .Labels.alertname &#125;&#125;</span><br><span class=\"line\">告警状态：&#123;&#123;   .Status &#125;&#125;</span><br><span class=\"line\">告警主题: &#123;&#123; $alert.Annotations.summary &#125;&#125;</span><br><span class=\"line\">告警详情: &#123;&#123; $alert.Annotations.message &#125;&#125;&#123;&#123; $alert.Annotations.description&#125;&#125;;</span><br><span class=\"line\">故障时间: &#123;&#123; ($alert.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class=\"line\">恢复时间: &#123;&#123; ($alert.EndsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- if gt (len $alert.Labels.instance) 0 &#125;&#125;</span><br><span class=\"line\">实例信息: &#123;&#123; $alert.Labels.instance &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">========= = end =  =========</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\">&#123;&#123;- end &#125;&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"_content":"\n### 前置准备\nhttps://prometheus.io/docs/instrumenting/exporters/\n\n```shell\nmkdir -p /docker_data/exporter/{node_exporter,mysql,redis,kafka}\n```\n\n### Linux探针\n```shell\nnode_exporter-1.5.0.linux-amd64.tar.gz上传至/docker_data/exporter/node_exporter/\ncd /docker_data/exporter/node_exporter/\ntar -xvf node_exporter-1.5.0.linux-amd64.tar.gz -C ./\n\ncat > /etc/systemd/system/node_exporter.service <<EOF\n[Unit]\nDescription=node_exporeter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/node_exporter/node_exporter-1.5.0.linux-amd64/node_exporter\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\n\nsystemctl daemon-reload && systemctl start node_exporter && systemctl enable node_exporter && systemctl status node_exporter\n```\n\n验证探针\nhttp://idszt-node001:9100/metrics\n\n\n### MySQL探针\n```shell\ncd /docker_data/exporter/mysql/\ntar -xvf mysqld_exporter-0.15.0-rc.0.linux-386.tar.gz -C ./\n```\n创建my.cnf文件(/docker_data/exporter/mysql/)\n```shell\n[client]\nuser=root\npassword=mysql@SZT2021\n```\n\n\n```shell\ncat > /etc/systemd/system/mysqld_exporter.service <<EOF\n[Unit]\nDescription=mysqld_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/mysqld_exporter  --config.my-cnf=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/my.cnf\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\n\n\nsystemctl daemon-reload && systemctl start mysqld_exporter && systemctl enable mysqld_exporter && systemctl status mysqld_exporter\n\n\n```\n验证链接：http://192.168.10.185:9104/metrics\n\n\n\n\n\n### Redis探针\nhttps://github.com/oliver006/redis_exporter/releases/tag/v1.51.0\n压缩包上传至/docker_data/exporter/redis/\ncd /docker_data/exporter/redis/\ntar -xvf redis_exporter-v1.51.0.linux-amd64.tar.gz  -C ./\n\n```shell\ncat > /etc/systemd/system/redis_exporter.service <<EOF\n[Unit]\nDescription=redis_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/data/exporter/redis_exporter-v1.51.0.linux-amd64/redis_exporter -redis.addr localhost:16379 -redis.password redis#SZT7658\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload && systemctl start redis_exporter && systemctl enable redis_exporter && systemctl status redis_exporter\nsystemctl daemon-reload && systemctl restart redis_exporter\n\n```\n\n\n### Kafka探针\nmkdir -p /docker_data/exporter/kafka\ncd /docker_data/exporter/kafka\n\ntar -xvf kafka_exporter-1.7.0.linux-amd64.tar.gz  -C ./\ncd kafka_exporter-1.7.0.linux-amd64/\n./kafka_exporter --kafka.server=127.0.0.1:9092\n```shell\ncat > /etc/systemd/system/kafka_exporter.service <<EOF\n[Unit]\nDescription=kafka_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/kafka/kafka_exporter-1.7.0.linux-amd64/kafka_exporter  --kafka.server=127.0.0.1:9092\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload && systemctl start kafka_exporter && systemctl enable kafka_exporter && systemctl status kafka_exporter\n\n\n```\n\n### Zookeeper探针(放弃内置探针，采用--)\nzookeeper内置探针，只需将以下加入配置文件。\n配置文件位置：/docker_data/zookeeper/conf/\n\n```shell\nmetricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider\nmetricsProvider.httpPort=7000\nmetricsProvider.exportJvmInfo=true\n\n```\ndocker restart prod_zookeeper_cluster_01\ndocker logs prod_zookeeper_cluster_01\n\n\n# 文件已下发，执行\nsystemctl daemon-reload && systemctl start zookeeper_exporter  && systemctl status zookeeper_exporter && systemctl enable zookeeper_exporter\n\n\n### Elasticsearch\n```shell\nhttps://github.com/prometheus-community/elasticsearch_exporter\n\nmkdir -p /docker_data/exporter/elasticsearch/ && cd  /docker_data/exporter/elasticsearch/\ntar -xvf elasticsearch_exporter-1.5.0.linux-amd64.tar.gz  -C ./\n\n密码含特殊字符，需转义%40%23\n\n```shell\ncat > /etc/systemd/system/elasticsearch_exporter.service <<EOF\n[Unit]\nDescription=elasticsearch_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/elasticsearch/elasticsearch_exporter-1.5.0.linux-amd64/elasticsearch_exporter --es.uri http://elastic:szt%40%23es@127.0.0.1:9200 --es.all\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload && systemctl start elasticsearch_exporter && systemctl enable elasticsearch_exporter && systemctl status elasticsearch_exporter\n```\n验证链接：http://192.168.10.181:9114/metrics\n\n\n\n### Minio探针（内置）\n参考官网：https://min.io/docs/minio/linux/operations/monitoring/collect-minio-metrics-using-prometheus.html?ref=docs-redirect\n\n参数`MINIO_PROMETHEUS_AUTH_TYPE=public`公开\n```shell\ndocker run -d --name prod_minio_cluster_01 \\\n--restart=always --net=host \\\n-e \"MINIO_ROOT_USER=minioadmin\" \\\n-e \"MINIO_ROOT_PASSWORD=minioadmin\" \\\n-e \"MINIO_PROMETHEUS_AUTH_TYPE=public\" \\\n-v /docker_data/minio/data:/data \\\n-v /docker_data/minio/config:/root/.minio \\\n minio/minio:RELEASE.2023-05-04T21-44-30Z server \\\n --address 192.168.10.181:9000 http://192.168.10.18{1...6}/data\n```\n\n\n### JMX探针\nhttps://github.com/prometheus/jmx_exporter\n\n\n\n### Nacos探针（内置）\n\n添加配置\n```shell\ndocker exec -it prod_nacos_cluster_01 /bin/bash\nvi conf/application.properties\n\nmanagement.endpoints.web.exposure.include=*\n\ndocker restart prod_nacos_cluster_01\n```","source":"_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Exporter.md","raw":"\n### 前置准备\nhttps://prometheus.io/docs/instrumenting/exporters/\n\n```shell\nmkdir -p /docker_data/exporter/{node_exporter,mysql,redis,kafka}\n```\n\n### Linux探针\n```shell\nnode_exporter-1.5.0.linux-amd64.tar.gz上传至/docker_data/exporter/node_exporter/\ncd /docker_data/exporter/node_exporter/\ntar -xvf node_exporter-1.5.0.linux-amd64.tar.gz -C ./\n\ncat > /etc/systemd/system/node_exporter.service <<EOF\n[Unit]\nDescription=node_exporeter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/node_exporter/node_exporter-1.5.0.linux-amd64/node_exporter\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\n\nsystemctl daemon-reload && systemctl start node_exporter && systemctl enable node_exporter && systemctl status node_exporter\n```\n\n验证探针\nhttp://idszt-node001:9100/metrics\n\n\n### MySQL探针\n```shell\ncd /docker_data/exporter/mysql/\ntar -xvf mysqld_exporter-0.15.0-rc.0.linux-386.tar.gz -C ./\n```\n创建my.cnf文件(/docker_data/exporter/mysql/)\n```shell\n[client]\nuser=root\npassword=mysql@SZT2021\n```\n\n\n```shell\ncat > /etc/systemd/system/mysqld_exporter.service <<EOF\n[Unit]\nDescription=mysqld_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/mysqld_exporter  --config.my-cnf=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/my.cnf\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\n\n\nsystemctl daemon-reload && systemctl start mysqld_exporter && systemctl enable mysqld_exporter && systemctl status mysqld_exporter\n\n\n```\n验证链接：http://192.168.10.185:9104/metrics\n\n\n\n\n\n### Redis探针\nhttps://github.com/oliver006/redis_exporter/releases/tag/v1.51.0\n压缩包上传至/docker_data/exporter/redis/\ncd /docker_data/exporter/redis/\ntar -xvf redis_exporter-v1.51.0.linux-amd64.tar.gz  -C ./\n\n```shell\ncat > /etc/systemd/system/redis_exporter.service <<EOF\n[Unit]\nDescription=redis_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/data/exporter/redis_exporter-v1.51.0.linux-amd64/redis_exporter -redis.addr localhost:16379 -redis.password redis#SZT7658\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload && systemctl start redis_exporter && systemctl enable redis_exporter && systemctl status redis_exporter\nsystemctl daemon-reload && systemctl restart redis_exporter\n\n```\n\n\n### Kafka探针\nmkdir -p /docker_data/exporter/kafka\ncd /docker_data/exporter/kafka\n\ntar -xvf kafka_exporter-1.7.0.linux-amd64.tar.gz  -C ./\ncd kafka_exporter-1.7.0.linux-amd64/\n./kafka_exporter --kafka.server=127.0.0.1:9092\n```shell\ncat > /etc/systemd/system/kafka_exporter.service <<EOF\n[Unit]\nDescription=kafka_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/kafka/kafka_exporter-1.7.0.linux-amd64/kafka_exporter  --kafka.server=127.0.0.1:9092\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload && systemctl start kafka_exporter && systemctl enable kafka_exporter && systemctl status kafka_exporter\n\n\n```\n\n### Zookeeper探针(放弃内置探针，采用--)\nzookeeper内置探针，只需将以下加入配置文件。\n配置文件位置：/docker_data/zookeeper/conf/\n\n```shell\nmetricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider\nmetricsProvider.httpPort=7000\nmetricsProvider.exportJvmInfo=true\n\n```\ndocker restart prod_zookeeper_cluster_01\ndocker logs prod_zookeeper_cluster_01\n\n\n# 文件已下发，执行\nsystemctl daemon-reload && systemctl start zookeeper_exporter  && systemctl status zookeeper_exporter && systemctl enable zookeeper_exporter\n\n\n### Elasticsearch\n```shell\nhttps://github.com/prometheus-community/elasticsearch_exporter\n\nmkdir -p /docker_data/exporter/elasticsearch/ && cd  /docker_data/exporter/elasticsearch/\ntar -xvf elasticsearch_exporter-1.5.0.linux-amd64.tar.gz  -C ./\n\n密码含特殊字符，需转义%40%23\n\n```shell\ncat > /etc/systemd/system/elasticsearch_exporter.service <<EOF\n[Unit]\nDescription=elasticsearch_exporter\nAfter=network.target\n[Service]\nType=simple\nExecStart=/docker_data/exporter/elasticsearch/elasticsearch_exporter-1.5.0.linux-amd64/elasticsearch_exporter --es.uri http://elastic:szt%40%23es@127.0.0.1:9200 --es.all\nRestart=on-failure\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsystemctl daemon-reload && systemctl start elasticsearch_exporter && systemctl enable elasticsearch_exporter && systemctl status elasticsearch_exporter\n```\n验证链接：http://192.168.10.181:9114/metrics\n\n\n\n### Minio探针（内置）\n参考官网：https://min.io/docs/minio/linux/operations/monitoring/collect-minio-metrics-using-prometheus.html?ref=docs-redirect\n\n参数`MINIO_PROMETHEUS_AUTH_TYPE=public`公开\n```shell\ndocker run -d --name prod_minio_cluster_01 \\\n--restart=always --net=host \\\n-e \"MINIO_ROOT_USER=minioadmin\" \\\n-e \"MINIO_ROOT_PASSWORD=minioadmin\" \\\n-e \"MINIO_PROMETHEUS_AUTH_TYPE=public\" \\\n-v /docker_data/minio/data:/data \\\n-v /docker_data/minio/config:/root/.minio \\\n minio/minio:RELEASE.2023-05-04T21-44-30Z server \\\n --address 192.168.10.181:9000 http://192.168.10.18{1...6}/data\n```\n\n\n### JMX探针\nhttps://github.com/prometheus/jmx_exporter\n\n\n\n### Nacos探针（内置）\n\n添加配置\n```shell\ndocker exec -it prod_nacos_cluster_01 /bin/bash\nvi conf/application.properties\n\nmanagement.endpoints.web.exposure.include=*\n\ndocker restart prod_nacos_cluster_01\n```","slug":"07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Exporter","published":1,"date":"2023-09-01T13:06:38.010Z","updated":"2023-08-31T09:40:58.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2y002hzb8a2sagfn68","content":"<h3 id=\"前置准备\">前置准备</h3>\n<p><a href=\"https://prometheus.io/docs/instrumenting/exporters/\">https://prometheus.io/docs/instrumenting/exporters/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/exporter/&#123;node_exporter,mysql,redis,kafka&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Linux探针\">Linux探针</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_exporter-1.5.0.linux-amd64.tar.gz上传至/docker_data/exporter/node_exporter/</span><br><span class=\"line\">cd /docker_data/exporter/node_exporter/</span><br><span class=\"line\">tar -xvf node_exporter-1.5.0.linux-amd64.tar.gz -C ./</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt; /etc/systemd/system/node_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=node_exporeter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/node_exporter/node_exporter-1.5.0.linux-amd64/node_exporter</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start node_exporter &amp;&amp; systemctl enable node_exporter &amp;&amp; systemctl status node_exporter</span><br></pre></td></tr></table></figure>\n<p>验证探针<br>\n<a href=\"http://idszt-node001:9100/metrics\">http://idszt-node001:9100/metrics</a></p>\n<h3 id=\"MySQL探针\">MySQL探针</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /docker_data/exporter/mysql/</span><br><span class=\"line\">tar -xvf mysqld_exporter-0.15.0-rc.0.linux-386.tar.gz -C ./</span><br></pre></td></tr></table></figure>\n<p>创建my.cnf文件(/docker_data/exporter/mysql/)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=mysql@SZT2021</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/systemd/system/mysqld_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=mysqld_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/mysqld_exporter  --config.my-cnf=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/my.cnf</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start mysqld_exporter &amp;&amp; systemctl enable mysqld_exporter &amp;&amp; systemctl status mysqld_exporter</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>验证链接：<a href=\"http://192.168.10.185:9104/metrics\">http://192.168.10.185:9104/metrics</a></p>\n<h3 id=\"Redis探针\">Redis探针</h3>\n<p><a href=\"https://github.com/oliver006/redis_exporter/releases/tag/v1.51.0\">https://github.com/oliver006/redis_exporter/releases/tag/v1.51.0</a><br>\n压缩包上传至/docker_data/exporter/redis/<br>\ncd /docker_data/exporter/redis/<br>\ntar -xvf redis_exporter-v1.51.0.linux-amd64.tar.gz  -C ./</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/systemd/system/redis_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=redis_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/data/exporter/redis_exporter-v1.51.0.linux-amd64/redis_exporter -redis.addr localhost:16379 -redis.password redis#SZT7658</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start redis_exporter &amp;&amp; systemctl enable redis_exporter &amp;&amp; systemctl status redis_exporter</span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl restart redis_exporter</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Kafka探针\">Kafka探针</h3>\n<p>mkdir -p /docker_data/exporter/kafka<br>\ncd /docker_data/exporter/kafka</p>\n<p>tar -xvf kafka_exporter-1.7.0.linux-amd64.tar.gz  -C ./<br>\ncd kafka_exporter-1.7.0.linux-amd64/<br>\n./kafka_exporter --kafka.server=127.0.0.1:9092</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/systemd/system/kafka_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=kafka_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/kafka/kafka_exporter-1.7.0.linux-amd64/kafka_exporter  --kafka.server=127.0.0.1:9092</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start kafka_exporter &amp;&amp; systemctl enable kafka_exporter &amp;&amp; systemctl status kafka_exporter</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Zookeeper探针-放弃内置探针，采用–\">Zookeeper探针(放弃内置探针，采用–)</h3>\n<p>zookeeper内置探针，只需将以下加入配置文件。<br>\n配置文件位置：/docker_data/zookeeper/conf/</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class=\"line\">metricsProvider.httpPort=7000</span><br><span class=\"line\">metricsProvider.exportJvmInfo=true</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>docker restart prod_zookeeper_cluster_01<br>\ndocker logs prod_zookeeper_cluster_01</p>\n<h1>文件已下发，执行</h1>\n<p>systemctl daemon-reload &amp;&amp; systemctl start zookeeper_exporter  &amp;&amp; systemctl status zookeeper_exporter &amp;&amp; systemctl enable zookeeper_exporter</p>\n<h3 id=\"Elasticsearch\">Elasticsearch</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/prometheus-community/elasticsearch_exporter</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p /docker_data/exporter/elasticsearch/ &amp;&amp; cd  /docker_data/exporter/elasticsearch/</span><br><span class=\"line\">tar -xvf elasticsearch_exporter-1.5.0.linux-amd64.tar.gz  -C ./</span><br><span class=\"line\"></span><br><span class=\"line\">密码含特殊字符，需转义%40%23</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">cat &gt; /etc/systemd/system/elasticsearch_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=elasticsearch_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/elasticsearch/elasticsearch_exporter-1.5.0.linux-amd64/elasticsearch_exporter --es.uri http://elastic:szt%40%23es@127.0.0.1:9200 --es.all</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start elasticsearch_exporter &amp;&amp; systemctl enable elasticsearch_exporter &amp;&amp; systemctl status elasticsearch_exporter</span><br></pre></td></tr></table></figure>\n<p>验证链接：<a href=\"http://192.168.10.181:9114/metrics\">http://192.168.10.181:9114/metrics</a></p>\n<h3 id=\"Minio探针（内置）\">Minio探针（内置）</h3>\n<p>参考官网：<a href=\"https://min.io/docs/minio/linux/operations/monitoring/collect-minio-metrics-using-prometheus.html?ref=docs-redirect\">https://min.io/docs/minio/linux/operations/monitoring/collect-minio-metrics-using-prometheus.html?ref=docs-redirect</a></p>\n<p>参数<code>MINIO_PROMETHEUS_AUTH_TYPE=public</code>公开</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name prod_minio_cluster_01 \\</span><br><span class=\"line\">--restart=always --net=host \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_USER=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_PASSWORD=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_PROMETHEUS_AUTH_TYPE=public&quot; \\</span><br><span class=\"line\">-v /docker_data/minio/data:/data \\</span><br><span class=\"line\">-v /docker_data/minio/config:/root/.minio \\</span><br><span class=\"line\"> minio/minio:RELEASE.2023-05-04T21-44-30Z server \\</span><br><span class=\"line\"> --address 192.168.10.181:9000 http://192.168.10.18&#123;1...6&#125;/data</span><br></pre></td></tr></table></figure>\n<h3 id=\"JMX探针\">JMX探针</h3>\n<p><a href=\"https://github.com/prometheus/jmx_exporter\">https://github.com/prometheus/jmx_exporter</a></p>\n<h3 id=\"Nacos探针（内置）\">Nacos探针（内置）</h3>\n<p>添加配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it prod_nacos_cluster_01 /bin/bash</span><br><span class=\"line\">vi conf/application.properties</span><br><span class=\"line\"></span><br><span class=\"line\">management.endpoints.web.exposure.include=*</span><br><span class=\"line\"></span><br><span class=\"line\">docker restart prod_nacos_cluster_01</span><br></pre></td></tr></table></figure>","excerpt":"","more":"<h3 id=\"前置准备\">前置准备</h3>\n<p><a href=\"https://prometheus.io/docs/instrumenting/exporters/\">https://prometheus.io/docs/instrumenting/exporters/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/exporter/&#123;node_exporter,mysql,redis,kafka&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Linux探针\">Linux探针</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node_exporter-1.5.0.linux-amd64.tar.gz上传至/docker_data/exporter/node_exporter/</span><br><span class=\"line\">cd /docker_data/exporter/node_exporter/</span><br><span class=\"line\">tar -xvf node_exporter-1.5.0.linux-amd64.tar.gz -C ./</span><br><span class=\"line\"></span><br><span class=\"line\">cat &gt; /etc/systemd/system/node_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=node_exporeter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/node_exporter/node_exporter-1.5.0.linux-amd64/node_exporter</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start node_exporter &amp;&amp; systemctl enable node_exporter &amp;&amp; systemctl status node_exporter</span><br></pre></td></tr></table></figure>\n<p>验证探针<br>\n<a href=\"http://idszt-node001:9100/metrics\">http://idszt-node001:9100/metrics</a></p>\n<h3 id=\"MySQL探针\">MySQL探针</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /docker_data/exporter/mysql/</span><br><span class=\"line\">tar -xvf mysqld_exporter-0.15.0-rc.0.linux-386.tar.gz -C ./</span><br></pre></td></tr></table></figure>\n<p>创建my.cnf文件(/docker_data/exporter/mysql/)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[client]</span><br><span class=\"line\">user=root</span><br><span class=\"line\">password=mysql@SZT2021</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/systemd/system/mysqld_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=mysqld_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/mysqld_exporter  --config.my-cnf=/docker_data/exporter/mysql/mysqld_exporter-0.15.0-rc.0.linux-386/my.cnf</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start mysqld_exporter &amp;&amp; systemctl enable mysqld_exporter &amp;&amp; systemctl status mysqld_exporter</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>验证链接：<a href=\"http://192.168.10.185:9104/metrics\">http://192.168.10.185:9104/metrics</a></p>\n<h3 id=\"Redis探针\">Redis探针</h3>\n<p><a href=\"https://github.com/oliver006/redis_exporter/releases/tag/v1.51.0\">https://github.com/oliver006/redis_exporter/releases/tag/v1.51.0</a><br>\n压缩包上传至/docker_data/exporter/redis/<br>\ncd /docker_data/exporter/redis/<br>\ntar -xvf redis_exporter-v1.51.0.linux-amd64.tar.gz  -C ./</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/systemd/system/redis_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=redis_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/data/exporter/redis_exporter-v1.51.0.linux-amd64/redis_exporter -redis.addr localhost:16379 -redis.password redis#SZT7658</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start redis_exporter &amp;&amp; systemctl enable redis_exporter &amp;&amp; systemctl status redis_exporter</span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl restart redis_exporter</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Kafka探针\">Kafka探针</h3>\n<p>mkdir -p /docker_data/exporter/kafka<br>\ncd /docker_data/exporter/kafka</p>\n<p>tar -xvf kafka_exporter-1.7.0.linux-amd64.tar.gz  -C ./<br>\ncd kafka_exporter-1.7.0.linux-amd64/<br>\n./kafka_exporter --kafka.server=127.0.0.1:9092</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/systemd/system/kafka_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=kafka_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/kafka/kafka_exporter-1.7.0.linux-amd64/kafka_exporter  --kafka.server=127.0.0.1:9092</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start kafka_exporter &amp;&amp; systemctl enable kafka_exporter &amp;&amp; systemctl status kafka_exporter</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"Zookeeper探针-放弃内置探针，采用–\">Zookeeper探针(放弃内置探针，采用–)</h3>\n<p>zookeeper内置探针，只需将以下加入配置文件。<br>\n配置文件位置：/docker_data/zookeeper/conf/</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class=\"line\">metricsProvider.httpPort=7000</span><br><span class=\"line\">metricsProvider.exportJvmInfo=true</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>docker restart prod_zookeeper_cluster_01<br>\ndocker logs prod_zookeeper_cluster_01</p>\n<h1>文件已下发，执行</h1>\n<p>systemctl daemon-reload &amp;&amp; systemctl start zookeeper_exporter  &amp;&amp; systemctl status zookeeper_exporter &amp;&amp; systemctl enable zookeeper_exporter</p>\n<h3 id=\"Elasticsearch\">Elasticsearch</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/prometheus-community/elasticsearch_exporter</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p /docker_data/exporter/elasticsearch/ &amp;&amp; cd  /docker_data/exporter/elasticsearch/</span><br><span class=\"line\">tar -xvf elasticsearch_exporter-1.5.0.linux-amd64.tar.gz  -C ./</span><br><span class=\"line\"></span><br><span class=\"line\">密码含特殊字符，需转义%40%23</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">cat &gt; /etc/systemd/system/elasticsearch_exporter.service &lt;&lt;EOF</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=elasticsearch_exporter</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=simple</span><br><span class=\"line\">ExecStart=/docker_data/exporter/elasticsearch/elasticsearch_exporter-1.5.0.linux-amd64/elasticsearch_exporter --es.uri http://elastic:szt%40%23es@127.0.0.1:9200 --es.all</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl daemon-reload &amp;&amp; systemctl start elasticsearch_exporter &amp;&amp; systemctl enable elasticsearch_exporter &amp;&amp; systemctl status elasticsearch_exporter</span><br></pre></td></tr></table></figure>\n<p>验证链接：<a href=\"http://192.168.10.181:9114/metrics\">http://192.168.10.181:9114/metrics</a></p>\n<h3 id=\"Minio探针（内置）\">Minio探针（内置）</h3>\n<p>参考官网：<a href=\"https://min.io/docs/minio/linux/operations/monitoring/collect-minio-metrics-using-prometheus.html?ref=docs-redirect\">https://min.io/docs/minio/linux/operations/monitoring/collect-minio-metrics-using-prometheus.html?ref=docs-redirect</a></p>\n<p>参数<code>MINIO_PROMETHEUS_AUTH_TYPE=public</code>公开</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name prod_minio_cluster_01 \\</span><br><span class=\"line\">--restart=always --net=host \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_USER=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_ROOT_PASSWORD=minioadmin&quot; \\</span><br><span class=\"line\">-e &quot;MINIO_PROMETHEUS_AUTH_TYPE=public&quot; \\</span><br><span class=\"line\">-v /docker_data/minio/data:/data \\</span><br><span class=\"line\">-v /docker_data/minio/config:/root/.minio \\</span><br><span class=\"line\"> minio/minio:RELEASE.2023-05-04T21-44-30Z server \\</span><br><span class=\"line\"> --address 192.168.10.181:9000 http://192.168.10.18&#123;1...6&#125;/data</span><br></pre></td></tr></table></figure>\n<h3 id=\"JMX探针\">JMX探针</h3>\n<p><a href=\"https://github.com/prometheus/jmx_exporter\">https://github.com/prometheus/jmx_exporter</a></p>\n<h3 id=\"Nacos探针（内置）\">Nacos探针（内置）</h3>\n<p>添加配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it prod_nacos_cluster_01 /bin/bash</span><br><span class=\"line\">vi conf/application.properties</span><br><span class=\"line\"></span><br><span class=\"line\">management.endpoints.web.exposure.include=*</span><br><span class=\"line\"></span><br><span class=\"line\">docker restart prod_nacos_cluster_01</span><br></pre></td></tr></table></figure>"},{"_content":"\n\n\n{location=\"$location\"} \n\n(1 - avg(rate(node_cpu_seconds_total{origin_prometheus=~\"$origin_prometheus\",job=~\"$job\",mode=\"idle\"}[$interval])) by (instance)) * 100","source":"_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Grafana.md","raw":"\n\n\n{location=\"$location\"} \n\n(1 - avg(rate(node_cpu_seconds_total{origin_prometheus=~\"$origin_prometheus\",job=~\"$job\",mode=\"idle\"}[$interval])) by (instance)) * 100","slug":"07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Grafana","published":1,"date":"2023-09-01T13:06:38.020Z","updated":"2023-08-15T11:24:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2z002izb8a7jpz2hvj","content":"<p>{location=“$location”}</p>\n<p>(1 - avg(rate(node_cpu_seconds_total{origin_prometheus=~“$origin_prometheus”,job=~“$job”,mode=“idle”}[$interval])) by (instance)) * 100</p>\n","excerpt":"","more":"<p>{location=“$location”}</p>\n<p>(1 - avg(rate(node_cpu_seconds_total{origin_prometheus=~“$origin_prometheus”,job=~“$job”,mode=“idle”}[$interval])) by (instance)) * 100</p>\n"},{"_content":"\n### 安装prometheus\n创建配置目录\n```\nmkdir -p /docker_data/prometheus/\n# 创建/docker_data/prometheus/prometheus.yml和rule.yml文件\n```\n\n运行\ndocker stop prod_monitor_prometheus_02 && docker rm prod_monitor_prometheus_02\n- `--web.enable-lifecycle`热加载配置\n\n```shell\n# 配置路径：/root/docker-prometheus/\nchmod 777 /docker_data/prometheus\n\n\ndocker run --name prod_monitor_prometheus_02 --privileged=true -d -p 9090:9090 -v /docker_data/prometheus/:/prometheus/ prom/prometheus --web.enable-lifecycle --storage.tsdb.retention=180d\n```\n\n验证链接：http://192.168.10.188:9090/targets?search=\n\n\n\n\n\n### 安装grafana\nhttps://grafana.com/docs/versions/?project=/docs/grafana/\n\nmkdir -p /docker_data/grafana/plugins\nchmod 472 /docker_data/grafana\ndocker run --name prod_grafana_main_01 -d -p 3000:3000 --web.enable-lifecycle --privileged=true -v /docker_data/grafana:/var/lib/grafana  grafana/grafana\n\n\"GF_PATHS_CONFIG=/etc/grafana/grafana.ini\",\n\"GF_PATHS_DATA=/var/lib/grafana\",\n\"GF_PATHS_HOME=/usr/share/grafana\",\n\"GF_PATHS_LOGS=/var/log/grafana\",\n\"GF_PATHS_PLUGINS=/var/lib/grafana/plugins\",\n\"GF_PATHS_PROVISIONING=/etc/grafana/provisioning\"","source":"_posts/07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Prometheus.md","raw":"\n### 安装prometheus\n创建配置目录\n```\nmkdir -p /docker_data/prometheus/\n# 创建/docker_data/prometheus/prometheus.yml和rule.yml文件\n```\n\n运行\ndocker stop prod_monitor_prometheus_02 && docker rm prod_monitor_prometheus_02\n- `--web.enable-lifecycle`热加载配置\n\n```shell\n# 配置路径：/root/docker-prometheus/\nchmod 777 /docker_data/prometheus\n\n\ndocker run --name prod_monitor_prometheus_02 --privileged=true -d -p 9090:9090 -v /docker_data/prometheus/:/prometheus/ prom/prometheus --web.enable-lifecycle --storage.tsdb.retention=180d\n```\n\n验证链接：http://192.168.10.188:9090/targets?search=\n\n\n\n\n\n### 安装grafana\nhttps://grafana.com/docs/versions/?project=/docs/grafana/\n\nmkdir -p /docker_data/grafana/plugins\nchmod 472 /docker_data/grafana\ndocker run --name prod_grafana_main_01 -d -p 3000:3000 --web.enable-lifecycle --privileged=true -v /docker_data/grafana:/var/lib/grafana  grafana/grafana\n\n\"GF_PATHS_CONFIG=/etc/grafana/grafana.ini\",\n\"GF_PATHS_DATA=/var/lib/grafana\",\n\"GF_PATHS_HOME=/usr/share/grafana\",\n\"GF_PATHS_LOGS=/var/log/grafana\",\n\"GF_PATHS_PLUGINS=/var/lib/grafana/plugins\",\n\"GF_PATHS_PROVISIONING=/etc/grafana/provisioning\"","slug":"07中间件/D.项目分类/2.战训-互联-监控系统/C.集群监控系统.Prometheus","published":1,"date":"2023-09-01T13:06:38.040Z","updated":"2023-07-23T12:55:28.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o2z002jzb8a93kgepzs","content":"<h3 id=\"安装prometheus\">安装prometheus</h3>\n<p>创建配置目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/prometheus/</span><br><span class=\"line\"># 创建/docker_data/prometheus/prometheus.yml和rule.yml文件</span><br></pre></td></tr></table></figure>\n<p>运行<br>\ndocker stop prod_monitor_prometheus_02 &amp;&amp; docker rm prod_monitor_prometheus_02</p>\n<ul>\n<li><code>--web.enable-lifecycle</code>热加载配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">配置路径：/root/docker-prometheus/</span></span><br><span class=\"line\">chmod 777 /docker_data/prometheus</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name prod_monitor_prometheus_02 --privileged=true -d -p 9090:9090 -v /docker_data/prometheus/:/prometheus/ prom/prometheus --web.enable-lifecycle --storage.tsdb.retention=180d</span><br></pre></td></tr></table></figure>\n<p>验证链接：<a href=\"http://192.168.10.188:9090/targets?search=\">http://192.168.10.188:9090/targets?search=</a></p>\n<h3 id=\"安装grafana\">安装grafana</h3>\n<p><a href=\"https://grafana.com/docs/versions/?project=/docs/grafana/\">https://grafana.com/docs/versions/?project=/docs/grafana/</a></p>\n<p>mkdir -p /docker_data/grafana/plugins<br>\nchmod 472 /docker_data/grafana<br>\ndocker run --name prod_grafana_main_01 -d -p 3000:3000 --web.enable-lifecycle --privileged=true -v /docker_data/grafana:/var/lib/grafana  grafana/grafana</p>\n<p>“GF_PATHS_CONFIG=/etc/grafana/grafana.ini”,<br>\n“GF_PATHS_DATA=/var/lib/grafana”,<br>\n“GF_PATHS_HOME=/usr/share/grafana”,<br>\n“GF_PATHS_LOGS=/var/log/grafana”,<br>\n“GF_PATHS_PLUGINS=/var/lib/grafana/plugins”,<br>\n“GF_PATHS_PROVISIONING=/etc/grafana/provisioning”</p>\n","excerpt":"","more":"<h3 id=\"安装prometheus\">安装prometheus</h3>\n<p>创建配置目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /docker_data/prometheus/</span><br><span class=\"line\"># 创建/docker_data/prometheus/prometheus.yml和rule.yml文件</span><br></pre></td></tr></table></figure>\n<p>运行<br>\ndocker stop prod_monitor_prometheus_02 &amp;&amp; docker rm prod_monitor_prometheus_02</p>\n<ul>\n<li><code>--web.enable-lifecycle</code>热加载配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">配置路径：/root/docker-prometheus/</span></span><br><span class=\"line\">chmod 777 /docker_data/prometheus</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker run --name prod_monitor_prometheus_02 --privileged=true -d -p 9090:9090 -v /docker_data/prometheus/:/prometheus/ prom/prometheus --web.enable-lifecycle --storage.tsdb.retention=180d</span><br></pre></td></tr></table></figure>\n<p>验证链接：<a href=\"http://192.168.10.188:9090/targets?search=\">http://192.168.10.188:9090/targets?search=</a></p>\n<h3 id=\"安装grafana\">安装grafana</h3>\n<p><a href=\"https://grafana.com/docs/versions/?project=/docs/grafana/\">https://grafana.com/docs/versions/?project=/docs/grafana/</a></p>\n<p>mkdir -p /docker_data/grafana/plugins<br>\nchmod 472 /docker_data/grafana<br>\ndocker run --name prod_grafana_main_01 -d -p 3000:3000 --web.enable-lifecycle --privileged=true -v /docker_data/grafana:/var/lib/grafana  grafana/grafana</p>\n<p>“GF_PATHS_CONFIG=/etc/grafana/grafana.ini”,<br>\n“GF_PATHS_DATA=/var/lib/grafana”,<br>\n“GF_PATHS_HOME=/usr/share/grafana”,<br>\n“GF_PATHS_LOGS=/var/log/grafana”,<br>\n“GF_PATHS_PLUGINS=/var/lib/grafana/plugins”,<br>\n“GF_PATHS_PROVISIONING=/etc/grafana/provisioning”</p>\n"},{"_content":"### 版本\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\n\n\ncd /data/program/docker_mirror\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd:3.0\n\ndocker load < mysql-8.0.32.tar\ndocker tag 412b8cc72e4a mysql:8.0.32\n\n\n\n### MySQL\ndocker内部\n配置：/etc/my.cnf\n数据：/var/lib/mysql\n日志：/var/log/mysql\n\n\n### vsftpd\ndocker exec -it vsftpd_prod_papsystem_vsftpd_01_1 /bin/bash\n日志：/var/log/vsftpd/\n文件：/home/vsftpd\n\n\n\n### nginx\ndocker exec -it nginx_prod_papsystem_nginx_01_1 /bin/bash\n\ndocker cp nginx_prod_papsystem_nginx_01_1:/etc/nginx /root/nginx\n\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.10.66\" port protocol=\"tcp\" port=\"443\" accept'\n\nsudo firewall-cmd --zone=public --permanent --add-port=80/tcp\nsudo firewall-cmd --zone=public --permanent --add-port=443/tcp\nsudo firewall-cmd --zone=public --permanent --add-port=444/tcp\nfirewall-cmd --reload\n\n\n\n\n\n","source":"_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.A总览.md","raw":"### 版本\ndocker pull fauria/vsftpd:latest\ndocker pull nginx:1.25\ndocker save 021283c8eb95 > /root/docker_image/nginx-1.25.tar\ndocker save 9bfb39139661 > /root/docker_image/vsftpd-3.0.tar\n\n\ncd /data/program/docker_mirror\ndocker load < nginx-1.25.tar\ndocker tag 021283c8eb95 nginx:1.25\n\ndocker load < vsftpd-3.0.tar\ndocker tag 9bfb39139661 fauria/vsftpd:3.0\n\ndocker load < mysql-8.0.32.tar\ndocker tag 412b8cc72e4a mysql:8.0.32\n\n\n\n### MySQL\ndocker内部\n配置：/etc/my.cnf\n数据：/var/lib/mysql\n日志：/var/log/mysql\n\n\n### vsftpd\ndocker exec -it vsftpd_prod_papsystem_vsftpd_01_1 /bin/bash\n日志：/var/log/vsftpd/\n文件：/home/vsftpd\n\n\n\n### nginx\ndocker exec -it nginx_prod_papsystem_nginx_01_1 /bin/bash\n\ndocker cp nginx_prod_papsystem_nginx_01_1:/etc/nginx /root/nginx\n\n\nfirewall-cmd --permanent --add-rich-rule='rule family=\"ipv4\" source address=\"192.168.10.66\" port protocol=\"tcp\" port=\"443\" accept'\n\nsudo firewall-cmd --zone=public --permanent --add-port=80/tcp\nsudo firewall-cmd --zone=public --permanent --add-port=443/tcp\nsudo firewall-cmd --zone=public --permanent --add-port=444/tcp\nfirewall-cmd --reload\n\n\n\n\n\n","slug":"07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.A总览","published":1,"date":"2023-09-01T13:06:38.090Z","updated":"2023-08-04T06:44:50.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o30002kzb8acckze0jt","content":"<h3 id=\"版本\">版本</h3>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25<br>\ndocker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar</p>\n<p>cd /data/program/docker_mirror<br>\ndocker load &lt; nginx-1.25.tar<br>\ndocker tag 021283c8eb95 nginx:1.25</p>\n<p>docker load &lt; vsftpd-3.0.tar<br>\ndocker tag 9bfb39139661 fauria/vsftpd:3.0</p>\n<p>docker load &lt; mysql-8.0.32.tar<br>\ndocker tag 412b8cc72e4a mysql:8.0.32</p>\n<h3 id=\"MySQL\">MySQL</h3>\n<p>docker内部<br>\n配置：/etc/my.cnf<br>\n数据：/var/lib/mysql<br>\n日志：/var/log/mysql</p>\n<h3 id=\"vsftpd\">vsftpd</h3>\n<p>docker exec -it vsftpd_prod_papsystem_vsftpd_01_1 /bin/bash<br>\n日志：/var/log/vsftpd/<br>\n文件：/home/vsftpd</p>\n<h3 id=\"nginx\">nginx</h3>\n<p>docker exec -it nginx_prod_papsystem_nginx_01_1 /bin/bash</p>\n<p>docker cp nginx_prod_papsystem_nginx_01_1:/etc/nginx /root/nginx</p>\n<p>firewall-cmd --permanent --add-rich-rule=‘rule family=“ipv4” source address=“192.168.10.66” port protocol=“tcp” port=“443” accept’</p>\n<p>sudo firewall-cmd --zone=public --permanent --add-port=80/tcp<br>\nsudo firewall-cmd --zone=public --permanent --add-port=443/tcp<br>\nsudo firewall-cmd --zone=public --permanent --add-port=444/tcp<br>\nfirewall-cmd --reload</p>\n","excerpt":"","more":"<h3 id=\"版本\">版本</h3>\n<p>docker pull fauria/vsftpd:latest<br>\ndocker pull nginx:1.25<br>\ndocker save 021283c8eb95 &gt; /root/docker_image/nginx-1.25.tar<br>\ndocker save 9bfb39139661 &gt; /root/docker_image/vsftpd-3.0.tar</p>\n<p>cd /data/program/docker_mirror<br>\ndocker load &lt; nginx-1.25.tar<br>\ndocker tag 021283c8eb95 nginx:1.25</p>\n<p>docker load &lt; vsftpd-3.0.tar<br>\ndocker tag 9bfb39139661 fauria/vsftpd:3.0</p>\n<p>docker load &lt; mysql-8.0.32.tar<br>\ndocker tag 412b8cc72e4a mysql:8.0.32</p>\n<h3 id=\"MySQL\">MySQL</h3>\n<p>docker内部<br>\n配置：/etc/my.cnf<br>\n数据：/var/lib/mysql<br>\n日志：/var/log/mysql</p>\n<h3 id=\"vsftpd\">vsftpd</h3>\n<p>docker exec -it vsftpd_prod_papsystem_vsftpd_01_1 /bin/bash<br>\n日志：/var/log/vsftpd/<br>\n文件：/home/vsftpd</p>\n<h3 id=\"nginx\">nginx</h3>\n<p>docker exec -it nginx_prod_papsystem_nginx_01_1 /bin/bash</p>\n<p>docker cp nginx_prod_papsystem_nginx_01_1:/etc/nginx /root/nginx</p>\n<p>firewall-cmd --permanent --add-rich-rule=‘rule family=“ipv4” source address=“192.168.10.66” port protocol=“tcp” port=“443” accept’</p>\n<p>sudo firewall-cmd --zone=public --permanent --add-port=80/tcp<br>\nsudo firewall-cmd --zone=public --permanent --add-port=443/tcp<br>\nsudo firewall-cmd --zone=public --permanent --add-port=444/tcp<br>\nfirewall-cmd --reload</p>\n"},{"_content":"\n### 配置双主\n\n两台主机均创建用户\n\n```\nCREATE USER 'repl'@'%' IDENTIFIED WITH mysql_native_password BY 'mysql#SZT7447';\nGRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\nflush privileges;\n```\n\n/etc/my.cnf 添加以下配置，注意修改server-id和master-host\n\n```shell\n## node101\nlog-bin=bin-log\nserver-id=11\n\n[client-server]\n\n#\n# include all files from the config directory\n#\n!includedir /etc/my.cnf.d\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=push_xxl_job,prod_papsystem_nacos\nmaster-host=192.168.140.12\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT7447\nmaster-retry-count=999\nmaster-connect-retry=60\n\n# node102\nlog-bin=bin-log\nserver-id=12\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=push_xxl_job,prod_papsystem_nacos\nmaster-host=192.168.140.11\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT7447\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n# node103\nlog-bin=bin-log\nserver-id=13\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=push_xxl_job,prod_papsystem_nacos\nmaster-host=192.168.140.11\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT7447\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n\n```\n\n\n\n```\nsystemctl restart mysqld && systemctl status mysqld\n\n# 192.168.10.185操作\nmysql> SHOW MASTER STATUS;\n\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.140.12',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT7447',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=157;\nSTART SLAVE;\n\n\n#192.168.140.12操作\nmysql> SHOW MASTER STATUS;\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.140.11',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT7447',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=157;\nSTART SLAVE;\n\n\n\n#192.168.140.13操作\nmysql> SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.140.12',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT7447',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=800;\nSTART SLAVE;\n```\n      MYSQL_SERVICE_HOST : 192.168.240.215","source":"_posts/07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Mysql双主.md","raw":"\n### 配置双主\n\n两台主机均创建用户\n\n```\nCREATE USER 'repl'@'%' IDENTIFIED WITH mysql_native_password BY 'mysql#SZT7447';\nGRANT REPLICATION SLAVE ON *.* TO 'repl'@'%';\nflush privileges;\n```\n\n/etc/my.cnf 添加以下配置，注意修改server-id和master-host\n\n```shell\n## node101\nlog-bin=bin-log\nserver-id=11\n\n[client-server]\n\n#\n# include all files from the config directory\n#\n!includedir /etc/my.cnf.d\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=push_xxl_job,prod_papsystem_nacos\nmaster-host=192.168.140.12\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT7447\nmaster-retry-count=999\nmaster-connect-retry=60\n\n# node102\nlog-bin=bin-log\nserver-id=12\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=push_xxl_job,prod_papsystem_nacos\nmaster-host=192.168.140.11\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT7447\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n# node103\nlog-bin=bin-log\nserver-id=13\n\n[client-server]\nbinlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema\nbinlog-do-db=push_xxl_job,prod_papsystem_nacos\nmaster-host=192.168.140.11\nmaster-port=3309\nmaster-user=repl\nmaster-pass=mysql#SZT7447\nmaster-retry-count=999\nmaster-connect-retry=60\n\n\n\n```\n\n\n\n```\nsystemctl restart mysqld && systemctl status mysqld\n\n# 192.168.10.185操作\nmysql> SHOW MASTER STATUS;\n\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.140.12',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT7447',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=157;\nSTART SLAVE;\n\n\n#192.168.140.12操作\nmysql> SHOW MASTER STATUS;\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.140.11',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT7447',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=157;\nSTART SLAVE;\n\n\n\n#192.168.140.13操作\nmysql> SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)\n\nSTOP SLAVE;\nCHANGE MASTER TO MASTER_HOST='192.168.140.12',MASTER_USER='repl',MASTER_PASSWORD='mysql#SZT7447',MASTER_PORT=3309,MASTER_LOG_FILE='bin-log.000001',MASTER_LOG_POS=800;\nSTART SLAVE;\n```\n      MYSQL_SERVICE_HOST : 192.168.240.215","slug":"07中间件/D.项目分类/4.战训-专区-推送系统/G.推送系统.Mysql双主","published":1,"date":"2023-09-01T13:06:38.130Z","updated":"2023-08-15T11:24:12.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o34002lzb8abrx04a1j","content":"<h3 id=\"配置双主\">配置双主</h3>\n<p>两台主机均创建用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &#x27;repl&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;mysql#SZT7447&#x27;;</span><br><span class=\"line\">GRANT REPLICATION SLAVE ON *.* TO &#x27;repl&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>/etc/my.cnf 添加以下配置，注意修改server-id和master-host</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># node101</span></span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=11</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># include all files from the config directory</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">!includedir /etc/my.cnf.d</span></span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=push_xxl_job,prod_papsystem_nacos</span><br><span class=\"line\">master-host=192.168.140.12</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT7447</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node102</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=12</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=push_xxl_job,prod_papsystem_nacos</span><br><span class=\"line\">master-host=192.168.140.11</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT7447</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node103</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=13</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=push_xxl_job,prod_papsystem_nacos</span><br><span class=\"line\">master-host=192.168.140.11</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT7447</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld &amp;&amp; systemctl status mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"># 192.168.10.185操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.140.12&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT7447&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=157;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.140.12操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.140.11&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT7447&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=157;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.140.13操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.140.12&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT7447&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=800;</span><br><span class=\"line\">START SLAVE;</span><br></pre></td></tr></table></figure>\n<pre><code>  MYSQL_SERVICE_HOST : 192.168.240.215\n</code></pre>\n","excerpt":"","more":"<h3 id=\"配置双主\">配置双主</h3>\n<p>两台主机均创建用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE USER &#x27;repl&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;mysql#SZT7447&#x27;;</span><br><span class=\"line\">GRANT REPLICATION SLAVE ON *.* TO &#x27;repl&#x27;@&#x27;%&#x27;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure>\n<p>/etc/my.cnf 添加以下配置，注意修改server-id和master-host</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># node101</span></span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=11</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"comment\"># include all files from the config directory</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"></span></span><br><span class=\"line\"><span class=\"language-bash\">!includedir /etc/my.cnf.d</span></span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=push_xxl_job,prod_papsystem_nacos</span><br><span class=\"line\">master-host=192.168.140.12</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT7447</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node102</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=12</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=push_xxl_job,prod_papsystem_nacos</span><br><span class=\"line\">master-host=192.168.140.11</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT7447</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">node103</span></span><br><span class=\"line\">log-bin=bin-log</span><br><span class=\"line\">server-id=13</span><br><span class=\"line\"></span><br><span class=\"line\">[client-server]</span><br><span class=\"line\">binlog-ignore-db=mysql,test,infromation_schema,sys,performance_schema</span><br><span class=\"line\">binlog-do-db=push_xxl_job,prod_papsystem_nacos</span><br><span class=\"line\">master-host=192.168.140.11</span><br><span class=\"line\">master-port=3309</span><br><span class=\"line\">master-user=repl</span><br><span class=\"line\">master-pass=mysql#SZT7447</span><br><span class=\"line\">master-retry-count=999</span><br><span class=\"line\">master-connect-retry=60</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld &amp;&amp; systemctl status mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"># 192.168.10.185操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.140.12&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT7447&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=157;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.140.12操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.140.11&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT7447&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=157;</span><br><span class=\"line\">START SLAVE;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#192.168.140.13操作</span><br><span class=\"line\">mysql&gt; SHOW MASTER STATUS;(查node102 MASTER_LOG_POS)</span><br><span class=\"line\"></span><br><span class=\"line\">STOP SLAVE;</span><br><span class=\"line\">CHANGE MASTER TO MASTER_HOST=&#x27;192.168.140.12&#x27;,MASTER_USER=&#x27;repl&#x27;,MASTER_PASSWORD=&#x27;mysql#SZT7447&#x27;,MASTER_PORT=3309,MASTER_LOG_FILE=&#x27;bin-log.000001&#x27;,MASTER_LOG_POS=800;</span><br><span class=\"line\">START SLAVE;</span><br></pre></td></tr></table></figure>\n<pre><code>  MYSQL_SERVICE_HOST : 192.168.240.215\n</code></pre>\n"},{"_content":"### 版本\n\n\n\n\n\n\n\ndocker exec -it redismaster_prod_verifyplatform_redis_01_1 /bin/bash\ndocker-compose exec redismaster_prod_verifyplatform_redis_01_1 bash\n\nredis-cli -h 192.168.10.191 -p 16379 -a redis#SZT6542 cluster nodes\n\n# cluster-replicas 1 表示每个主节点需要1个从节点\n\n\n\n\nredis-cli --cluster create 192.168.10.191:16379 192.168.10.192:16379 192.168.10.193:16379 --cluster-replicas 0 -a redis#SZT6542\n\n\nredis-cli --cluster add-node 192.168.10.191:16380 192.168.10.191:16379  --cluster-slave --cluster-master-id f36a947d8e71f6cea792edbe506f2731a7e07dd6 -a redis#SZT6542\n\nredis-cli --cluster add-node 192.168.10.192:16380 192.168.10.192:16379  --cluster-slave --cluster-master-id 52088be9d63006722e8f5a71cf207a7d9ebf6bcc -a redis#SZT6542\n\nredis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542\n\n\nroot@docker-node201:/data# redis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n>>> Adding node 192.168.10.193:16380 to cluster 192.168.10.193:16379\n>>> Performing Cluster Check (using node 192.168.10.193:16379)\nM: f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 192.168.10.193:16379\n   slots:[10923-16383] (5461 slots) master\nS: 15ee856c2dab5c3270c0fe69f713faf754ce0cd0 192.168.10.191:16380\n   slots: (0 slots) slave\n   replicates f36a947d8e71f6cea792edbe506f2731a7e07dd6\nM: f36a947d8e71f6cea792edbe506f2731a7e07dd6 192.168.10.191:16379\n   slots:[0-5460] (5461 slots) master\n   1 additional replica(s)\nM: 52088be9d63006722e8f5a71cf207a7d9ebf6bcc 192.168.10.192:16379\n   slots:[5461-10922] (5462 slots) master\n   1 additional replica(s)\nS: fa51266545cca84e38e9aa943a4be35a21a8a063 192.168.10.192:16380\n   slots: (0 slots) slave\n   replicates 52088be9d63006722e8f5a71cf207a7d9ebf6bcc\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n>>> Send CLUSTER MEET to node 192.168.10.193:16380 to make it join the cluster.\nWaiting for the cluster to join\n\n>>> Configure node as replica of 192.168.10.193:16379.\n[OK] New node added correctly.\n","source":"_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.A总览.md","raw":"### 版本\n\n\n\n\n\n\n\ndocker exec -it redismaster_prod_verifyplatform_redis_01_1 /bin/bash\ndocker-compose exec redismaster_prod_verifyplatform_redis_01_1 bash\n\nredis-cli -h 192.168.10.191 -p 16379 -a redis#SZT6542 cluster nodes\n\n# cluster-replicas 1 表示每个主节点需要1个从节点\n\n\n\n\nredis-cli --cluster create 192.168.10.191:16379 192.168.10.192:16379 192.168.10.193:16379 --cluster-replicas 0 -a redis#SZT6542\n\n\nredis-cli --cluster add-node 192.168.10.191:16380 192.168.10.191:16379  --cluster-slave --cluster-master-id f36a947d8e71f6cea792edbe506f2731a7e07dd6 -a redis#SZT6542\n\nredis-cli --cluster add-node 192.168.10.192:16380 192.168.10.192:16379  --cluster-slave --cluster-master-id 52088be9d63006722e8f5a71cf207a7d9ebf6bcc -a redis#SZT6542\n\nredis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542\n\n\nroot@docker-node201:/data# redis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542\nWarning: Using a password with '-a' or '-u' option on the command line interface may not be safe.\n>>> Adding node 192.168.10.193:16380 to cluster 192.168.10.193:16379\n>>> Performing Cluster Check (using node 192.168.10.193:16379)\nM: f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 192.168.10.193:16379\n   slots:[10923-16383] (5461 slots) master\nS: 15ee856c2dab5c3270c0fe69f713faf754ce0cd0 192.168.10.191:16380\n   slots: (0 slots) slave\n   replicates f36a947d8e71f6cea792edbe506f2731a7e07dd6\nM: f36a947d8e71f6cea792edbe506f2731a7e07dd6 192.168.10.191:16379\n   slots:[0-5460] (5461 slots) master\n   1 additional replica(s)\nM: 52088be9d63006722e8f5a71cf207a7d9ebf6bcc 192.168.10.192:16379\n   slots:[5461-10922] (5462 slots) master\n   1 additional replica(s)\nS: fa51266545cca84e38e9aa943a4be35a21a8a063 192.168.10.192:16380\n   slots: (0 slots) slave\n   replicates 52088be9d63006722e8f5a71cf207a7d9ebf6bcc\n[OK] All nodes agree about slots configuration.\n>>> Check for open slots...\n>>> Check slots coverage...\n[OK] All 16384 slots covered.\n>>> Send CLUSTER MEET to node 192.168.10.193:16380 to make it join the cluster.\nWaiting for the cluster to join\n\n>>> Configure node as replica of 192.168.10.193:16379.\n[OK] New node added correctly.\n","slug":"07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.A总览","published":1,"date":"2023-09-01T13:06:38.160Z","updated":"2023-08-05T14:56:52.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o36002mzb8a0w85fxwy","content":"<h3 id=\"版本\">版本</h3>\n<p>docker exec -it redismaster_prod_verifyplatform_redis_01_1 /bin/bash<br>\ndocker-compose exec redismaster_prod_verifyplatform_redis_01_1 bash</p>\n<p>redis-cli -h 192.168.10.191 -p 16379 -a redis#SZT6542 cluster nodes</p>\n<h1>cluster-replicas 1 表示每个主节点需要1个从节点</h1>\n<p>redis-cli --cluster create 192.168.10.191:16379 192.168.10.192:16379 192.168.10.193:16379 --cluster-replicas 0 -a redis#SZT6542</p>\n<p>redis-cli --cluster add-node 192.168.10.191:16380 192.168.10.191:16379  --cluster-slave --cluster-master-id f36a947d8e71f6cea792edbe506f2731a7e07dd6 -a redis#SZT6542</p>\n<p>redis-cli --cluster add-node 192.168.10.192:16380 192.168.10.192:16379  --cluster-slave --cluster-master-id 52088be9d63006722e8f5a71cf207a7d9ebf6bcc -a redis#SZT6542</p>\n<p>redis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542</p>\n<p>root@docker-node201:/data# redis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542<br>\nWarning: Using a password with ‘-a’ or ‘-u’ option on the command line interface may not be safe.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Adding node 192.168.10.193:16380 to cluster 192.168.10.193:16379<br>\nPerforming Cluster Check (using node 192.168.10.193:16379)<br>\nM: f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 192.168.10.193:16379<br>\nslots:[10923-16383] (5461 slots) master<br>\nS: 15ee856c2dab5c3270c0fe69f713faf754ce0cd0 192.168.10.191:16380<br>\nslots: (0 slots) slave<br>\nreplicates f36a947d8e71f6cea792edbe506f2731a7e07dd6<br>\nM: f36a947d8e71f6cea792edbe506f2731a7e07dd6 192.168.10.191:16379<br>\nslots:[0-5460] (5461 slots) master<br>\n1 additional replica(s)<br>\nM: 52088be9d63006722e8f5a71cf207a7d9ebf6bcc 192.168.10.192:16379<br>\nslots:[5461-10922] (5462 slots) master<br>\n1 additional replica(s)<br>\nS: fa51266545cca84e38e9aa943a4be35a21a8a063 192.168.10.192:16380<br>\nslots: (0 slots) slave<br>\nreplicates 52088be9d63006722e8f5a71cf207a7d9ebf6bcc<br>\n[OK] All nodes agree about slots configuration.<br>\nCheck for open slots…<br>\nCheck slots coverage…<br>\n[OK] All 16384 slots covered.<br>\nSend CLUSTER MEET to node 192.168.10.193:16380 to make it join the cluster.<br>\nWaiting for the cluster to join</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Configure node as replica of 192.168.10.193:16379.<br>\n[OK] New node added correctly.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n","excerpt":"","more":"<h3 id=\"版本\">版本</h3>\n<p>docker exec -it redismaster_prod_verifyplatform_redis_01_1 /bin/bash<br>\ndocker-compose exec redismaster_prod_verifyplatform_redis_01_1 bash</p>\n<p>redis-cli -h 192.168.10.191 -p 16379 -a redis#SZT6542 cluster nodes</p>\n<h1>cluster-replicas 1 表示每个主节点需要1个从节点</h1>\n<p>redis-cli --cluster create 192.168.10.191:16379 192.168.10.192:16379 192.168.10.193:16379 --cluster-replicas 0 -a redis#SZT6542</p>\n<p>redis-cli --cluster add-node 192.168.10.191:16380 192.168.10.191:16379  --cluster-slave --cluster-master-id f36a947d8e71f6cea792edbe506f2731a7e07dd6 -a redis#SZT6542</p>\n<p>redis-cli --cluster add-node 192.168.10.192:16380 192.168.10.192:16379  --cluster-slave --cluster-master-id 52088be9d63006722e8f5a71cf207a7d9ebf6bcc -a redis#SZT6542</p>\n<p>redis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542</p>\n<p>root@docker-node201:/data# redis-cli --cluster add-node 192.168.10.193:16380 192.168.10.193:16379  --cluster-slave --cluster-master-id f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 -a redis#SZT6542<br>\nWarning: Using a password with ‘-a’ or ‘-u’ option on the command line interface may not be safe.</p>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Adding node 192.168.10.193:16380 to cluster 192.168.10.193:16379<br>\nPerforming Cluster Check (using node 192.168.10.193:16379)<br>\nM: f25071cfa4a22e3f1b0032c0da51cbc1ad5c26c4 192.168.10.193:16379<br>\nslots:[10923-16383] (5461 slots) master<br>\nS: 15ee856c2dab5c3270c0fe69f713faf754ce0cd0 192.168.10.191:16380<br>\nslots: (0 slots) slave<br>\nreplicates f36a947d8e71f6cea792edbe506f2731a7e07dd6<br>\nM: f36a947d8e71f6cea792edbe506f2731a7e07dd6 192.168.10.191:16379<br>\nslots:[0-5460] (5461 slots) master<br>\n1 additional replica(s)<br>\nM: 52088be9d63006722e8f5a71cf207a7d9ebf6bcc 192.168.10.192:16379<br>\nslots:[5461-10922] (5462 slots) master<br>\n1 additional replica(s)<br>\nS: fa51266545cca84e38e9aa943a4be35a21a8a063 192.168.10.192:16380<br>\nslots: (0 slots) slave<br>\nreplicates 52088be9d63006722e8f5a71cf207a7d9ebf6bcc<br>\n[OK] All nodes agree about slots configuration.<br>\nCheck for open slots…<br>\nCheck slots coverage…<br>\n[OK] All 16384 slots covered.<br>\nSend CLUSTER MEET to node 192.168.10.193:16380 to make it join the cluster.<br>\nWaiting for the cluster to join</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<blockquote>\n<p>Configure node as replica of 192.168.10.193:16379.<br>\n[OK] New node added correctly.</p>\n</blockquote>\n</blockquote>\n</blockquote>\n"},{"_content":"\nyum localinstall *.rpm -y\n\n\nfirewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;\nfirewall-cmd --reload\n\n\n```shell\n# /etc/keepalived/closekeepalived.sh\n\n#!/bin/bash\n/usr/bin/mysql -uroot -pmysql#SZT7468 -e \"show status\" &>/dev/null\nif [ $? -ne 0 ] ;then\n    systemctl stop keepalived && echo \"keepalived已关闭，请检查！\"+ $(date \"+%Y-%m-%d %H:%M:%S\") >> /etc/keepalived/keepalived.log\nfi\n\n\n```\n\n\n```shell\n#------------138配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node201\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 238\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        10.128.136.135\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n\n\n#------------139配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node202\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 139\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        10.128.136.135\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n```","source":"_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Keepalived.md","raw":"\nyum localinstall *.rpm -y\n\n\nfirewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;\nfirewall-cmd --reload\n\n\n```shell\n# /etc/keepalived/closekeepalived.sh\n\n#!/bin/bash\n/usr/bin/mysql -uroot -pmysql#SZT7468 -e \"show status\" &>/dev/null\nif [ $? -ne 0 ] ;then\n    systemctl stop keepalived && echo \"keepalived已关闭，请检查！\"+ $(date \"+%Y-%m-%d %H:%M:%S\") >> /etc/keepalived/keepalived.log\nfi\n\n\n```\n\n\n```shell\n#------------138配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node201\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state MASTER\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 238\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        10.128.136.135\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n\n\n#------------139配置--------------\n! Configuration File for keepalived\n\nglobal_defs {\n   router_id node202\n}\n\nvrrp_script check_run {\n   script \"/etc/keepalived/closekeepalived.sh\"\n   interval 2\n}\n\nvrrp_instance VI_1 {\n    state BACKUP\n    interface enp2s0f1\n    virtual_router_id 51\n    priority 139\n    advert_int 1\n    authentication {\n        auth_type PASS\n        auth_pass 1111\n        }\n    virtual_ipaddress {\n        10.128.136.135\n        }\n    track_script {\n        check_run\n        }\n}\n\n\n```","slug":"07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.Keepalived","published":1,"date":"2023-09-01T13:06:38.170Z","updated":"2023-08-17T12:51:02.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o37002nzb8a2vbb3yda","content":"<p>yum localinstall *.rpm -y</p>\n<p>firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;<br>\nfirewall-cmd --reload</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/etc/keepalived/closekeepalived.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/mysql -uroot -pmysql#SZT7468 -e &quot;show status&quot; &amp;&gt;/dev/null</span><br><span class=\"line\">if [ $? -ne 0 ] ;then</span><br><span class=\"line\">    systemctl stop keepalived &amp;&amp; echo &quot;keepalived已关闭，请检查！&quot;+ $(date &quot;+%Y-%m-%d %H:%M:%S&quot;) &gt;&gt; /etc/keepalived/keepalived.log</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------138配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node201</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 238</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        10.128.136.135</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------139配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node202</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 139</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        10.128.136.135</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","excerpt":"","more":"<p>yum localinstall *.rpm -y</p>\n<p>firewall-cmd --direct --permanent --add-rule ipv4 filter INPUT 0 --in-interface  enp2s0f1 --destination 224.0.0.18 --protocol vrrp -j ACCEPT;<br>\nfirewall-cmd --reload</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">/etc/keepalived/closekeepalived.sh</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\">/usr/bin/mysql -uroot -pmysql#SZT7468 -e &quot;show status&quot; &amp;&gt;/dev/null</span><br><span class=\"line\">if [ $? -ne 0 ] ;then</span><br><span class=\"line\">    systemctl stop keepalived &amp;&amp; echo &quot;keepalived已关闭，请检查！&quot;+ $(date &quot;+%Y-%m-%d %H:%M:%S&quot;) &gt;&gt; /etc/keepalived/keepalived.log</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------138配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node201</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state MASTER</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 238</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        10.128.136.135</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">------------139配置--------------</span></span><br><span class=\"line\">! Configuration File for keepalived</span><br><span class=\"line\"></span><br><span class=\"line\">global_defs &#123;</span><br><span class=\"line\">   router_id node202</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_script check_run &#123;</span><br><span class=\"line\">   script &quot;/etc/keepalived/closekeepalived.sh&quot;</span><br><span class=\"line\">   interval 2</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">vrrp_instance VI_1 &#123;</span><br><span class=\"line\">    state BACKUP</span><br><span class=\"line\">    interface enp2s0f1</span><br><span class=\"line\">    virtual_router_id 51</span><br><span class=\"line\">    priority 139</span><br><span class=\"line\">    advert_int 1</span><br><span class=\"line\">    authentication &#123;</span><br><span class=\"line\">        auth_type PASS</span><br><span class=\"line\">        auth_pass 1111</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    virtual_ipaddress &#123;</span><br><span class=\"line\">        10.128.136.135</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    track_script &#123;</span><br><span class=\"line\">        check_run</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"},{"_content":"CREATE DATABASE `idszt_test` CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_general_ci';\n\n\n\nCREATE TABLE `idszt_test`.`table_idszt_test`  (\n  `id` int NOT NULL,\n  `name` varchar(255) NULL,\n  PRIMARY KEY (`id`)\n);\n\n\nINSERT INTO `idszt_test`.`table_idszt_test` (`id`, `name`) VALUES (1, 'kongkong');\n","source":"_posts/07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.mysql.md","raw":"CREATE DATABASE `idszt_test` CHARACTER SET 'utf8mb4' COLLATE 'utf8mb4_general_ci';\n\n\n\nCREATE TABLE `idszt_test`.`table_idszt_test`  (\n  `id` int NOT NULL,\n  `name` varchar(255) NULL,\n  PRIMARY KEY (`id`)\n);\n\n\nINSERT INTO `idszt_test`.`table_idszt_test` (`id`, `name`) VALUES (1, 'kongkong');\n","slug":"07中间件/D.项目分类/5.机场-深圳-核验系统/H.核验平台.mysql","published":1,"date":"2023-09-01T13:06:38.170Z","updated":"2023-08-17T12:56:18.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o37002ozb8a0ken1z8q","content":"<p>CREATE DATABASE <code>idszt_test</code> CHARACTER SET ‘utf8mb4’ COLLATE ‘utf8mb4_general_ci’;</p>\n<p>CREATE TABLE <code>idszt_test</code>.<code>table_idszt_test</code>  (<br>\n<code>id</code> int NOT NULL,<br>\n<code>name</code> varchar(255) NULL,<br>\nPRIMARY KEY (<code>id</code>)<br>\n);</p>\n<p>INSERT INTO <code>idszt_test</code>.<code>table_idszt_test</code> (<code>id</code>, <code>name</code>) VALUES (1, ‘kongkong’);</p>\n","excerpt":"","more":"<p>CREATE DATABASE <code>idszt_test</code> CHARACTER SET ‘utf8mb4’ COLLATE ‘utf8mb4_general_ci’;</p>\n<p>CREATE TABLE <code>idszt_test</code>.<code>table_idszt_test</code>  (<br>\n<code>id</code> int NOT NULL,<br>\n<code>name</code> varchar(255) NULL,<br>\nPRIMARY KEY (<code>id</code>)<br>\n);</p>\n<p>INSERT INTO <code>idszt_test</code>.<code>table_idszt_test</code> (<code>id</code>, <code>name</code>) VALUES (1, ‘kongkong’);</p>\n"},{"_content":"### 版本\nfilebeat-8.8.1-linux-x86_64\n\nzookeeper:3.7.1\nwurstmeister/kafka:2.13-2.8.1\n\nelasticsearch:7.15.2\nlogstash:7.15.2\nkibana:7.15.2\n\n\n\n\n\n\n","source":"_posts/07中间件/D.项目分类/6.天翼云-入口-网关/H.公网入口.A总览.md","raw":"### 版本\nfilebeat-8.8.1-linux-x86_64\n\nzookeeper:3.7.1\nwurstmeister/kafka:2.13-2.8.1\n\nelasticsearch:7.15.2\nlogstash:7.15.2\nkibana:7.15.2\n\n\n\n\n\n\n","slug":"07中间件/D.项目分类/6.天翼云-入口-网关/H.公网入口.A总览","published":1,"date":"2023-09-01T13:06:38.190Z","updated":"2023-07-22T10:32:46.000Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clysk9o38002pzb8a09g8cjxd","content":"<h3 id=\"版本\">版本</h3>\n<p>filebeat-8.8.1-linux-x86_64</p>\n<p>zookeeper:3.7.1<br>\nwurstmeister/kafka:2.13-2.8.1</p>\n<p>elasticsearch:7.15.2<br>\nlogstash:7.15.2<br>\nkibana:7.15.2</p>\n","excerpt":"","more":"<h3 id=\"版本\">版本</h3>\n<p>filebeat-8.8.1-linux-x86_64</p>\n<p>zookeeper:3.7.1<br>\nwurstmeister/kafka:2.13-2.8.1</p>\n<p>elasticsearch:7.15.2<br>\nlogstash:7.15.2<br>\nkibana:7.15.2</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}